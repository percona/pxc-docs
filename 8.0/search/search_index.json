{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Percona XtraDB Cluster 8.0 Documentation","text":"<p>This documentation is for the latest release: Percona XtraDB Cluster 8.0.36-28 (Release Notes).</p> <p>Percona XtraDB Cluster is a database clustering solution for MySQL. It ensures high availability, prevents downtime and data loss, and provides linear scalability for a growing environment.</p>"},{"location":"index.html#features-of-percona-xtradb-cluster","title":"Features of Percona XtraDB Cluster","text":"Feature Details Synchronous replication Data is written to all nodes simultaneously, or not written at all in case of a failure even on a single node Multi-source replication Any node can trigger a data update. True parallel replication Multiple threads on replica performing replication on row level Automatic node provisioning You simply add a node and it automatically syncs. Data consistency No more unsynchronized nodes. PXC Strict Mode Avoids the use of tech preview features and unsupported features Configuration script for ProxySQL Percona XtraDB Cluster includes the <code>proxysql-admin</code> tool that automatically configures Percona XtraDB Cluster nodes using ProxySQL. Automatic configuration of SSL encryption Percona XtraDB Cluster includes the <code>pxc-encrypt-cluster-traffic</code> variable that enables automatic configuration of SSL encryption Optimized Performance Percona XtraDB Cluster performance is optimized to scale with a growing production workload <p>Percona XtraDB Cluster 8.0 is fully compatible with MySQL Server Community Edition 8.0 and Percona Server for MySQL 8.0. The cluster has the following compatibilities:</p> <ul> <li> <p>Data - use the data created by any MySQL variant.</p> </li> <li> <p>Application - no changes or minimal application changes are required for an application to use the cluster.</p> </li> </ul> <p>See also</p> <p>Overview of changes in the most recent PXC release</p> <ul> <li> <p>Important changes in Percona XtraDB Cluster 8.0</p> </li> <li> <p>MySQL Community Edition</p> </li> <li> <p>Percona Server for MySQL</p> </li> <li> <p>How We Made Percona XtraDB Cluster Scale</p> </li> </ul>"},{"location":"index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"add-node.html","title":"Add nodes to cluster","text":"<p>New nodes that are properly configured are provisioned automatically.  When you start a node with the address of at least one other running node in the <code>wsrep_cluster_address</code> variable, this node automatically joins and synchronizes with the cluster.</p> <p>Note</p> <p>Any existing data and configuration will be overwritten to match the data and configuration of the DONOR node. Do not join several nodes at the same time to avoid overhead due to large amounts of traffic when a new node joins. </p> <p>Percona XtraDB Cluster uses Percona XtraBackup for State Snapshot Transfer and the <code>wsrep_sst_method</code> variable is always set to <code>xtrabackup-v2</code>.</p>"},{"location":"add-node.html#start-the-second-node","title":"Start the second node","text":"<p>Start the second node using the following command:</p> <pre><code>[root@pxc2 ~]# systemctl start mysql\n</code></pre> <p>After the server starts, it receives SST automatically.</p> <p>To check the status of the second node, run the following:</p> <pre><code>mysql@pxc2&gt; show status like 'wsrep%';\n</code></pre> Expected output <pre><code>+----------------------------------+--------------------------------------------------+\n| Variable_name                    | Value                                            |\n+----------------------------------+--------------------------------------------------+\n| wsrep_local_state_uuid           | a08247c1-5807-11ea-b285-e3a50c8efb41             |\n| ...                              | ...                                              |\n| wsrep_local_state                | 4                                                |\n| wsrep_local_state_comment        | Synced                                           |\n| ...                              |                                                  |\n| wsrep_cluster_size               | 2                                                |\n| wsrep_cluster_status             | Primary                                          |\n| wsrep_connected                  | ON                                               |\n| ...                              | ...                                              |\n| wsrep_provider_capabilities      | :MULTI_MASTER:CERTIFICATION: ...                 |\n| wsrep_provider_name              | Galera                                           |\n| wsrep_provider_vendor            | Codership Oy &lt;info@codership.com&gt;                |\n| wsrep_provider_version           | 4.3(r752664d)                                    |\n| wsrep_ready                      | ON                                               |\n| ...                              | ...                                              | \n+----------------------------------+--------------------------------------------------+\n75 rows in set (0.00 sec)\n</code></pre> <p>The output of <code>SHOW STATUS</code> shows that the new node has been successfully added to the cluster.  The cluster size is now 2 nodes, it is the primary component, and it is fully connected and ready to receive write-set replication.</p> <p>If the state of the second node is <code>Synced</code> as in the previous example, then the node received full SST is synchronized with the cluster, and you can proceed to add the next node.</p> <p>Note</p> <p>If the state of the node is <code>Joiner</code>, it means that SST hasn\u2019t finished. Do not add new nodes until all others are in <code>Synced</code> state. </p>"},{"location":"add-node.html#starting-the-third-node","title":"Starting the Third Node","text":"<p>To add the third node, start it as usual:</p> <pre><code>[root@pxc3 ~]# systemctl start mysql\n</code></pre> <p>To check the status of the third node, run the following:</p> <pre><code>mysql@pxc3&gt; show status like 'wsrep%';\n</code></pre> <p>The output shows that the new node has been successfully added to the cluster. Cluster size is now 3 nodes, it is the primary component, and it is fully connected and ready to receive write-set replication.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | c2883338-834d-11e2-0800-03c9c68e41ec |\n| ...                        | ...                                  |\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n| ...                        | ...                                  |\n| wsrep_cluster_size         | 3                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n| ...                        | ...                                  |\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre>"},{"location":"add-node.html#next-steps","title":"Next steps","text":"<p>When you add all nodes to the cluster, you can verify replication by running queries and manipulating data on nodes to see if these changes are synchronized across the cluster.</p>"},{"location":"add-node.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"apparmor.html","title":"Enable AppArmor","text":"<p>Percona XtraDB Cluster contains several AppArmor profiles. Multiple profiles allow for easier maintenance because the <code>mysqld</code> profile is decoupled from the SST script profile. This separation allows the introduction of other SST methods or scripts with their own profiles.</p> <p>The following profiles are available:</p> <ul> <li> <p>An extended version of the Percona Server profile which allows the execution of SST script.</p> </li> <li> <p>An xtrabackup-v2 SST script profile located in <code>/etc/apparmor.d/usr.bin.wsrep_sst_xtrabackup-v2</code></p> </li> </ul> <p>The <code>mysqld</code> profile allows the execution of the SST script in PUx mode with the /{usr/}bin/wsrep_sst_*PUx command. The profile is applied if the script contains a profile. The SST script runs in unconfined mode if the script does not contain a profile. The system administrator can change the execution mode to Pix. This action causes a fallback to inherited mode in case the SST script profile is absent.</p>"},{"location":"apparmor.html#profile-adjustments","title":"Profile adjustments","text":"<p>The <code>mysqld</code> profile and the <code>SST</code> script profile can be adjusted, such as moving the data directory, in the same way as modifying the mysqld profile  in Percona Server.</p>"},{"location":"apparmor.html#work-with-pxc_encrypt_cluster_traffic","title":"Work with <code>pxc_encrypt_cluster_traffic</code>","text":"<p>By default, the <code>pxc_encrypt_cluster_traffic</code> is <code>ON</code>, which means that all cluster traffic is protected with certificates. However, these certificates cannot be located in the data directory since that location is overwritten during the SST process.</p> <p>Set up the certificates describes the certificate setup.</p> <p>The following AppArmor profile rule grants access to certificates located in /etc/mysql/certs. You must be root or have <code>sudo</code> privileges.</p> <pre><code># Allow config access\n  /etc/mysql/** r,\n</code></pre> <p>This rule is present in both profiles (usr.sbin.mysqld and usr.bin.wsrep_sst_xtrabackup-v2). The rule allows the administrator to store the certificates anywhere inside of the /etc/mysql/ directory. If the certificates are located outside of the specified directory, you must add an additional rule which allows access to the certificates in both profiles. The rule must have the path to the certificates location, like the following:</p> <pre><code># Allow config access\n  /path/to/certificates/* r,\n</code></pre> <p>The server certificates must be accessible to the mysql user and are readable only by this user.</p>"},{"location":"apparmor.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"apt.html","title":"Install Percona XtraDB Cluster on Debian or Ubuntu","text":"<p>Specific information on the supported platforms, products, and versions is described in Percona Software and Platform Lifecycle.</p> <p>The packages are available in the official Percona software repository and on the download page. It is recommended to install Percona XtraDB Cluster from the official repository using APT.</p> <p>We gather Telemetry data in the Percona packages and Docker images.</p>"},{"location":"apt.html#prerequisites","title":"Prerequisites","text":"<ul> <li>You need to have root access on the node where you will be installing Percona XtraDB Cluster (either logged in as a user with root privileges or be able to run commands with sudo).</li> </ul> <p>See also</p> <p>For more information, see Enabling AppArmor.</p>"},{"location":"apt.html#install-from-repository","title":"Install from Repository","text":"<ol> <li> <p>Update the sytem:</p> <pre><code>sudo apt update\n</code></pre> </li> <li> <p>Install the necessary packages:</p> <pre><code>sudo apt install -y wget gnupg2 lsb-release curl\n</code></pre> </li> <li> <p>Download the repository package</p> <pre><code>wget https://repo.percona.com/apt/percona-release_latest.generic_all.deb\n</code></pre> </li> <li> <p>Install the package with <code>dpkg</code>:</p> <pre><code>sudo dpkg -i percona-release_latest.generic_all.deb\n</code></pre> </li> <li> <p>Refresh the local cache to update the package information:</p> <pre><code>sudo apt update\n</code></pre> </li> <li> <p>Enable the <code>release</code> repository for Percona XtraDB Cluster:</p> <pre><code>sudo percona-release setup pxc80\n</code></pre> </li> <li> <p>Install the cluster:</p> <pre><code>sudo apt install -y percona-xtradb-cluster\n</code></pre> </li> </ol> <p>During the installation, you are requested to provide a password for the <code>root</code> user on the database node.</p> <p>Note</p> <p>If needed, you could also install the <code>percona-xtradb-cluster-full</code> meta-package, which includes the following additional packages:</p> <ul> <li> <p><code>libperconaserverclient21</code></p> </li> <li> <p><code>libperconaserverclient21-dev</code></p> </li> <li> <p><code>percona-xtradb-cluster</code></p> </li> <li> <p><code>percona-xtradb-cluster-client</code></p> </li> <li> <p><code>percona-xtradb-cluster-common</code></p> </li> <li> <p><code>percona-xtradb-cluster-dbg</code></p> </li> <li> <p><code>percona-xtradb-cluster-full</code></p> </li> <li> <p><code>percona-xtradb-cluster-garbd</code></p> </li> <li> <p><code>percona-xtradb-cluster-garbd-debug</code></p> </li> <li> <p><code>percona-xtradb-cluster-server</code></p> </li> <li> <p><code>percona-xtradb-cluster-server-debug</code></p> </li> <li> <p><code>percona-xtradb-cluster-source</code></p> </li> <li> <p><code>percona-xtradb-cluster-test</code></p> </li> </ul>"},{"location":"apt.html#next-steps","title":"Next steps","text":"<p>After you install Percona XtraDB Cluster and stop the <code>mysql</code> service, configure the node according to the procedure described in Configuring Nodes for Write-Set Replication.</p>"},{"location":"apt.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"bootstrap.html","title":"Bootstrap the first node","text":"<p>After you configure all PXC nodes, initialize the cluster by bootstrapping the first node.  The initial node must contain all the data that you want to be replicated to other nodes.</p> <p>Bootstrapping implies starting the first node without any known cluster addresses: if the <code>wsrep_cluster_address</code> variable is empty, Percona XtraDB Cluster assumes that this is the first node and initializes the cluster.</p> <p>Instead of changing the configuration, start the first node using the following command:</p> <pre><code>[root@pxc1 ~]# systemctl start mysql@bootstrap.service\n</code></pre> <p>When you start the node using the previous command, it runs in bootstrap mode with <code>wsrep_cluster_address=gcomm://</code>. This tells the node to initialize the cluster with <code>wsrep_cluster_conf_id</code> variable set to <code>1</code>. After you add other nodes to the cluster, you can then restart this node as normal, and it will use standard configuration again.</p> <p>Note</p> <p>A service started with <code>mysql@bootstrap</code> must be stopped using the same command. For example, the <code>systemctl stop mysql</code> command does not stop an instance started with the <code>mysql@bootstrap</code> command.</p> <p>To make sure that the cluster has been initialized, run the following:</p> <pre><code>mysql@pxc1&gt; show status like 'wsrep%';\n</code></pre> <p>The output shows that the cluster size is 1 node, it is the primary component, the node is in the <code>Synced</code> state, it is fully connected and ready for write-set replication.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | c2883338-834d-11e2-0800-03c9c68e41ec |\n| ...                        | ...                                  |\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n| ...                        | ...                                  |\n| wsrep_cluster_size         | 1                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n| ...                        | ...                                  |\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre>"},{"location":"bootstrap.html#next-steps","title":"Next steps","text":"<p>After initializing the cluster, you can add other nodes.</p>"},{"location":"bootstrap.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"certification.html","title":"Certification in Percona XtraDB Cluster","text":"<p>Percona XtraDB Cluster replicates actions executed on one node to all other nodes in the cluster, and makes it fast enough to appear as if it is synchronous (virtually synchronous).</p> <p>The following types of actions exist:</p> <ul> <li> <p>DDL actions are executed using Total Order Isolation (TOI). We can ignore Rolling Schema Upgrades (ROI).</p> </li> <li> <p>DML actions are executed using normal Galera replication protocol.</p> </li> </ul> <p>Note</p> <p>This manual page assumes the reader is aware of TOI and MySQL replication protocol.</p> <p>DML (<code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code>) operations effectively change the state of the database, and all such operations are recorded in XtraDB by registering a unique object identifier (key) for each change (an update or a new addition).</p> <ul> <li>A transaction can change an arbitrary number of different data objects.   Each such object change is recorded in XtraDB   using an <code>append_key</code> operation.   An <code>append_key</code> operation registers the key of the data object   that has undergone change by the transaction.   The key for rows can be represented in three parts as   <code>db_name</code>, <code>table_name</code>, and <code>pk_columns_for_table</code>   (if <code>pk</code> is absent, a hash of the complete row is calculated).</li> </ul> <p>This ensures that there is quick and short meta information   about the rows that this transaction has touched or modified.   This information is passed on as part of the write-set for certification   to all the nodes in the cluster while the transaction is in the commit phase.</p> <ul> <li> <p>For a transaction to commit, it has to pass XtraDB/Galera certification,   ensuring that transactions don\u2019t conflict with any other changes   posted on the cluster group/channel.   Certification will add the keys modified by a given transaction   to its own central certification vector (CCV),   represented by <code>cert_index_ng</code>.   If the said key is already part of the vector,   then conflict resolution checks are triggered.</p> </li> <li> <p>Conflict resolution traces the reference transaction   (that last modified this item in the cluster group).   If this reference transaction is from some other node,   that suggests the same data was modified by the other node,   and changes of that node have been certified by the local node   that is executing the check.   In such cases, the transaction that arrived later fails to certify.</p> </li> </ul> <p>Changes made to database objects are bin-logged. This is similar to how MySQL does it for replication with its Source-Replica ecosystem, except that a packet of changes from a given transaction is created and named as a write-set.</p> <p>Once the client/user issues a <code>COMMIT</code>, Percona XtraDB Cluster will run a commit hook. Commit hooks ensure the following:</p> <ul> <li> <p>Flush the binary logs.</p> </li> <li> <p>Check if the transaction needs replication (not needed for read-only transactions like <code>SELECT</code>).</p> </li> <li> <p>If a transaction needs replication, then it invokes a pre-commit hook in the Galera ecosystem. During this pre-commit hook, a write-set is written in the group channel by a replicate operation. All nodes (including the one that executed the transaction) subscribe to this group-channel and read the write-set.</p> </li> <li> <p><code>gcs_recv_thread</code> is the first to receive the packet, which is then processed through different action handlers.</p> </li> <li> <p>Each packet read from the group-channel is assigned an <code>id</code>, which is a locally maintained counter by each node in sync with the group. When any new node joins the group/cluster, a seed-id for it is initialized to the current active id from group/cluster.</p> </li> </ul> <p>There is an inherent assumption/protocol enforcement   that all nodes read the packet from a channel in the same order,   and that way even though each packet doesn\u2019t carry <code>id</code> information,   it is inherently established using the locally maintained <code>id</code> value.</p>"},{"location":"certification.html#common-situation","title":"Common situation","text":"<p>The following example shows what happens in a common situation. <code>act_id</code> is incremented and assigned only for totally ordered actions, and only in primary state (skip messages while in state exchange).</p> <pre><code>$ rcvd-&gt;id = ++group-&gt;act_id_;\n</code></pre> <p>Note</p> <p>This is an amazing way to solve the problem of the id coordination in multi-source systems. Otherwise a node will have to first get an id from central system or through a separate agreed protocol, and then use it for the packet, thereby doubling the round-trip time.</p>"},{"location":"certification.html#conflicts","title":"Conflicts","text":"<p>The following happens if two nodes get ready with their packet at same time:</p> <ol> <li> <p>Both nodes will be allowed to put the packet on the channel. That means the channel will see packets from different nodes queued one behind another.</p> </li> <li> <p>The following example shows what happens if two nodes modify same set of rows. Nodes are in sync until this point:</p> <pre><code>$ create -&gt; insert (1,2,3,4)\n</code></pre> <ul> <li> <p>Node 1: <code>update i = i + 10;</code></p> </li> <li> <p>Node 2: <code>update i = i + 100;</code></p> </li> </ul> <p>Let\u2019s associate transaction ID (<code>trx-id</code>) for an update transaction that is executed on Node 1 and Node 2 in parallel. Although the real algorithm is more involved (with <code>uuid</code> + <code>seqno</code>), it is conceptually the same, so we are using <code>trx_id</code>.</p> <ul> <li> <p>Node 1: <code>update action: trx-id=n1x</code></p> </li> <li> <p>Node 2: <code>update action: trx-id=n2x</code></p> </li> </ul> <p>Both node packets are added to the channel, but the transactions are conflicting. The protocol says: FIRST WRITE WINS.</p> <p>So in this case, whoever is first to write to the channel will get certified. Let\u2019s say Node 2 is first to write the packet, and then Node 1 makes changes immediately after it.</p> <p>Note</p> <p>Each node subscribes to all packages, including its own package.</p> <ul> <li> <p>Node 2 will see its own packet and will process it. Then it will see the packet from Node 1, try to certify it, and fail.</p> </li> <li> <p>Node 1 will see the packet from Node 2 and will process it.</p> </li> </ul> <p>Note</p> <p>InnoDB allows isolation, so Node 1 can process packets from Node 2 independent of Node 1 transaction changes</p> <p>Then Node 1 will see its own packet, try to certify it, and fail.</p> <p>Note</p> <p>Even though the packet originated from Node 1, it will undergo certification to catch cases like these.</p> </li> </ol>"},{"location":"certification.html#resolve-certification-conflicts","title":"Resolve certification conflicts","text":"<p>The certification protocol can be described using the previous example. The central certification vector (CCV) is updated to reflect reference transaction.</p> <ul> <li>Node 2 sees its own packet for certification, adds it to its local CCV and performs certification checks. Once these checks pass, it updates the reference transaction by setting it to <code>n2x</code>.</li> </ul> <p>Node 2 then gets the packet from Node 1 for certification.   The packet key is already present in CCV,   with the reference transaction set it to <code>n2x</code>,   whereas write-set proposes setting it to <code>n1x</code>.   This causes a conflict, which in turn causes the transaction from Node 1   to fail the certification test.</p> <ul> <li>Node 1 sees the packet from Node 2 for certification, which is then processed, the local CCV is updated, and the reference transaction is set to <code>n2x</code>.</li> </ul> <p>Using the same case as explained above, Node 1 certification also rejects the packet from Node 1.</p> <p>This suggests that the node doesn\u2019t need to wait for certification to complete, but just needs to ensure that the packet is written to the channel. The applier transaction will always win and the local conflicting transaction will be rolled back.</p> <p>The following example shows what happens if one of the nodes has local changes that are not synced with the group:</p> <pre><code>mysql&gt; create (id primary key) -&gt; insert (1), (2), (3), (4);\n</code></pre> Expected output <pre><code>node-1: wsrep_on=0; insert (5); wsrep_on=1\nnode-2: insert(5).\n</code></pre> <p>The <code>insert(5)</code> statement will generate a write-set that will then be replicated to Node 1. Node 1 will try to apply it but will fail with <code>duplicate-key-error</code>, because 5 already exist.</p> <p>XtraDB will flag this as an error, which would eventually cause Node 1 to shutdown.</p>"},{"location":"certification.html#increment-gtid","title":"Increment GTID","text":"<p>GTID is incremented only when the transaction passes certification, and is ready for commit. That way errant packets don\u2019t cause GTID to increment.</p> <p>Also, group packet <code>id</code> is not confused with GTID. Without errant packets, it may seem that these two counters are the same, but they are not related.</p>"},{"location":"certification.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"compile.html","title":"Compile and install from Source Code","text":"<p>If you want to compile Percona XtraDB Cluster, you can find the source code on GitHub. Before you begin, make sure that the following packages are installed:</p> apt yum Git <code>git</code> <code>git</code> SCons <code>scons</code> <code>scons</code> GCC <code>gcc</code> <code>gcc</code> g++ <code>g++</code> <code>gcc-c++</code> OpenSSL <code>openssl</code> <code>openssl</code> Check <code>check</code> <code>check</code> CMake <code>cmake</code> <code>cmake</code> Bison <code>bison</code> <code>bison</code> Boost <code>libboost-all-dev</code> <code>boost-devel</code> Asio <code>libasio-dev</code> <code>asio-devel</code> Async I/O <code>libaio-dev</code> <code>libaio-devel</code> ncurses <code>libncurses5-dev</code> <code>ncurses-devel</code> Readline <code>libreadline-dev</code> <code>readline-devel</code> PAM <code>libpam-dev</code> <code>pam-devel</code> socat <code>socat</code> <code>socat</code> curl <code>libcurl-dev</code> <code>libcurl-devel</code> <p>You will likely have all or most of the packages already installed. If you are not sure, run one of the following commands to install any missing dependencies:</p> <ul> <li> <p>For Debian or Ubuntu:</p> <pre><code>$ sudo apt install -y git scons gcc g++ openssl check cmake bison \\\nlibboost-all-dev libasio-dev libaio-dev libncurses5-dev libreadline-dev \\\nlibpam-dev socat libcurl-dev\n</code></pre> </li> <li> <p>For Red Hat Enterprise Linux or CentOS:</p> <pre><code>$ sudo yum install -y git scons gcc gcc-c++ openssl check cmake bison \\\nboost-devel asio-devel libaio-devel ncurses-devel readline-devel pam-devel \\\nsocat libcurl-devel\n</code></pre> </li> </ul> <p>To compile Percona XtraDB Cluster from source code:</p> <ol> <li> <p>Clone the Percona XtraDB Cluster repository:</p> <pre><code>$ git clone https://github.com/percona/percona-xtradb-cluster.git\n</code></pre> <p>Important</p> <p>Clone the latest repository or update it to the latest state. Old codebase may not be compatible with the build script.</p> </li> <li> <p>Check out the <code>8.0</code> branch and initialize submodules:</p> <pre><code>$ cd percona-xtradb-cluster\n$ git checkout 8.0\n$ git submodule update --init --recursive\n</code></pre> </li> <li> <p>Download the matching Percona XtraBackup 8.0 tarball (*.tar.gz) for your operating system from Percona Downloads. </p> </li> </ol> <p>The following example extract the Percona XtraBackup 8.0.32-25 tar.gz file to the target directory <code>./pxc-build</code>:</p> <pre><code>```{.bash data-prompt=\"$\"}\n$ tar -xvf percona-xtrabackup-8.0.32-25-Linux-x86_64.glibc2.17.tar.gz -C ./pxc-build\n```\n</code></pre> <ol> <li> <p>Run the build script <code>./build-ps/build-binary.sh</code>.     By default, it attempts building into the current directory. Specify     the target output directory, such as <code>./pxc-build</code>:</p> <pre><code>$ mkdir ./pxc-build\n$ ./build-ps/build-binary.sh ./pxc-build\n</code></pre> </li> </ol> <p>When the compilation completes, <code>pxc-build</code> contains a tarball, such as <code>Percona-XtraDB-Cluster-8.0.x86_64.tar.gz</code>, that you can deploy on your system.</p> <p>Note</p> <p>The exact version and release numbers may differ.</p>"},{"location":"compile.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"configure-cluster-rhel.html","title":"Configure a cluster on Red Hat-based distributions","text":"<p>This tutorial describes how to install and configure three Percona XtraDB Cluster nodes on Red Hat or CentOS 7 servers, using the packages from Percona repositories.</p> <ul> <li> <p>Node 1</p> <ul> <li> <p>Host name: <code>percona1</code></p> </li> <li> <p>IP address: <code>192.168.70.71</code></p> </li> </ul> </li> <li> <p>Node 2</p> <ul> <li> <p>Host name: <code>percona2</code></p> </li> <li> <p>IP address: <code>192.168.70.72</code></p> </li> </ul> </li> <li> <p>Node 3</p> <ul> <li> <p>Host name: <code>percona3</code></p> </li> <li> <p>IP address: <code>192.168.70.73</code></p> </li> </ul> </li> </ul>"},{"location":"configure-cluster-rhel.html#prerequisites","title":"Prerequisites","text":"<p>The procedure described in this tutorial requires the following:</p> <ul> <li> <p>All three nodes have Red Hat or Red Hat or CentOS 7 installed.</p> </li> <li> <p>The firewall on all nodes is configured to allow connecting to ports 3306, 4444, 4567 and 4568.</p> </li> <li> <p>SELinux on all nodes is disabled.</p> </li> </ul> <p>Different from previous versions</p> <p>The variable <code>wsrep_sst_auth</code> has been removed. Percona XtraDB Cluster 8.0 automatically creates the system user <code>mysql.pxc.internal.session</code>. During SST, the user <code>mysql.pxc.sst.user</code> and the role <code>mysql.pxc.sst.role</code> are created on the donor node.</p>"},{"location":"configure-cluster-rhel.html#step-1-installing-pxc","title":"Step 1. Installing PXC","text":"<p>Install Percona XtraDB Cluster on all three nodes as described in Installing Percona XtraDB Cluster on Red Hat Enterprise Linux or CentOS.</p>"},{"location":"configure-cluster-rhel.html#step-2-configuring-the-first-node","title":"Step 2. Configuring the first node","text":"<p>Individual nodes should be configured to be able to bootstrap the cluster. For more information about bootstrapping the cluster, see Bootstrapping the First Node.</p> <ol> <li> <p>Make sure that the configuration file <code>/etc/my.cnf</code> on the first node (<code>percona1</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib64/galera4/libgalera_smm.so\n\n# Cluster connection URL contains the IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.71,192.168.70.72,192.168.70.73\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended.\ndefault_storage_engine=InnoDB\n\n# This InnoDB autoincrement locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node 1 address\nwsrep_node_address=192.168.70.71\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n\n# Cluster name\nwsrep_cluster_name=my_centos_cluster\n</code></pre> </li> <li> <p>Start the first node with the following command:</p> <pre><code>[root@percona1 ~] # systemctl start mysql@bootstrap.service\n</code></pre> <p>The previous command will start the cluster with initial <code>wsrep_cluster_address</code> variable set to <code>gcomm://</code>. If the node or MySQL are restarted later, there will be no need to change the configuration file.</p> </li> <li> <p>After the first node has been started, cluster status can be checked with the following command:</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>This output shows that the cluster has been successfully bootstrapped.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | c2883338-834d-11e2-0800-03c9c68e41ec |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 1                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n75 rows in set (0.00 sec)\n</code></pre> <p>Copy the automatically generated temporary password for the superuser account:</p> <pre><code>$ sudo grep 'temporary password' /var/log/mysqld.log\n</code></pre> <p>Use this password to log in as root:</p> <pre><code>$ mysql -u root -p\n</code></pre> <p>Change the password for the superuser account and log out. For example:</p> <pre><code>mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'r00tP@$$';\n</code></pre> Expected output <pre><code>Query OK, 0 rows affected (0.00 sec)\n</code></pre> </li> </ol>"},{"location":"configure-cluster-rhel.html#step-3-configuring-the-second-node","title":"Step 3. Configuring the second node","text":"<ol> <li> <p>Make sure that the configuration file <code>/etc/my.cnf</code> on the second node (<code>percona2</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib64/galera4/libgalera_smm.so\n\n# Cluster connection URL contains IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.71,192.168.70.72,192.168.70.73\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended\ndefault_storage_engine=InnoDB\n\n# This InnoDB auto_increment locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node 2 address\nwsrep_node_address=192.168.70.72\n\n# Cluster name\nwsrep_cluster_name=my_centos_cluster\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n</code></pre> </li> <li> <p>Start the second node with the following command:</p> <pre><code>[root@percona2 ~]# systemctl start mysql\n</code></pre> </li> <li> <p>After the server has been started, it should receive SST automatically.     Cluster status can be checked on both nodes.     The following is an example of status from the second node (<code>percona2</code>):</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>The output shows that the new node has been successfully added to the cluster.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | c2883338-834d-11e2-0800-03c9c68e41ec |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 2                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre> </li> </ol>"},{"location":"configure-cluster-rhel.html#step-4-configuring-the-third-node","title":"Step 4. Configuring the third node","text":"<ol> <li> <p>Make sure that the MySQL configuration file <code>/etc/my.cnf</code> on the third node (<code>percona3</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib64/galera4/libgalera_smm.so\n\n# Cluster connection URL contains IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.71,192.168.70.72,192.168.70.73\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended\ndefault_storage_engine=InnoDB\n\n# This InnoDB auto_increment locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node #3 address\nwsrep_node_address=192.168.70.73\n\n# Cluster name\nwsrep_cluster_name=my_centos_cluster\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n</code></pre> </li> <li> <p>Start the third node with the following command:</p> <pre><code>[root@percona3 ~]# systemctl start mysql\n</code></pre> </li> <li> <p>After the server has been started, it should receive SST automatically.     Cluster status can be checked on all three nodes.     The following is an example of status from the third node (<code>percona3</code>):</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>The output confirms that the third node has joined the cluster.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | c2883338-834d-11e2-0800-03c9c68e41ec |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 3                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre> </li> </ol>"},{"location":"configure-cluster-rhel.html#testing-replication","title":"Testing replication","text":"<p>To test replication, lets create a new database on second node, create a table for that database on the third node, and add some records to the table on the first node.</p> <ol> <li> <p>Create a new database on the second node:</p> <pre><code>mysql@percona2&gt; CREATE DATABASE percona;\n</code></pre> <p>The following output confirms that a new database has been created:</p> Expected output <pre><code>Query OK, 1 row affected (0.01 sec)\n</code></pre> </li> <li> <p>Switch to a newly created database:</p> <pre><code>mysql@percona3&gt; USE percona;\n</code></pre> <p>The following output confirms that a database has been changed:</p> Expected output <pre><code>Database changed\n</code></pre> </li> <li> <p>Create a table on the third node:</p> <pre><code>mysql@percona3&gt; CREATE TABLE example (node_id INT PRIMARY KEY, node_name VARCHAR(30));\n</code></pre> <p>The following output confirms that a table has been created:</p> Expected output <pre><code>Query OK, 0 rows affected (0.05 sec)\n</code></pre> </li> <li> <p>Insert records on the first node:</p> <pre><code>mysql@percona1&gt; INSERT INTO percona.example VALUES (1, 'percona1');\n</code></pre> <p>The following output confirms that the records have been inserted:</p> Expected output <pre><code>Query OK, 1 row affected (0.02 sec)\n</code></pre> </li> <li> <p>Retrieve all the rows from that table on the second node:</p> <pre><code>mysql@percona2&gt; SELECT * FROM percona.example;\n</code></pre> <p>The following output confirms that all the rows have been retrieved:</p> Expected output <pre><code>+---------+-----------+\n| node_id | node_name |\n+---------+-----------+\n|       1 | percona1  |\n+---------+-----------+\n1 row in set (0.00 sec)\n</code></pre> <p>This simple procedure should ensure that all nodes in the cluster are synchronized and working as intended.</p> </li> </ol>"},{"location":"configure-cluster-rhel.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"configure-cluster-ubuntu.html","title":"Configure a cluster on Debian or Ubuntu","text":"<p>This tutorial describes how to install and configure three Percona XtraDB Cluster nodes on Ubuntu 14 LTS servers, using the packages from Percona repositories.</p> <ul> <li> <p>Node 1</p> <ul> <li> <p>Host name: <code>pxc1</code></p> </li> <li> <p>IP address: <code>192.168.70.61</code></p> </li> </ul> </li> <li> <p>Node 2</p> <ul> <li> <p>Host name: <code>pxc2</code></p> </li> <li> <p>IP address: <code>192.168.70.62</code></p> </li> </ul> </li> <li> <p>Node 3</p> <ul> <li> <p>Host name: <code>pxc3</code></p> </li> <li> <p>IP address: <code>192.168.70.63</code></p> </li> </ul> </li> </ul>"},{"location":"configure-cluster-ubuntu.html#prerequisites","title":"Prerequisites","text":"<p>The procedure described in this tutorial requires he following:</p> <ul> <li> <p>All three nodes have Ubuntu 14 LTS installed.</p> </li> <li> <p>Firewall on all nodes is configured to allow connecting to ports 3306, 4444, 4567 and 4568.</p> </li> <li> <p>AppArmor profile for MySQL is disabled.</p> </li> </ul>"},{"location":"configure-cluster-ubuntu.html#step-1-install-pxc","title":"Step 1. Install PXC","text":"<p>Install Percona XtraDB Cluster on all three nodes as described in Installing Percona XtraDB Cluster on Debian or Ubuntu.</p> <p>Note</p> <p>Debian/Ubuntu installation prompts for root password. For this tutorial, set it to <code>Passw0rd</code>. After the packages have been installed, <code>mysqld</code> will start automatically. Stop <code>mysqld</code> on all three nodes using <code>sudo systemctl stop mysql</code>.</p>"},{"location":"configure-cluster-ubuntu.html#step-2-configure-the-first-node","title":"Step 2. Configure the first node","text":"<p>Individual nodes should be configured to be able to bootstrap the cluster. For more information about bootstrapping the cluster, see Bootstrapping the First Node.</p> <ol> <li> <p>Make sure that the configuration file <code>/etc/mysql/my.cnf</code> for the first node (<code>pxc1</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib/libgalera_smm.so\n\n# Cluster connection URL contains the IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.61,192.168.70.62,192.168.70.63\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended\ndefault_storage_engine=InnoDB\n\n# This InnoDB autoincrement locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node #1 address\nwsrep_node_address=192.168.70.61\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n\n# Cluster name\nwsrep_cluster_name=my_ubuntu_cluster\n</code></pre> </li> <li> <p>Start the first node with the following command:</p> <pre><code>[root@pxc1 ~]# systemctl start mysql@bootstrap.service\n</code></pre> <p>This command will start the first node and bootstrap the cluster.</p> </li> <li> <p>After the first node has been started, cluster status can be checked with the following command:</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>The following outut shows the cluste status:</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | b598af3e-ace3-11e2-0800-3e90eb9cd5d3 |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 1                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n75 rows in set (0.00 sec)\n</code></pre> <p>This output shows that the cluster has been successfully bootstrapped.</p> </li> </ol> <p>To perform State Snapshot Transfer using XtraBackup, set up a new user with proper privileges:</p> <pre><code>mysql@pxc1&gt; CREATE USER 'sstuser'@'localhost' IDENTIFIED BY 's3cretPass';\nmysql@pxc1&gt; GRANT PROCESS, RELOAD, LOCK TABLES, REPLICATION CLIENT ON *.* TO 'sstuser'@'localhost';\nmysql@pxc1&gt; FLUSH PRIVILEGES;\n</code></pre> <p>Note</p> <p>MySQL root account can also be used for performing SST, but it is more secure to use a different (non-root) user for this.</p>"},{"location":"configure-cluster-ubuntu.html#step-3-configure-the-second-node","title":"Step 3. Configure the second node","text":"<ol> <li> <p>Make sure that the configuration file <code>/etc/mysql/my.cnf</code> on the second node (<code>pxc2</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib/libgalera_smm.so\n\n# Cluster connection URL contains IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.61,192.168.70.62,192.168.70.63\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended\ndefault_storage_engine=InnoDB\n\n# This InnoDB autoincrement locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node #2 address\nwsrep_node_address=192.168.70.62\n\n# Cluster name\nwsrep_cluster_name=my_ubuntu_cluster\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n</code></pre> </li> <li> <p>Start the second node with the following command:</p> <pre><code>[root@pxc2 ~]# systemctl start mysql\n</code></pre> </li> <li> <p>After the server has been started, it should receive SST automatically.     Cluster status can now be checked on both nodes.     The following is an example of status from the second node (<code>pxc2</code>):</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>The following output shows that the new node has been successfully added to the cluster.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | b598af3e-ace3-11e2-0800-3e90eb9cd5d3 |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 2                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre> </li> </ol>"},{"location":"configure-cluster-ubuntu.html#step-4-configure-the-third-node","title":"Step 4. Configure the third node","text":"<ol> <li> <p>Make sure that the MySQL configuration file <code>/etc/mysql/my.cnf</code> on the third node (<code>pxc3</code>) contains the following:</p> <pre><code>[mysqld]\n\ndatadir=/var/lib/mysql\nuser=mysql\n\n# Path to Galera library\nwsrep_provider=/usr/lib/libgalera_smm.so\n\n# Cluster connection URL contains IPs of node#1, node#2 and node#3\nwsrep_cluster_address=gcomm://192.168.70.61,192.168.70.62,192.168.70.63\n\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n\n# Using the MyISAM storage engine is not recommended\ndefault_storage_engine=InnoDB\n\n# This InnoDB autoincrement locking mode is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n\n# Node #3 address\nwsrep_node_address=192.168.70.63\n\n# Cluster name\nwsrep_cluster_name=my_ubuntu_cluster\n\n# SST method\nwsrep_sst_method=xtrabackup-v2\n</code></pre> </li> <li> <p>Start the third node with the following command:</p> <pre><code>[root@pxc3 ~]# systemctl start mysql\n</code></pre> </li> <li> <p>After the server has been started, it should receive SST automatically. Cluster status can be checked on all nodes. The following is an example of status from the third node (<code>pxc3</code>):</p> </li> </ol> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> <p>The following output confirms that the third node has joined the cluster.</p> Expected output <pre><code>+----------------------------+--------------------------------------+\n| Variable_name              | Value                                |\n+----------------------------+--------------------------------------+\n| wsrep_local_state_uuid     | b598af3e-ace3-11e2-0800-3e90eb9cd5d3 |\n...\n| wsrep_local_state          | 4                                    |\n| wsrep_local_state_comment  | Synced                               |\n...\n| wsrep_cluster_size         | 3                                    |\n| wsrep_cluster_status       | Primary                              |\n| wsrep_connected            | ON                                   |\n...\n| wsrep_ready                | ON                                   |\n+----------------------------+--------------------------------------+\n40 rows in set (0.01 sec)\n</code></pre>"},{"location":"configure-cluster-ubuntu.html#test-replication","title":"Test replication","text":"<p>To test replication, lets create a new database on the second node, create a table for that database on the third node, and add some records to the table on the first node.</p> <ol> <li> <p>Create a new database on the second node:</p> <pre><code>mysql@percona2&gt; CREATE DATABASE percona;\n</code></pre> <p>The following output confirms that a new database has been created:</p> Expected output <pre><code>Query OK, 1 row affected (0.01 sec)\n</code></pre> </li> <li> <p>Switch to a newly created database:</p> <pre><code>mysql@percona3&gt; USE percona;\n</code></pre> <p>The following output confirms that a database has been changed:</p> Expected output <pre><code>Database changed\n</code></pre> </li> <li> <p>Create a table on the third node:</p> <pre><code>mysql@percona3&gt; CREATE TABLE example (node_id INT PRIMARY KEY, node_name VARCHAR(30));\n</code></pre> <p>The following output confirms that a table has been created:</p> Expected output <pre><code>Query OK, 0 rows affected (0.05 sec)\n</code></pre> </li> <li> <p>Insert records on the first node:</p> <pre><code>mysql@percona1&gt; INSERT INTO percona.example VALUES (1, 'percona1');\n</code></pre> <p>The following output confirms that the records have been inserted:</p> Expected output <pre><code>Query OK, 1 row affected (0.02 sec)\n</code></pre> </li> <li> <p>Retrieve all the rows from that table on the second node:</p> <pre><code>mysql@percona2&gt; SELECT * FROM percona.example;\n</code></pre> <p>The following output confirms that all the rows have been retrieved:</p> Expected output <pre><code>+---------+-----------+\n| node_id | node_name |\n+---------+-----------+\n|       1 | percona1  |\n+---------+-----------+\n1 row in set (0.00 sec)\n</code></pre> <p>This simple procedure should ensure that all nodes in the cluster are synchronized and working as intended.</p> </li> </ol>"},{"location":"configure-cluster-ubuntu.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"configure-nodes.html","title":"Configure nodes for write-set replication","text":"<p>After installing Percona XtraDB Cluster on each node, you need to configure the cluster. In this section, we will demonstrate how to configure a three node cluster:</p> Node Host IP Node 1 pxc1 192.168.70.61 Node 2 pxc2 192.168.70.62 Node 3 pxc3 192.168.70.63 <ol> <li> <p>Stop the Percona XtraDB Cluster server. After the installation completes the server is not started. You need this step if you have started the server manually.</p> <pre><code>$ sudo service mysql stop\n</code></pre> </li> <li> <p>Edit the configuration file of the first node to provide the cluster settings.</p> <p>If you use Debian or Ubuntu, edit <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>:</p> <pre><code>wsrep_provider=/usr/lib/galera4/libgalera_smm.so\nwsrep_cluster_name=pxc-cluster\nwsrep_cluster_address=gcomm://192.168.70.61,192.168.70.62,192.168.70.63\n</code></pre> <p>If you use Red Hat or CentOS, edit <code>/etc/my.cnf</code>. Note that on these systems you set the wsrep_provider option to a different value:</p> <pre><code>wsrep_provider=/usr/lib64/galera4/libgalera_smm.so\nwsrep_cluster_name=pxc-cluster\nwsrep_cluster_address=gcomm://192.168.70.61,192.168.70.62,192.168.70.63\n</code></pre> </li> <li> <p>Configure node 1.</p> <pre><code>wsrep_node_name=pxc1\nwsrep_node_address=192.168.70.61\npxc_strict_mode=ENFORCING\n</code></pre> </li> <li> <p>Set up node 2 and node 3 in the same way: Stop the server and update the configuration file applicable to your system. All settings are the same except for <code>wsrep_node_name</code> and <code>wsrep_node_address</code>.</p> <p>For node 2</p> <pre><code>wsrep_node_name=pxc2\nwsrep_node_address=192.168.70.62\n</code></pre> <p>For node 3</p> <pre><code>wsrep_node_name=pxc3\nwsrep_node_address=192.168.70.63\n</code></pre> </li> <li> <p>Set up the traffic encryption settings. Each node of the cluster must use the same SSL certificates.</p> <pre><code>[mysqld]\nwsrep_provider_options=\u201dsocket.ssl_key=server-key.pem;socket.ssl_cert=server-cert.pem;socket.ssl_ca=ca.pem\u201d\n\n[sst]\nencrypt=4\nssl-key=server-key.pem\nssl-ca=ca.pem\nssl-cert=server-cert.pem\n</code></pre> </li> </ol> <p>Important</p> <p>In Percona XtraDB Cluster 8.0, the Encrypting Replication Traffic is enabled by default (via the <code>pxc-encrypt-cluster-traffic</code> variable).</p> <p>The replication traffic encryption cannot be enabled on a running cluster. If it was disabled before the cluster was bootstrapped, the cluster must to stopped. Then set up the encryption, and bootstrap (see <code>Bootstrapping the First Node</code>) again.</p> <p>See also</p> <p>More information about the security settings in Percona XtraDB Cluster * <code>Security Basics</code> * <code>Encrypting PXC Traffic</code> * <code>SSL Automatic Configuration</code></p>"},{"location":"configure-nodes.html#template-of-the-configuration-file","title":"Template of the configuration file","text":"<p>Here is an example of a full configuration file installed on CentOS to <code>/etc/my.cnf</code>.</p> <pre><code># Template my.cnf for PXC\n# Edit to your requirements.\n[client]\nsocket=/var/lib/mysql/mysql.sock\n[mysqld]\nserver-id=1\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n# Binary log expiration period is 604800 seconds, which equals 7 days\nbinlog_expire_logs_seconds=604800\n######## wsrep ###############\n# Path to Galera library\nwsrep_provider=/usr/lib64/galera4/libgalera_smm.so\n# Cluster connection URL contains IPs of nodes\n#If no IP is found, this implies that a new cluster needs to be created,\n#in order to do that you need to bootstrap this node\nwsrep_cluster_address=gcomm://\n# In order for Galera to work correctly binlog format should be ROW\nbinlog_format=ROW\n# Slave thread to use\nwsrep_slave_threads=8\nwsrep_log_conflicts\n# This changes how InnoDB autoincrement locks are managed and is a requirement for Galera\ninnodb_autoinc_lock_mode=2\n# Node IP address\n#wsrep_node_address=192.168.70.63\n# Cluster name\nwsrep_cluster_name=pxc-cluster\n#If wsrep_node_name is not specified,  then system hostname will be used\nwsrep_node_name=pxc-cluster-node-1\n#pxc_strict_mode allowed values: DISABLED,PERMISSIVE,ENFORCING,MASTER\npxc_strict_mode=ENFORCING\n# SST method\nwsrep_sst_method=xtrabackup-v2\n</code></pre>"},{"location":"configure-nodes.html#next-steps-bootstrap-the-first-node","title":"Next Steps: Bootstrap the first node","text":"<p>After you configure all your nodes, initialize Percona XtraDB Cluster by bootstrapping the first node according to the procedure described in Bootstrapping the First Node.</p>"},{"location":"configure-nodes.html#essential-configuration-variables","title":"Essential configuration variables","text":"<p><code>wsrep_provider</code></p> <p>Specify the path to the Galera library. The location depends on the distribution:</p> <ul> <li> <p>Debian and Ubuntu: <code>/usr/lib/galera4/libgalera_smm.so</code></p> </li> <li> <p>Red Hat and CentOS: <code>/usr/lib64/galera4/libgalera_smm.so</code></p> </li> </ul> <p><code>wsrep_cluster_name</code></p> <p>Specify the logical name for your cluster. It must be the same for all nodes in your cluster.</p> <p><code>wsrep_cluster_address</code></p> <p>Specify the IP addresses of nodes in your cluster. At least one is required for a node to join the cluster, but it is recommended to list addresses of all nodes. This way if the first node in the list is not available, the joining node can use other addresses.</p> <p>Note</p> <p>No addresses are required for the initial node in the cluster. However, it is recommended to specify them and properly bootstrap the first node. This will ensure that the node is able to rejoin the cluster if it goes down in the future.</p> <p><code>wsrep_node_name</code></p> <p>Specify the logical name for each individual node. If this variable is not specified, the host name will be used.</p> <p><code>wsrep_node_address</code></p> <p>Specify the IP address of this particular node.</p> <p><code>wsrep_sst_method</code></p> <p>By default, Percona XtraDB Cluster uses Percona XtraBackup for State Snapshot Transfer. <code>xtrabackup-v2</code> is the only supported option for this variable. This method requires a user for SST to be set up on the initial node.</p> <p><code>pxc_strict_mode</code></p> <p>PXC Strict Mode is enabled by default and set to <code>ENFORCING</code>, which blocks the use of tech preview features and unsupported features in Percona XtraDB Cluster.</p> <p><code>binlog_format</code></p> <p>Galera supports only row-level replication, so set <code>binlog_format=ROW</code>.</p> <p><code>default_storage_engine</code></p> <p>Galera fully supports only the InnoDB storage engine. It will not work correctly with MyISAM or any other non-transactional storage engines. Set this variable to <code>default_storage_engine=InnoDB</code>.</p> <p><code>innodb_autoinc_lock_mode</code></p> <p>Galera supports only interleaved (<code>2</code>) lock mode for InnoDB. Setting the traditional (<code>0</code>) or consecutive (<code>1</code>) lock mode can cause replication to fail due to unresolved deadlocks. Set this variable to <code>innodb_autoinc_lock_mode=2</code>.</p>"},{"location":"configure-nodes.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"copyright-and-licensing-information.html","title":"Copyright and licensing information","text":""},{"location":"copyright-and-licensing-information.html#documentation-licensing","title":"Documentation licensing","text":"<p>Percona XtraDB Cluster documentation is (C)2009-2023 Percona LLC and/or its affiliates and is distributed under the Creative Commons Attribution 4.0 International License.</p>"},{"location":"copyright-and-licensing-information.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"crash-recovery.html","title":"Crash recovery","text":"<p>Unlike the standard MySQL replication, a PXC cluster acts like one logical entity, which controls the status and consistency of each node as well as the status of the whole cluster. This allows maintaining the data integrity more efficiently than with traditional asynchronous replication without losing safe writes on multiple nodes at the same time.</p> <p>However, there are scenarios where the database service can stop with no node being able to serve requests.</p>"},{"location":"crash-recovery.html#scenario-1-node-a-is-gracefully-stopped","title":"Scenario 1: Node A is gracefully stopped","text":"<p>In a three node cluster (node A, Node B, node C), one node (node A, for example) is gracefully stopped: for the purpose of maintenance, configuration change, etc.</p> <p>In this case, the other nodes receive a \u201cgood bye\u201d message from the stopped node and the cluster size is reduced; some properties like quorum calculation or auto increment are automatically changed. As soon as node A is started again, it joins the cluster based on its <code>wsrep_cluster_address</code> variable in <code>my.cnf</code>.</p> <p>If the writeset cache (<code>gcache.size</code>) on nodes B and/or C still has all the transactions executed while node A was down, joining is possible via IST. If IST is impossible due to missing transactions in donor\u2019s gcache, the fallback decision is made by the donor and SST is started automatically.</p>"},{"location":"crash-recovery.html#scenario-2-two-nodes-are-gracefully-stopped","title":"Scenario 2: Two nodes are gracefully stopped","text":"<p>Similar to Scenario 1: Node A is gracefully stopped, the cluster size is reduced to 1 \u2014 even the single remaining node C forms the primary component and is able to serve client requests. To get the nodes back into the cluster, you just need to start them.</p> <p>However, when a new node joins the cluster, node C will be switched to the \u201cDonor/Desynced\u201d state as it has to provide the state transfer at least to the first joining node. It is still possible to read/write to it during that process, but it may be much slower, which depends on how large amount of data should be sent during the state transfer. Also, some load balancers may consider the donor node as not operational and remove it from the pool. So, it is best to avoid the situation when only one node is up.</p> <p>If you restart node A and then node B, you may want to make sure note B does not use node A as the state transfer donor: node A may not have all the needed writesets in its gcache. Specify node C node as the donor in your configuration file and start the mysql service:</p> <pre><code>$ systemctl start mysql\n</code></pre> <p>See also</p> <p>Galera Documentation: wsrep_sst_donor option</p>"},{"location":"crash-recovery.html#scenario-3-all-three-nodes-are-gracefully-stopped","title":"Scenario 3: All three nodes are gracefully stopped","text":"<p>The cluster is completely stopped and the problem is to initialize it again. It is important that a PXC node writes its last executed position to the <code>grastate.dat</code> file.</p> <p>By comparing the seqno number in this file, you can see which is the most advanced node (most likely the last stopped). The cluster must be bootstrapped using this node, otherwise nodes that had a more advanced position will have to perform the full SST to join the cluster initialized from the less advanced one. As a result, some transactions will be lost). To bootstrap the first node, invoke the startup script like this:</p> <pre><code>$ systemctl start mysql@bootstrap.service\n</code></pre> <p>Note</p> <p>Even though you bootstrap from the most advanced node, the other nodes have a lower sequence number. They will still have to join via the full SST because the Galera Cache is not retained on restart.</p> <p>For this reason, it is recommended to stop writes to the cluster before its full shutdown, so that all nodes can stop at the same position. See also <code>pc.recovery</code>.</p>"},{"location":"crash-recovery.html#scenario-4-one-node-disappears-from-the-cluster","title":"Scenario 4: One node disappears from the cluster","text":"<p>This is the case when one node becomes unavailable due to power outage, hardware failure, kernel panic, mysqld crash, kill -9 on mysqld pid, etc.</p> <p>Two remaining nodes notice the connection to node A is down and start trying to re-connect to it. After several timeouts, node A is removed from the cluster. The quorum is saved (2 out of 3 nodes are up), so no service disruption happens. After it is restarted, node A joins automatically (as described in Scenario 1: Node A is gracefully stopped).</p>"},{"location":"crash-recovery.html#scenario-5-two-nodes-disappear-from-the-cluster","title":"Scenario 5: Two nodes disappear from the cluster","text":"<p>Two nodes are not available and the remaining node (node C) is not able to form the quorum alone. The cluster has to switch to a non-primary mode, where MySQL refuses to serve any SQL queries. In this state, the mysqld process on node C is still running and can be connected to but any statement related to data fails with an error</p> <pre><code>&gt; SELECT * FROM test.sbtest1;\n</code></pre> The error message <pre><code>ERROR 1047 (08S01): WSREP has not yet prepared node for application use\n</code></pre> <p>Reads are possible until node C decides that it cannot access node A and node B. New writes are forbidden.</p> <p>As soon as the other nodes become available, the cluster is formed again automatically. If node B and node C were just network-severed from node A, but they can still reach each other, they will keep functioning as they still form the quorum.</p> <p>If node A and node B crashed, you need to enable the primary component on node C manually, before you can bring up node A and node B. The command to do this is:</p> <pre><code>&gt; SET GLOBAL wsrep_provider_options='pc.bootstrap=true';\n</code></pre> <p>This approach only works if the other nodes are down before doing that! Otherwise, you end up with two clusters having different data.</p> <p>See also</p> <p>Adding Nodes to Cluster</p>"},{"location":"crash-recovery.html#scenario-6-all-nodes-went-down-without-a-proper-shutdown-procedure","title":"Scenario 6: All nodes went down without a proper shutdown procedure","text":"<p>This scenario is possible in case of a datacenter power failure or when hitting a MySQL or Galera bug. Also, it may happen as a result of data consistency being compromised where the cluster detects that each node has different data. The <code>grastate.dat</code> file is not updated and does not contain a valid sequence number (seqno). It may look like this:</p> <pre><code>$ cat /var/lib/mysql/grastate.dat\n# GALERA saved state\nversion: 2.1\nuuid: 220dcdcb-1629-11e4-add3-aec059ad3734\nseqno: -1\nsafe_to_bootstrap: 0\n</code></pre> <p>In this case, you cannot be sure that all nodes are consistent with each other. We cannot use safe_to_bootstrap variable to determine the node that has the last transaction committed as it is set to 0 for each node. An attempt to bootstrap from such a node will fail unless you start <code>mysqld</code> with the <code>--wsrep-recover</code> parameter:</p> <pre><code>$ mysqld --wsrep-recover\n</code></pre> <p>Search the output for the line that reports the recovered position after the node UUID (1122 in this case):</p> Expected output <pre><code>...\n... [Note] WSREP: Recovered position: 220dcdcb-1629-11e4-add3-aec059ad3734:1122\n...\n</code></pre> <p>The node where the recovered position is marked by the greatest number is the best bootstrap candidate. In its <code>grastate.dat</code> file, set the safe_to_bootstrap variable to 1. Then, bootstrap from this node.</p> <p>Note</p> <p>After a shutdown, you can boostrap from the node which is marked as safe in the <code>grastate.dat</code> file.</p> <pre><code>...\nsafe_to_bootstrap: 1\n...\n</code></pre> <p>See also</p> <p>Galera Documentation Introducing the Safe-To-Bootstrap feature in Galera Cluster</p> <p>In recent Galera versions, the option <code>pc.recovery</code> (enabled by default) saves the cluster state into a file named <code>gvwstate.dat</code> on each member node. As the name of this option suggests (pc \u2013 primary component), it saves only a cluster being in the PRIMARY state. An example content of the file may look like this:</p> <pre><code>cat /var/lib/mysql/gvwstate.dat\nmy_uuid: 76de8ad9-2aac-11e4-8089-d27fd06893b9\n#vwbeg\nview_id: 3 6c821ecc-2aac-11e4-85a5-56fe513c651f 3\nbootstrap: 0\nmember: 6c821ecc-2aac-11e4-85a5-56fe513c651f 0\nmember: 6d80ec1b-2aac-11e4-8d1e-b2b2f6caf018 0\nmember: 76de8ad9-2aac-11e4-8089-d27fd06893b9 0\n#vwend\n</code></pre> <p>We can see a three node cluster with all members being up. Thanks to this new feature, the nodes will try to restore the primary component once all the members start to see each other. This makes the PXC cluster automatically recover from being powered down without any manual intervention! In the logs we will see:</p>"},{"location":"crash-recovery.html#scenario-7-the-cluster-loses-its-primary-state-due-to-split-brain","title":"Scenario 7: The cluster loses its primary state due to split brain","text":"<p>For the purpose of this example, let\u2019s assume we have a cluster that consists of an even number of nodes: six, for example. Three of them are in one location while the other three are in another location and they lose network connectivity.  It is best practice to avoid such topology: if you cannot have an odd number of real nodes, you can use an additional arbitrator (garbd) node or set a higher pc.weight to some nodes. But when the split brain happens any way, none of the separated groups can maintain the quorum: all nodes must stop serving requests and both parts of the cluster will be continuously trying to re-connect.</p> <p>If you want to restore the service even before the network link is restored, you can make one of the groups primary again using the same command as described in Scenario 5: Two nodes disappear from the cluster</p> <pre><code>&gt; SET GLOBAL wsrep_provider_options='pc.bootstrap=true';\n</code></pre> <p>After this, you are able to work on the manually restored part of the cluster, and the other half should be able to automatically re-join using IST as soon as the network link is restored.</p> <p>Warning</p> <p>If you set the bootstrap option on both the separated parts, you will end up with two living cluster instances, with data likely diverging away from each other. Restoring a network link in this case will not make them re-join until the nodes are restarted and members specified in configuration file are connected again.</p> <p>Then, as the Galera replication model truly cares about data consistency: once the inconsistency is detected, nodes that cannot execute row change statement due to a data difference \u2013 an emergency shutdown will be performed and the only way to bring the nodes back to the cluster is via the full SST</p> <p>Based on material from Percona Database Performance Blog</p> <p>This article is based on the blog post Galera replication - how to recover a PXC cluster by Przemys\u0142aw Malkowski: https://www.percona.com/blog/2014/09/01/galera-replication-how-to-recover-a-pxc-cluster/ </p>"},{"location":"crash-recovery.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"data-at-rest-encryption.html","title":"Data at Rest Encryption","text":""},{"location":"data-at-rest-encryption.html#introduction","title":"Introduction","text":"<p>Data at rest encryption refers to encrypting data stored on a disk on a server. If an unauthorized user accesses the data files from the file system, encryption ensures the user cannot read the file contents. Percona Server allows you to enable, disable, and apply encryptions to the following objects:</p> <ul> <li> <p>File-per-tablespace table</p> </li> <li> <p>Schema</p> </li> <li> <p>General tablespace</p> </li> <li> <p>System tablespace</p> </li> <li> <p>Temporary table</p> </li> <li> <p>Binary log files</p> </li> <li> <p>Redo log files</p> </li> <li> <p>Undo tablespaces</p> </li> <li> <p>Doublewrite buffer files</p> </li> </ul> <p>The transit data is defined as data that is transmitted to another node or client. Encrypted transit data uses an SSL connection.</p> <p>Percona XtraDB Cluster 8.0 supports all data at rest generally-available encryption features available from Percona Server for MySQL 8.0.</p>"},{"location":"data-at-rest-encryption.html#configure-pxc-to-use-keyring_file-plugin","title":"Configure PXC to use keyring_file plugin","text":""},{"location":"data-at-rest-encryption.html#configuration","title":"Configuration","text":"<p>Percona XtraDB Cluster inherits the Percona Server for MySQL behavior to configure the <code>keyring_file</code> plugin. The following example illustrates using the plugin. Review Use the kerying component or keyring plugin for the latest information on the keyring component and plugin.</p> <p>Note</p> <p>The keyring_file plugin should not be used for regulatory compliance. </p> <p>Install the plugin and add the following options in the configuration file:</p> <pre><code>[mysqld]\nearly-plugin-load=keyring_file.so\nkeyring_file_data=&lt;PATH&gt;/keyring\n</code></pre> <p>The <code>SHOW PLUGINS</code> statement checks if the plugin has been successfully loaded.</p> <p>Note</p> <p>PXC recommends the same configuration on all cluster nodes, and all nodes should have the keyring configured. A mismatch in the keyring configuration does not allow the JOINER node to join the cluster.</p> <p>If the user has a bootstrapped node with keyring enabled, then upcoming cluster nodes inherit the keyring (the encrypted key) from the DONOR node.</p>"},{"location":"data-at-rest-encryption.html#usage","title":"Usage","text":"<p>XtraBackup re-encrypts the data using a transition-key and the JOINER node re-encrypts it using a newly generated master-key.</p> <p>Keyring (or, more generally, the Percona XtraDB Cluster SST process) is backward compatible, as in higher version JOINER can join from lower version DONOR, but not vice-versa.</p> <p>Percona XtraDB Cluster does not allow the combination of nodes with encryption and nodes without encryption to maintain data consistency. For example, the user creates node-1 with encryption (keyring) enabled and node-2 with encryption (keyring) disabled. If the user attempts to create a table with encryption on node-1, the creation fails on node-2, causing data inconsistency. A node fails to start if it fails to load the keyring plugin.</p> <p>Note</p> <p>If the user does not specify the keyring parameters, the node does not know that it must load the keyring. The JOINER node may start, but it eventually shuts down when the DML level inconsistency with encrypted tablespace is detected.</p> <p>If a node does not have an encrypted tablespace, the keyring is not generated, and the keyring file is empty. Creating an encrypted table on the node generates the keyring.</p> <p>In an operation that is local to the node, you can rotate the key as needed. The <code>ALTER INSTANCE ROTATE INNODB MASTER KEY</code> statement is not replicated on cluster.</p> <p>The JOINER node generates its keyring.</p>"},{"location":"data-at-rest-encryption.html#compatibility","title":"Compatibility","text":"<p>Keyring (or, more generally, the Percona XtraDB Cluster SST process) is backward compatible. A higher version JOINER can join from lower version DONOR, but not vice-versa.</p>"},{"location":"data-at-rest-encryption.html#configure-pxc-to-use-keyring_vault-plugin","title":"Configure PXC to use keyring_vault plugin","text":""},{"location":"data-at-rest-encryption.html#keyring_vault","title":"keyring_vault","text":"<p>The <code>keyring_vault</code> plugin allows storing the master-key in vault-server (vs. local file as in case of <code>keyring_file</code>).</p> <p>Warning</p> <p>The rsync tool does not support the <code>keyring_vault</code>. Any rysnc-SST on a joiner is aborted if the <code>keyring_vault</code> is configured.</p>"},{"location":"data-at-rest-encryption.html#configuration_1","title":"Configuration","text":"<p>Configuration options are the same as upstream. The <code>my.cnf</code> configuration file should contain the following options:</p> <pre><code>[mysqld]\nearly-plugin-load=\"keyring_vault=keyring_vault.so\"\nkeyring_vault_config=\"&lt;PATH&gt;/keyring_vault_n1.conf\"\n</code></pre> <p>Also, <code>keyring_vault_n1.conf</code> file should contain the following:</p> <pre><code>vault_url = http://127.0.0.1:8200\nsecret_mount_point = secret1\ntoken = e0345eb4-35dd-3ddd-3b1e-e42bb9f2525d\nvault_ca = /data/keyring_vault_confs/vault_ca.crt\n</code></pre> <p>The detailed description of these options can be found in the upstream documentation.</p> <p>Vault-server is an external server, so make sure the PXC node can reach the server.</p> <p>Note</p> <p>Percona XtraDB Cluster recommends using the same keyring_plugin type on all cluster nodes. Mixing the keyring plugin types is recommended only while transitioning from <code>keyring_file</code> -&gt; <code>keyring_vault</code> or vice-versa.</p> <p>All nodes do not need to refer to the same vault server. Whatever vault server is used, it must be accessible from the respective node. All nodes do not need to use the same mount point.</p> <p>If the node is not able to reach or connect to the vault server, an error is notified during the server boot, and the node refuses to start:</p> The warning message <pre><code>2018-05-29T03:54:33.859613Z 0 [Warning] Plugin keyring_vault reported:\n'There is no vault_ca specified in keyring_vault's configuration file.\nPlease make sure that Vault's CA certificate is trusted by the machine\nfrom which you intend to connect to Vault.'\n2018-05-29T03:54:33.977145Z 0 [ERROR] Plugin keyring_vault reported:\n'CURL returned this error code: 7 with error message : Failed to connect\nto 127.0.0.1 port 8200: Connection refused'\n</code></pre> <p>If some nodes of the cluster are unable to connect to vault-server, this relates only to these specific nodes: e.g., if node-1 can connect, and node-2 cannot connect, only node-2 refuses to start. Also, if the server has a pre-existing encrypted object and on reboot, the server fails to connect to the vault-server, the object is not accessible.</p> <p>In case when vault-server is accessible, but authentication credential is incorrect, the consequences are the same, and the corresponding error looks like the following:</p> The warning message <pre><code>2018-05-29T03:58:54.461911Z 0 [Warning] Plugin keyring_vault reported:\n'There is no vault_ca specified in keyring_vault's configuration file.\nPlease make sure that Vault's CA certificate is trusted by the machine\nfrom which you intend to connect to Vault.'\n2018-05-29T03:58:54.577477Z 0 [ERROR] Plugin keyring_vault reported:\n'Could not retrieve list of keys from Vault. Vault has returned the\nfollowing error(s): [\"permission denied\"]'\n</code></pre> <p>In case of an accessible vault-server with the wrong mount point, there is no error during server boot, but the node still refuses to start:</p> <pre><code>mysql&gt; CREATE TABLE t1 (c1 INT, PRIMARY KEY pk(c1)) ENCRYPTION='Y';\n</code></pre> Expected output <pre><code>ERROR 3185 (HY000): Can't find master key from keyring, please check keyring\nplugin is loaded.\n\n... [ERROR] Plugin keyring_vault reported: 'Could not write key to Vault. ...\n... [ERROR] Plugin keyring_vault reported: 'Could not flush keys to keyring'\n</code></pre>"},{"location":"data-at-rest-encryption.html#mix-keyring-plugin-types","title":"Mix keyring plugin types","text":"<p>With XtraBackup introducing transition-key logic, it is now possible to mix and match keyring plugins. For example, the user has node-1 configured to use the <code>keyring_file</code> plugin and node-2 configured to use <code>keyring_vault</code>.</p> <p>Note</p> <p>Percona recommends the same configuration for all the nodes of the cluster. A mix and match in keyring plugin types is recommended only during the transition from one keying type to another.</p>"},{"location":"data-at-rest-encryption.html#temporary-file-encryption","title":"Temporary file encryption","text":""},{"location":"data-at-rest-encryption.html#migrate-keys-between-keyring-keystores","title":"Migrate keys between keyring keystores","text":"<p>Percona XtraDB Cluster supports key migration between keystores. The migration can be performed offline or online.</p>"},{"location":"data-at-rest-encryption.html#offline-migration","title":"Offline migration","text":"<p>In offline migration, the node to migrate is shut down, and the migration server takes care of migrating keys for the said server to a new keystore.</p> <p>For example, a cluster has three Percona XtraDB Cluster nodes, n1, n2, and n3. The nodes use the <code>keyring_file</code>. To migrate the n2 node to use <code>keyring_vault</code>, use the following procedure:</p> <ol> <li> <p>Shut down the n2 node.</p> </li> <li> <p>Start the Migration Server (<code>mysqld</code> with a special option).</p> </li> <li> <p>The Migration Server copies the keys from the n2 keyring file and adds them to the vault server.</p> </li> <li> <p>Start the n2 node with the vault parameter, and the keys are available.</p> </li> </ol> <p>Here is how the migration server output should look like:</p> Expected output <pre><code>/dev/shm/pxc80/bin/mysqld --defaults-file=/dev/shm/pxc80/copy_mig.cnf \\\n--keyring-migration-source=keyring_file.so \\\n--keyring_file_data=/dev/shm/pxc80/node2/keyring \\\n--keyring-migration-destination=keyring_vault.so \\\n--keyring_vault_config=/dev/shm/pxc80/vault/keyring_vault.cnf &amp;\n\n... [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use\n    --explicit_defaults_for_timestamp server option (see documentation for more details).\n... [Note] --secure-file-priv is set to NULL. Operations related to importing and\n    exporting data are disabled\n... [Warning] WSREP: Node is not a cluster node. Disabling pxc_strict_mode\n... [Note] /dev/shm/pxc80/bin/mysqld (mysqld 8.0-debug) starting as process 5710 ...\n... [Note] Keyring migration successful.\n</code></pre> <p>On a successful migration, the destination keystore receives additional migrated keys (pre-existing keys in the destination keystore are not touched or removed). The source keystore retains the keys as the migration performs a copy operation and not a move operation.</p> <p>If the migration fails, the destination keystore is unchanged.</p>"},{"location":"data-at-rest-encryption.html#online-migration","title":"Online migration","text":"<p>In online migration, the node to migrate is kept running, and the migration server takes care of migrating keys for the said server to a new keystore by connecting to the node.</p> <p>For example, a cluster has three Percona XtraDB Cluster nodes, n1, n2, and n3. The nodes use the <code>keyring_file</code>. Migrate the n3 node to use <code>keyring_vault</code> using the following procedure:</p> <ol> <li> <p>Start the Migration Server (<code>mysqld</code> with a special option).</p> </li> <li> <p>The Migration Server copies the keys from the n3 keyring file and adds them to the vault server.</p> </li> <li> <p>Restart the n3 node with the vault parameter, and the keys are available.</p> </li> </ol> <pre><code>/dev/shm/pxc80/bin/mysqld --defaults-file=/dev/shm/pxc80/copy_mig.cnf \\\n--keyring-migration-source=keyring_vault.so \\\n--keyring_vault_config=/dev/shm/pxc80/keyring_vault3.cnf \\\n--keyring-migration-destination=keyring_file.so \\\n--keyring_file_data=/dev/shm/pxc80/node3/keyring \\\n--keyring-migration-host=localhost \\\n--keyring-migration-user=root \\\n--keyring-migration-port=16300 \\\n--keyring-migration-password='' &amp;\n</code></pre> <p>On a successful migration, the destination keystore receives the additional migrated keys. Any pre-existing keys in the destination keystore are unchanged. The source keystore retains the keys as the migration performs a copy operation and not a move operation.</p> <p>If the migration fails, the destination keystore is not changed.</p>"},{"location":"data-at-rest-encryption.html#migration-server-options","title":"Migration server options","text":"<ul> <li> <p><code>--keyring-migration-source</code>: The source keyring plugin that manages the keys to be migrated.</p> </li> <li> <p><code>--keyring-migration-destination</code>: The destination keyring plugin to which the migrated keys are to be copied</p> <p>Note</p> <p>For offline migration, no additional key migration options are needed.</p> </li> <li> <p><code>--keyring-migration-host</code>: The host where the running server is located. This host is always the local host.</p> </li> <li> <p><code>--keyring-migration-user</code>, <code>--keyring-migration-password</code>: The username and password for the account used to connect to the running server.</p> </li> <li> <p><code>--keyring-migration-port</code>: Used for TCP/IP connections, the running server\u2019s port  number used to connect.</p> </li> <li> <p><code>--keyring-migration-socket</code>: Used for Unix socket file or Windows named pipe connections, the running server socket or named pipe used to connect.</p> </li> </ul> <p>Prerequisite for migration:</p> <p>Make sure to pass required keyring options and other configuration parameters for the two keyring plugins. For example, if <code>keyring_file</code> is one of the plugins, you must explicitly configure the <code>keyring_file_data</code> system variable in the my.cnf file.</p> <p>Other non-keyring options may be required as well. One way to specify these options is by using <code>--defaults-file</code> to name an option file that contains the required options.</p> <pre><code>[mysqld]\nbasedir=/dev/shm/pxc80\ndatadir=/dev/shm/pxc80/copy_mig\nlog-error=/dev/shm/pxc80/logs/copy_mig.err\nsocket=/tmp/copy_mig.sock\nport=16400\n</code></pre> <p>See also</p> <p>Encrypt traffic documentation</p> <p>Percona Server for MySQL Documentation: Data-at-Rest Encryption https://www.percona.com/doc/percona-server/8.0/security/data-at-rest-encryption.html#data-at-rest-encryption</p>"},{"location":"data-at-rest-encryption.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"docker.html","title":"Running Percona XtraDB Cluster in a Docker Container","text":"<p>Docker images of Percona XtraDB Cluster are hosted publicly on Docker Hub at https://hub.docker.com/r/percona/percona-xtradb-cluster/.</p> <p>For more information about using Docker, see the Docker Docs. Make sure that you are using the latest version of Docker. The ones provided via <code>apt</code> and <code>yum</code> may be outdated and cause errors.</p> <p>We gather Telemetry data in the Percona packages and Docker images.</p> <p>Note</p> <p>By default, Docker pulls the image from Docker Hub if the image is not available locally.</p> <p>The image contains only the most essential binaries for Percona XtraDB Cluster to run. Some utilities included in a Percona Server for MySQL or MySQL installation might be missing from the Percona XtraDB Cluster Docker image.</p> <p>The following procedure describes how to set up a simple 3-node cluster for evaluation and testing purposes. Do not use these instructions in a production environment because the MySQL certificates generated in this procedure are self-signed. For a production environment, you should generate and store the certificates to be used by Docker.</p> <p>In this procedure, all of the nodes run Percona XtraDB Cluster 8.0 in separate containers on one host:</p> <ol> <li> <p>Create a ~/pxc-docker-test/config directory.</p> </li> <li> <p>Create a custom.cnf file with the following contents, and place the file in the new directory:</p> <pre><code>[mysqld]\nssl-ca = /cert/ca.pem\nssl-cert = /cert/server-cert.pem\nssl-key = /cert/server-key.pem\n\n[client]\nssl-ca = /cert/ca.pem\nssl-cert = /cert/client-cert.pem\nssl-key = /cert/client-key.pem\n\n[sst]\nencrypt = 4\nssl-ca = /cert/ca.pem\nssl-cert = /cert/server-cert.pem\nssl-key = /cert/server-key.pem\n</code></pre> </li> <li> <p>Create a cert directory and generate self-signed SSL certificates on the host node:</p> <pre><code>$ mkdir -m 777 -p ~/pxc-docker-test/cert\ndocker run --name pxc-cert --rm -v ~/pxc-docker-test/cert:/cert\npercona/percona-xtradb-cluster:8.0 mysql_ssl_rsa_setup -d /cert\n</code></pre> </li> <li> <p>Create a Docker network:</p> <pre><code>$ docker network create pxc-network\n</code></pre> </li> <li> <p>Bootstrap the cluster (create the first node):</p> <pre><code>$ docker run -d \\\n  -e MYSQL_ROOT_PASSWORD=test1234# \\\n  -e CLUSTER_NAME=pxc-cluster1 \\\n  --name=pxc-node1 \\\n  --net=pxc-network \\\n  -v ~/pxc-docker-test/cert:/cert \\\n  -v ~/pxc-docker-test/config:/etc/percona-xtradb-cluster.conf.d \\\n  percona/percona-xtradb-cluster:8.0\n</code></pre> </li> <li> <p>Join the second node:</p> <pre><code>$ docker run -d \\\n  -e MYSQL_ROOT_PASSWORD=test1234# \\\n  -e CLUSTER_NAME=pxc-cluster1 \\\n  -e CLUSTER_JOIN=pxc-node1 \\\n  --name=pxc-node2 \\\n  --net=pxc-network \\\n  -v ~/pxc-docker-test/cert:/cert \\\n  -v ~/pxc-docker-test/config:/etc/percona-xtradb-cluster.conf.d \\\n  percona/percona-xtradb-cluster:8.0\n</code></pre> </li> <li> <p>Join the third node:</p> <pre><code>$ docker run -d \\\n  -e MYSQL_ROOT_PASSWORD=test1234# \\\n  -e CLUSTER_NAME=pxc-cluster1 \\\n  -e CLUSTER_JOIN=pxc-node1 \\\n  --name=pxc-node3 \\\n  --net=pxc-network \\\n  -v ~/pxc-docker-test/cert:/cert \\\n  -v ~/pxc-docker-test/config:/etc/percona-xtradb-cluster.conf.d \\\n  percona/percona-xtradb-cluster:8.0\n</code></pre> </li> </ol> <p>To verify the cluster is available, do the following:</p> <ol> <li> <p>Access the MySQL client. For example, on the first node:</p> <pre><code>$ sudo docker exec -it pxc-node1 /usr/bin/mysql -uroot -ptest1234#\n</code></pre> Expected output <pre><code>mysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 12\n...\nYou are enforcing ssl connection via unix socket. Please consider\nswitching ssl off as it does not make connection via unix socket\nany more secure\n\nmysql&gt;\n</code></pre> </li> <li> <p>View the wsrep status variables:</p> <pre><code>mysql&gt; show status like 'wsrep%';\n</code></pre> Expected output <pre><code>+------------------------------+-------------------------------------------------+\n| Variable_name                | Value                                           |\n+------------------------------+-------------------------------------------------+\n| wsrep_local_state_uuid       | 625318e2-9e1c-11e7-9d07-aee70d98d8ac            |\n...\n| wsrep_local_state_comment    | Synced                                          |\n...\n| wsrep_incoming_addresses     | 172.18.0.2:3306,172.18.0.3:3306,172.18.0.4:3306 |\n...\n| wsrep_cluster_conf_id        | 3                                               |\n| wsrep_cluster_size           | 3                                               |\n| wsrep_cluster_state_uuid     | 625318e2-9e1c-11e7-9d07-aee70d98d8ac            |\n| wsrep_cluster_status         | Primary                                         |\n| wsrep_connected              | ON                                              |\n...\n| wsrep_ready                  | ON                                              |\n+------------------------------+-------------------------------------------------+\n59 rows in set (0.02 sec)\n</code></pre> </li> </ol>"},{"location":"docker.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"encrypt-traffic.html","title":"Encrypt PXC traffic","text":"<p>There are two kinds of traffic in Percona XtraDB Cluster:</p> <ol> <li> <p>Client-server traffic (the one between client applications and cluster nodes),</p> </li> <li> <p>Replication traffic, that includes SST, IST, write-set replication, and various service messages.</p> </li> </ol> <p>Percona XtraDB Cluster supports encryption for all types of traffic. Replication traffic encryption can be configured either automatically or manually.</p>"},{"location":"encrypt-traffic.html#encrypt-client-server-communication","title":"Encrypt client-server communication","text":"<p>Percona XtraDB Cluster uses the underlying MySQL encryption mechanism to secure communication between client applications and cluster nodes.</p> <p>MySQL generates default key and certificate files and places them in the data directory. You can override auto-generated files with manually created ones, as described in the section Generate keys and certificates manually.</p> <p>The auto-generated files are suitable for automatic SSL configuration, but you should use the same key and certificate files on all nodes.</p> <p>Specify the following settings in the <code>my.cnf</code> configuration file for each node:</p> <pre><code>[mysqld]\nssl-ca=/etc/mysql/certs/ca.pem\nssl-cert=/etc/mysql/certs/server-cert.pem\nssl-key=/etc/mysql/certs/server-key.pem\n\n[client]\nssl-ca=/etc/mysql/certs/ca.pem\nssl-cert=/etc/mysql/certs/client-cert.pem\nssl-key=/etc/mysql/certs/client-key.pem\n</code></pre> <p>After it is restarted, the node uses these files to encrypt communication with clients. MySQL clients require only the second part of the configuration to communicate with cluster nodes.</p> <p>MySQL generates the default key and certificate files and places them in the data directory. You can either use them or generate new certificates. For generation of new certificate please refer to Generate keys and certificates manually section.</p>"},{"location":"encrypt-traffic.html#encrypt-replication-traffic","title":"Encrypt replication traffic","text":"<p>Replication traffic refers to the inter-node traffic which includes the SST traffic, IST traffic, and replication traffic.</p> <p>The traffic of each type is transferred via a different channel, and so it is important to configure secure channels for all 3 variants to completely secure the replication traffic.</p> <p>Percona XtraDB Cluster supports a single configuration option which helps to secure the complete replication traffic, and is often referred to as SSL automatic configuration. You can also configure the security of each channel by specifying independent parameters.</p>"},{"location":"encrypt-traffic.html#ssl-automatic-configuration","title":"SSL automatic configuration","text":"<p>The automatic configuration of the SSL encryption needs a key and certificate files. MySQL generates a default key and certificate files and places them in the data directory.</p> <p>Important</p> <p>It is important that your cluster use the same SSL certificates on all nodes.</p>"},{"location":"encrypt-traffic.html#enable-pxc-encrypt-cluster-traffic","title":"Enable <code>pxc-encrypt-cluster-traffic</code>","text":"<p>Percona XtraDB Cluster includes the <code>pxc-encrypt-cluster-traffic</code> variable that enables automatic configuration of SSL encryption there-by encrypting SST, IST, and replication traffic.</p> <p>By default, <code>pxc-encrypt-cluster-traffic</code> is enabled thereby using a secured channel for replication. This variable is not dynamic and so it cannot be changed at runtime.</p> <p>Enabled, <code>pxc-encrypt-cluster-traffic</code> has the effect of applying the following settings: encrypt, ssl_key, ssl-ca, ssl-cert.</p> <p>Setting <code>pxc-encrypt-cluster-traffic=ON</code> has the effect of applying the following settings in the <code>my.cnf</code> configuration file:</p> <pre><code>[mysqld]\nwsrep_provider_options=\u201dsocket.ssl_key=server-key.pem;socket.ssl_cert=server-cert.pem;socket.ssl_ca=ca.pem\u201d\n\n[sst]\nencrypt=4\nssl-key=server-key.pem\nssl-ca=ca.pem\nssl-cert=server-cert.pem\n</code></pre> <p>For <code>wsrep_provider_options</code>, only the mentioned options are affected (<code>socket.ssl_key</code>, <code>socket,ssl_cert</code>, and <code>socket.ssl_ca</code>), the rest is not modified.</p> <p>Important</p> <p>Disabling <code>pxc-encrypt-cluster-traffic</code></p> <p>The default value of <code>pxc-encrypt-cluster-traffic</code> helps improve the security of your system.</p> <p>When <code>pxc-encrypt-cluster-traffic</code> is not enabled, anyone with the access to your network can connect to any PXC node either as a client or as another node joining the cluster. This potentially lets them query your data or get a complete copy of it.</p> <p>If you must disable <code>pxc-encrypt-cluster-traffic</code>, you need to stop the cluster and update <code>[mysqld]</code> section of  the configuration file: <code>pxc-encrypt-cluster-traffic=OFF</code> of each node. Then, restart the cluster.</p> <p>The automatic configuration of the SSL encryption needs key and certificate files. MySQL generates default key and certificate files and places them in data directory. These auto-generated files are suitable for automatic SSL configuration, but you should use the same key and certificate files on all nodes. Also you can override auto-generated files with manually created ones, as covered in Generate keys and certificates manually.</p> <p>The necessary key and certificate files are first searched at the <code>ssl-ca</code>, <code>ssl-cert</code>, and <code>ssl-key</code> options under <code>[mysqld]</code>. If these options are not set, the data directory is searched for <code>ca.pem</code>, <code>server-cert.pem</code>, and <code>server-key.pem</code> files.</p> <p>Note</p> <p>The <code>[sst]</code> section is not searched.</p> <p>If all three files are found, they are used to configure encryption. If any of the files is missing, a fatal error is generated.</p>"},{"location":"encrypt-traffic.html#ssl-manual-configuration","title":"SSL manual configuration","text":"<p>If user wants to enable encryption for specific channel only or use different certificates or other mix-match, then user can opt for manual configuration. This helps to provide more flexibility to end-users.</p> <p>To enable encryption manually, the location of the required key and certificate files shoud be specified in the Percona XtraDB Cluster configuration. If you do not have the necessary files, see Generate keys and certificates manually.</p> <p>Note</p> <p>Encryption settings are not dynamic. To enable it on a running cluster, you need to restart the entire cluster.</p> <p>There are three aspects of Percona XtraDB Cluster operation, where you can enable encryption:</p> <ul> <li> <p>Encrypt SST traffic</p> <p>This refers to SST traffic during full data copy from one cluster node (donor) to the joining node (joiner).</p> </li> <li> <p>Encrypt replication traffic</p> </li> <li> <p>Encrypt IST traffic</p> <p>This refers to all internal Percona XtraDB Cluster communication, such as, write-set replication, IST, and various service messages.</p> </li> </ul>"},{"location":"encrypt-traffic.html#encrypt-sst-traffic","title":"Encrypt SST traffic","text":"<p>This refers to full data transfer that usually occurs when a new node (JOINER) joins the cluster and receives data from an existing node (DONOR).</p> <p>For more information, see State snapshot transfer.</p> <p>Note</p> <p>If <code>keyring_file</code> plugin is used, then SST encryption is mandatory: when copying encrypted data via SST, the keyring must be sent over with the files for decryption. In this case following options are to be set in <code>my.cnf</code> on all nodes:</p> <pre><code>early-plugin-load=keyring_file.so\nkeyring-file-data=/path/to/keyring/file\n</code></pre> <p>The cluster will not work if keyring configuration across nodes is different.</p> <p>The only available SST method is <code>xtrabackup-v2</code> which uses Percona XtraBackup.</p>"},{"location":"encrypt-traffic.html#xtrabackup","title":"xtrabackup","text":"<p>This is the only available SST method (the <code>wsrep_sst_method</code> is always set to <code>xtrabackup-v2</code>), which uses Percona XtraBackup to perform non-blocking transfer of files. For more information, see Percona XtraBackup SST Configuration.</p> <p>Encryption mode for this method is selected using the <code>encrypt</code> option:</p> <ul> <li> <p><code>encrypt=0</code> is the default value, meaning that encryption is disabled.</p> </li> <li> <p><code>encrypt=4</code> enables encryption based on key and certificate files generated with OpenSSL. For more information, see Generating Keys and Certificates Manually.</p> </li> </ul> <p>To enable encryption for SST using XtraBackup,   specify the location of the keys and certificate files   in the each node\u2019s configuration under <code>[sst]</code>:</p> <pre><code>[sst]\nencrypt=4\nssl-ca=/etc/mysql/certs/ca.pem\nssl-cert=/etc/mysql/certs/server-cert.pem\nssl-key=/etc/mysql/certs/server-key.pem\n</code></pre> <p>Note</p> <p>SSL clients require DH parameters to be at least 1024 bits, due to the logjam vulnerability. However, versions of <code>socat</code> earlier than 1.7.3 use 512-bit parameters. If a <code>dhparams.pem</code> file of required length is not found during SST in the data directory, it is generated with 2048 bits, which can take several minutes. To avoid this delay, create the <code>dhparams.pem</code> file manually and place it in the data directory before joining the node to the cluster:</p> <pre><code>$ openssl dhparam -out /path/to/datadir/dhparams.pem 2048\n</code></pre> <p>For more information, see this blog post.</p>"},{"location":"encrypt-traffic.html#encrypt-replicationist-traffic","title":"Encrypt replication/IST traffic","text":"<p>Replication traffic refers to the following:</p> <ul> <li> <p>Write-set replication which is the main workload of Percona XtraDB Cluster (replicating transactions that execute on one node to all other nodes).</p> </li> <li> <p>Incremental State Transfer (IST) which is copying only missing transactions from DONOR to JOINER node.</p> </li> <li> <p>Service messages which ensure that all nodes are synchronized.</p> </li> </ul> <p>All this traffic is transferred via the same underlying communication channel (<code>gcomm</code>). Securing this channel will ensure that IST traffic, write-set replication, and service messages are encrypted. (For IST, a separate channel is configured using the same configuration parameters, so 2 sections are described together).</p> <p>To enable encryption for all these processes, define the paths to the key, certificate and certificate authority files using the following wsrep provider options:</p> <ul> <li> <p><code>socket.ssl_ca</code></p> </li> <li> <p><code>socket.ssl_cert</code></p> </li> <li> <p><code>socket.ssl_key</code></p> </li> </ul> <p>To set these options, use the <code>wsrep_provider_options</code> variable in the configuration file:</p> <pre><code>$ wsrep_provider_options=\"socket.ssl=yes;socket.ssl_ca=/etc/mysql/certs/ca.pem;socket.ssl_cert=/etc/mysql/certs/server-cert.pem;socket.ssl_key=/etc/mysql/certs/server-key.pem\"\n</code></pre> <p>Note</p> <p>You must use the same key and certificate files on all nodes, preferably those used for Encrypt client-server communication.</p> <p>Check upgrade-certificate section on how to upgrade existing certificates.</p>"},{"location":"encrypt-traffic.html#generate-keys-and-certificates-manually","title":"Generate keys and certificates manually","text":"<p>As mentioned above, MySQL generates default key and certificate files and places them in the data directory. If you want to override these certificates, the following new sets of files can be generated:</p> <ul> <li> <p>Certificate Authority (CA) key and certificate to sign the server and client certificates.</p> </li> <li> <p>Server key and certificate to secure database server activity and write-set replication traffic.</p> </li> <li> <p>Client key and certificate to secure client communication traffic.</p> </li> </ul> <p>These files should be generated using OpenSSL.</p> <p>Note</p> <p>The <code>Common Name</code> value used for the server and client keys and certificates must differ from that value used for the CA certificate.</p> Generate CA key and certificateGenerate server key and certificateGenerate client key and certificate <p>The Certificate Authority is used to verify the signature on certificates.</p> <ol> <li> <p>Generate the CA key file:</p> <pre><code>$ openssl genrsa 2048 &gt; ca-key.pem\n</code></pre> </li> <li> <p>Generate the CA certificate file:</p> <pre><code>$ openssl req -new -x509 -nodes -days 3600\n    -key ca-key.pem -out ca.pem\n</code></pre> </li> </ol> <ol> <li> <p>Generate the server key file:</p> <pre><code>$ openssl req -newkey rsa:2048 -days 3600 \\\n    -nodes -keyout server-key.pem -out server-req.pem\n</code></pre> </li> <li> <p>Remove the passphrase:</p> <pre><code>$ openssl rsa -in server-key.pem -out server-key.pem\n</code></pre> </li> <li> <p>Generate the server certificate file:</p> <pre><code>$ openssl x509 -req -in server-req.pem -days 3600 \\\n    -CA ca.pem -CAkey ca-key.pem -set_serial 01 \\\n    -out server-cert.pem\n</code></pre> </li> </ol> <ol> <li> <p>Generate the client key file:</p> <pre><code>$ openssl req -newkey rsa:2048 -days 3600 \\\n    -nodes -keyout client-key.pem -out client-req.pem\n</code></pre> </li> <li> <p>Remove the passphrase:</p> <pre><code>$ openssl rsa -in client-key.pem -out client-key.pem\n</code></pre> </li> <li> <p>Generate the client certificate file:</p> <pre><code>$ openssl x509 -req -in client-req.pem -days 3600 \\\n   -CA ca.pem -CAkey ca-key.pem -set_serial 01 \\\n   -out client-cert.pem\n</code></pre> </li> </ol>"},{"location":"encrypt-traffic.html#verify-certificates","title":"Verify certificates","text":"<p>To verify that the server and client certificates are correctly signed by the CA certificate, run the following command:</p> <pre><code>$ openssl verify -CAfile ca.pem server-cert.pem client-cert.pem\n</code></pre> <p>If the verification is successful, you should see the following output:</p> <pre><code>server-cert.pem: OK\nclient-cert.pem: OK\n</code></pre>"},{"location":"encrypt-traffic.html#failed-validation-caused-by-matching-cn","title":"Failed validation caused by matching CN","text":"<p>Sometimes, an SSL configuration may fail if the certificate and the CA files contain the same .</p> <p>To check if this is the case run <code>openssl</code> command as follows and verify that the CN field differs for the Subject and Issuer lines.</p> <pre><code>$ openssl x509 -in server-cert.pem -text -noout\n</code></pre> <p>Incorrect values</p> <pre><code>Certificate:\nData:\nVersion: 1 (0x0)\nSerial Number: 1 (0x1)\nSignature Algorithm: sha256WithRSAEncryption\nIssuer: CN=www.percona.com, O=Database Performance., C=US\n...\nSubject: CN=www.percona.com, O=Database Performance., C=AU\n...\n</code></pre> <p>To obtain a more compact output run <code>openssl</code> specifying -subject and -issuer parameters:</p> <pre><code>$ openssl x509 -in server-cert.pem -subject -issuer -noout\n</code></pre> Expected output <pre><code>subject= /CN=www.percona.com/O=Database Performance./C=AU\nissuer= /CN=www.percona.com/O=Database Performance./C=US\n</code></pre>"},{"location":"encrypt-traffic.html#deploy-keys-and-certificates","title":"Deploy keys and certificates","text":"<p>Use a secure method (for example, <code>scp</code> or <code>sftp</code>) to send the key and certificate files to each node. Place them under the <code>/etc/mysql/certs/</code> directory or similar location where you can find them later.</p> <p>Note</p> <p>Make sure that this directory is protected with proper permissions. Most likely, you only want to give read permissions to the user running <code>mysqld</code>.</p> <p>The following files are required:</p> <ul> <li>Certificate Authority certificate file (<code>ca.pem</code>)</li> </ul> <p>This file is used to verify signatures.</p> <ul> <li>Server key and certificate files (<code>server-key.pem</code> and <code>server-cert.pem</code>)</li> </ul> <p>These files are used to secure database server activity   and write-set replication traffic.</p> <ul> <li>Client key and certificate files (<code>client-key.pem</code> and <code>client-cert.pem</code>)</li> </ul> <p>These files are required only if the node should act as a MySQL client.   For example, if you are planning to perform SST using <code>mysqldump</code>.</p> <p>Note</p> <p>Upgrade certificates subsection covers the details on upgrading certificates, if necessary.</p>"},{"location":"encrypt-traffic.html#upgrade-certificates","title":"Upgrade certificates","text":"<p>The following procedure shows how to upgrade certificates used for securing replication traffic when there are two nodes in the cluster.</p> <ol> <li> <p>Restart the first node with the <code>socket.ssl_ca</code> option set to a combination of the the old and new certificates in a single file.</p> <p>For example, you can merge contents of <code>old-ca.pem</code> and <code>new-ca.pem</code> into <code>upgrade-ca.pem</code> as follows:</p> <pre><code>$ cat old-ca.pem &gt; upgrade-ca.pem &amp;&amp; \\\ncat new-ca.pem &gt;&gt; upgrade-ca.pem\n</code></pre> <p>Set the <code>wsrep_provider_options</code> variable as follows:</p> <pre><code>$ wsrep_provider_options=\"socket.ssl=yes;socket.ssl_ca=/etc/mysql/certs/upgrade-ca.pem;socket.ssl_cert=/etc/mysql/certs/old-cert.pem;socket.ssl_key=/etc/mysql/certs/old-key.pem\"\n</code></pre> </li> <li> <p>Restart the second node with the <code>socket.ssl_ca</code>, <code>socket.ssl_cert</code>, and <code>socket.ssl_key</code> options set to the corresponding new certificate files.</p> <pre><code>$ wsrep_provider_options=\"socket.ssl=yes;socket.ssl_ca=/etc/mysql/certs/new-ca.pem;socket.ssl_cert=/etc/mysql/certs/new-cert.pem;socket.ssl_key=/etc/mysql/certs/new-key.pem\"\n</code></pre> </li> <li> <p>Restart the first node with the new certificate files, as in the previous step.</p> </li> <li> <p>You can remove the old certificate files.</p> </li> </ol>"},{"location":"encrypt-traffic.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"failover.html","title":"Cluster failover","text":"<p>Cluster membership is determined simply by which nodes are connected to the rest of the cluster; there is no configuration setting explicitly defining the list of all possible cluster nodes. Therefore, every time a node joins the cluster, the total size of the cluster is increased and when a node leaves (gracefully) the size is decreased.</p> <p>The size of the cluster is used to determine the required votes to achieve quorum. A quorum vote is done when a node or nodes are suspected to no longer be part of the cluster (they do not respond). This no response timeout is the <code>evs.suspect_timeout</code> setting in the <code>wsrep_provider_options</code> (default 5 sec), and when a node goes down ungracefully, write operations will be blocked on the cluster for slightly longer than that timeout.</p> <p>Once a node (or nodes) is determined to be disconnected, then the remaining nodes cast a quorum vote, and if the majority of nodes from before the disconnect are still still connected, then that partition remains up. In the case of a network partition, some nodes will be alive and active on each side of the network disconnect. In this case, only the quorum will continue. The partition(s) without quorum will change to non-primary state.</p> <p>As a consequence, it\u2019s not possible to have safe automatic failover in a 2 node cluster, because failure of one node will cause the remaining node to become non-primary. Moreover, any cluster with an even number of nodes (say two nodes in two different switches) have some possibility of a split brain situation, when neither partition is able to retain quorum if connection between them is lost, and so they both become non-primary.</p> <p>Therefore, for automatic failover, the rule of 3s is recommended. It applies at various levels of your infrastructure, depending on how far the cluster is spread out to avoid single points of failure. For example:</p> <ul> <li> <p>A cluster on a single switch should have 3 nodes</p> </li> <li> <p>A cluster spanning switches should be spread evenly across at least 3 switches</p> </li> <li> <p>A cluster spanning networks should span at least 3 networks</p> </li> <li> <p>A cluster spanning data centers should span at least 3 data centers</p> </li> </ul> <p>These rules will prevent split brain situations and ensure automatic failover works correctly.</p>"},{"location":"failover.html#use-an-arbitrator","title":"Use an arbitrator","text":"<p>If it is too expensive to add a third node, switch, network, or datacenter, you should use an arbitrator. An arbitrator is a voting member of the cluster that can receive and relay replication, but it does not persist any data, and runs its own daemon instead of <code>mysqld</code>. Placing even a single arbitrator in a 3<sup>rd</sup> location can add split brain protection to a cluster that is spread across only two nodes/locations.</p>"},{"location":"failover.html#recover-a-non-primary-cluster","title":"Recover a non-primary cluster","text":"<p>It is important to note that the rule of 3s applies only to automatic failover. In the event of a 2-node cluster (or in the event of some other outage that leaves a minority of nodes active), the failure of one node will cause the other to become non-primary and refuse operations. However, you can recover the node from non-primary state using the following command:</p> <pre><code>SET GLOBAL wsrep_provider_options='pc.bootstrap=true';\n</code></pre> <p>This will tell the node (and all nodes still connected to its partition) that it can become a primary cluster. However, this is only safe to do when you are sure there is no other partition operating in primary as well, or else Percona XtraDB Cluster will allow those two partitions to diverge (and you will end up with two databases that are impossible to re-merge automatically).</p> <p>For example, assume there are two data centers, where one is primary and one is for disaster recovery, with an even number of nodes in each. When an extra arbitrator node is run only in the primary data center, the following high availability features will be available:</p> <ul> <li> <p>Auto-failover of any single node or nodes within the primary or secondary data center</p> </li> <li> <p>Failure of the secondary data center would not cause the primary to go down (because of the arbitrator)</p> </li> <li> <p>Failure of the primary data center would leave the secondary in a non-primary state.</p> </li> <li> <p>If a disaster-recovery failover has been executed, you can tell the secondary data center to bootstrap itself with a single command, but disaster-recovery failover remains in your control.</p> </li> </ul>"},{"location":"failover.html#other-reading","title":"Other reading","text":"<ul> <li>PXC - Failure Scenarios with only 2 nodes</li> </ul>"},{"location":"failover.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"faq.html","title":"Frequently asked questions","text":""},{"location":"faq.html#how-do-i-report-bugs","title":"How do I report bugs?","text":"<p>All bugs can be reported on JIRA. Please submit <code>error.log</code> files from all the nodes.</p>"},{"location":"faq.html#how-do-i-solve-locking-issues-like-auto-increment","title":"How do I solve locking issues like auto-increment?","text":"<p>For auto-increment,\u00a0Percona XtraDB Cluster changes <code>auto_increment_offset</code> for each new node. In a single-node workload, locking is handled in the same way as InnoDB. In case of write load on several nodes, Percona XtraDB Cluster uses optimistic locking and the application may receive lock error in response to <code>COMMIT</code> query.</p>"},{"location":"faq.html#what-if-a-node-crashes-and-innodb-recovery-rolls-back-some-transactions","title":"What if a node crashes and InnoDB recovery rolls back some transactions?","text":"<p>When a node crashes, after restarting, it will copy the whole dataset from another\u00a0node (if there were changes to data since the crash).</p>"},{"location":"faq.html#how-can-i-check-the-galera-node-health","title":"How can I check the Galera node health?","text":"<p>To check the health of a Galera node, use the following query:</p> <pre><code>mysql&gt; SELECT 1 FROM dual;\n</code></pre> <p>The following results of the previous query are possible:</p> <ul> <li> <p>You get the row with <code>id=1</code> (node is healthy)</p> </li> <li> <p>Unknown error (node is online, but Galera is not connected/synced with the cluster)</p> </li> <li> <p>Connection error (node is not online)</p> </li> </ul> <p>You can also check a node\u2019s health with the <code>clustercheck</code> script. First set up the <code>clustercheck</code> user:</p> <pre><code>mysql&gt; CREATE USER 'clustercheck'@'localhost' IDENTIFIED BY PASSWORD\n'*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19';\n</code></pre> Expected output <pre><code>Query OK, 0 rows affected (0.00 sec)\n</code></pre> <pre><code>mysql&gt; GRANT PROCESS ON *.* TO 'clustercheck'@'localhost';\n</code></pre> <p>You can then check a node\u2019s health by running the <code>clustercheck</code> script:</p> <pre><code>$ /usr/bin/clustercheck clustercheck password 0\n</code></pre> <p>If the node is running, you should get the following status:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: text/plain\nConnection: close\nContent-Length: 40\n\nPercona XtraDB Cluster Node is synced.\n</code></pre> <p>In case node isn\u2019t synced or if it is offline, status will look like:</p> <pre><code>HTTP/1.1 503 Service Unavailable\nContent-Type: text/plain\nConnection: close\nContent-Length: 44\n\nPercona XtraDB Cluster Node is not synced.\n</code></pre> <p>Note</p> <p>The <code>clustercheck</code> script has the following syntax:</p> <p><code>&lt;user&gt; &lt;pass&gt; &lt;available_when_donor=0|1&gt; &lt;log_file&gt; &lt;available_when_readonly=0|1&gt; &lt;defaults_extra_file&gt;</code></p> <p>Recommended: <code>server_args = user pass 1 /var/log/log-file 0 /etc/my.cnf.local</code></p> <p>Compatibility: <code>server_args = user pass 1 /var/log/log-file 1 /etc/my.cnf.local</code></p>"},{"location":"faq.html#how-does-percona-xtradb-cluster-handle-big-transactions","title":"How does Percona XtraDB Cluster handle big transactions?","text":"<p>Percona XtraDB Cluster populates write set in memory before replication, and this sets the limit for the size of transactions that make sense. There are wsrep variables for maximum row count and maximum size of write set to make sure that the server does not run out of memory.</p>"},{"location":"faq.html#is-it-possible-to-have-different-table-structures-on-the-nodes","title":"Is it possible to have different table structures on the nodes?","text":"<p>For example, if there are four nodes, with four tables: <code>sessions_a</code>, <code>sessions_b</code>, <code>sessions_c</code>, and <code>sessions_d</code>, and you want each table in a separate node, this is not possible for InnoDB tables. However, it will work for MEMORY tables.</p>"},{"location":"faq.html#what-if-a-node-fails-or-there-is-a-network-issue-between-nodes","title":"What if a node fails or there is a network issue between nodes?","text":"<p>The quorum mechanism in\u00a0Percona XtraDB Cluster will decide which nodes can accept traffic and will shut down the nodes that do not belong to the quorum. Later when the failure is fixed, the nodes will need to copy data from the working cluster.</p> <p>The algorithm for quorum is Dynamic Linear Voting (DLV). The quorum is preserved if (and only if) the sum weight of the nodes in a new component strictly exceeds half that of the preceding Primary Component, minus the nodes which left gracefully.</p> <p>The mechanism is described in detail in Galera documentation.</p>"},{"location":"faq.html#how-would-the-quorum-mechanism-handle-split-brain","title":"How would the quorum mechanism handle split brain?","text":"<p>The quorum mechanism cannot handle split brain. If there is no way to decide on the primary component, Percona XtraDB Cluster has no way to resolve a split brain. The minimal recommendation is to have 3 nodes. However, it is possibile to allow a node to handle traffic with the following option:</p> <pre><code>wsrep_provider_options=\"pc.ignore_sb = yes\"\n</code></pre>"},{"location":"faq.html#why-a-node-stops-accepting-commands-if-the-other-one-fails-in-a-2-node-setup","title":"Why a node stops accepting commands if the other one fails in a 2-node setup?","text":"<p>This is expected behavior to prevent split brain. For more information, see previous question or Galera documentation.</p>"},{"location":"faq.html#is-it-possible-to-set-up-a-cluster-without-state-transfer","title":"Is it possible to set up a cluster without state transfer?","text":"<p>It is possible in two ways:</p> <ol> <li> <p>By default, Galera reads starting position from a text file <code>&lt;datadir&gt;/grastate.dat</code>. Make this file identical on all nodes, and there will be no state transfer after starting a node.</p> </li> <li> <p>Use the <code>wsrep_start_position</code> variable to start the nodes with the same <code>UUID:seqno</code> value.</p> </li> </ol>"},{"location":"faq.html#what-tcp-ports-are-used-by-percona-xtradb-cluster","title":"What TCP ports are used by Percona XtraDB Cluster?","text":"<p>You may need to open up to four ports if you are using a firewall:</p> <ol> <li> <p>Regular MySQL port (default is 3306).</p> </li> <li> <p>Port for group communication (default is 4567). It can be changed using the following option:</p> <pre><code>wsrep_provider_options =\"gmcast.listen_addr=tcp://0.0.0.0:4010; \"\n</code></pre> </li> <li> <p>Port for State Snaphot Transfer (default is 4444). It can be changed using the following option:</p> <pre><code>wsrep_sst_receive_address=10.11.12.205:5555\n</code></pre> </li> <li> <p>Port for Incremental State Transfer (default is port for group communication + 1 or 4568). It can be changed using the following option:</p> <pre><code>wsrep_provider_options = \"ist.recv_addr=10.11.12.206:7777; \"\n</code></pre> </li> </ol>"},{"location":"faq.html#is-there-async-mode-or-only-sync-commits-are-supported","title":"Is there \u201casync\u201d mode or only \u201csync\u201d commits are supported?","text":"<p>Percona XtraDB Cluster does not support \u201casync\u201d mode, all commits are synchronous on all nodes. To be precise, the commits are \u201cvirtually\u201d synchronous, which means that the transaction should pass certification on nodes, not physical commit. Certification means a guarantee that the transaction does not have conflicts with other transactions on the corresponding node.</p>"},{"location":"faq.html#does-it-work-with-regular-mysql-replication","title":"Does it work with regular MySQL replication?","text":"<p>Yes. On the node you are going to use as source, you should enable <code>log-bin</code> and <code>log-slave-update</code> options.</p>"},{"location":"faq.html#why-the-init-script-etcinitdmysql-does-not-start","title":"Why the init script (/etc/init.d/mysql) does not start?","text":"<p>Try to disable SELinux with the following command:</p> <pre><code>$ echo 0 &gt; /selinux/enforce\n</code></pre>"},{"location":"faq.html#what-does-nc-invalid-option-d-in-the-ssterr-log-file-mean","title":"What does \u201cnc: invalid option \u2013 \u2018d\u2019\u201d in the sst.err log file mean?","text":"<p>This error is specific to Debian and Ubuntu. Percona XtraDB Cluster uses <code>netcat-openbsd</code> package. This dependency has been fixed. Future releases of Percona XtraDB Cluster will be compatible with any <code>netcat</code> (see bug PXC-941).</p>"},{"location":"faq.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"garbd-howto.html","title":"Set up Galera arbitrator","text":"<p>The size of a cluster increases when a node joins the cluster and decreases when a node leaves. A cluster reacts to replication problems with inconsistency voting. The size of the cluster determines the required votes to achieve a quorum. If a node no longer responds and is disconnected from the cluster the remaining nodes vote. The majority of the nodes that vote are considered to be in the cluster.</p> <p>The arbitrator is important if you have an even number of nodes remaining in the cluster. The arbitrator keeps the number of nodes as an odd number, which avoids the split-brain situation.</p> <p>A Galera Arbitrator is a lightweight member of a Percona XtraDB Cluster. This member can vote but does not do any replication and is not included in flow control calculations. The Galera Arbitrator is a separate daemon called <code>garbd</code>. You can start this daemon separately from the cluster and run this daemon either as a service or from the shell. You cannot configure this daemon using the <code>my.cnf</code> file.</p> <p>Note</p> <p>For more information on how to set up a cluster you can read in the Configuring Percona XtraDB Cluster on Ubuntu or Configuring Percona XtraDB Cluster on CentOS manuals.</p>"},{"location":"garbd-howto.html#installation","title":"Installation","text":"<p>Galera Arbitrator does not need a dedicated server and can be installed on a machine running other applications. The server must have good network connectivity.</p> <p>Galera Arbitrator can be installed from Percona\u2019s repository on Debian/Ubuntu distributions with the following command:</p> <pre><code>root@ubuntu:~# apt install percona-xtradb-cluster-garbd\n</code></pre> <p>Galera Arbitrator can be installed from Percona\u2019s repository on RedHat or derivative distributions with the following command:</p> <pre><code>[root@centos ~]# yum install percona-xtradb-cluster-garbd\n</code></pre>"},{"location":"garbd-howto.html#start-garbd-and-configuration","title":"Start <code>garbd</code> and configuration","text":"<p>Note</p> <p>On Percona XtraDB Cluster 8.0, SSL is enabled by default. To run the Galera Arbitrator, you must copy the SSL certificates and configure <code>garbd</code> to use the certificates.</p> <p>It is necessary to specify the cipher. In this example, it is <code>AES128-SHA256</code>. If you do not specify the cipher, an error occurs with a \u201cTerminate called after throwing an instance of \u2018gnu::NotSet\u2019\u201d message.</p> <p>For more information, see socket.ssl_cipher</p> <p>When starting from the shell, you can set the parameters from the command line or edit the configuration file. This is an example of starting from the command line:</p> <pre><code>$ garbd --group=my_ubuntu_cluster \\\n--address=\"gcomm://192.168.70.61:4567, 192.168.70.62:4567, 192.168.70.63:4567\" \\\n--option=\"socket.ssl=YES; socket.ssl_key=/etc/ssl/mysql/server-key.pem; \\\nsocket.ssl_cert=/etc/ssl/mysql/server-cert.pem; \\\nsocket.ssl_ca=/etc/ssl/mysql/ca.pem; \\\nsocket.ssl_cipher=AES128-SHA256\"\n</code></pre> <p>To avoid entering the options each time you start <code>garbd</code>, edit the options in the configuration file. To configure Galera Arbitrator on Ubuntu/Debian, edit the <code>/etc/default/garb</code> file. On RedHat or derivative distributions, the configuration can be found in <code>/etc/sysconfig/garb</code> file.</p> <p>The configuration file should look like this after the installation and before you have added your parameters:</p> <pre><code># Copyright (C) 2013-2015 Codership Oy\n# This config file is to be sourced by garb service script.\n\n# REMOVE THIS AFTER CONFIGURATION\n\n# A comma-separated list of node addresses (address[:port]) in the cluster\n# GALERA_NODES=\"\"\n\n# Galera cluster name, should be the same as on the rest of the nodes.\n# GALERA_GROUP=\"\"\n\n# Optional Galera internal options string (e.g. SSL settings)\n# see http://galeracluster.com/documentation-webpages/galeraparameters.html\n# GALERA_OPTIONS=\"\"\n\n# Log file for garbd. Optional, by default logs to syslog\n# Deprecated for CentOS7, use journalctl to query the log for garbd\n# LOG_FILE=\"\"\n</code></pre> <p>Add the parameter information about the cluster. For this document, we use the cluster information from Configuring Percona XtraDB Cluster on Ubuntu.</p> <p>Note</p> <p>Please note that you need to remove the <code># REMOVE THIS AFTER CONFIGURATION</code> line before you can start the service.</p> <pre><code># This config file is to be sourced by garb service script.\n\n# A comma-separated list of node addresses (address[:port]) in the cluster\nGALERA_NODES=\"192.168.70.61:4567, 192.168.70.62:4567, 192.168.70.63:4567\"\n\n# Galera cluster name, should be the same as on the rest of the nodes.\nGALERA_GROUP=\"my_ubuntu_cluster\"\n\n# Optional Galera internal options string (e.g. SSL settings)\n# see http://galeracluster.com/documentation-webpages/galeraparameters.html\n# GALERA_OPTIONS=\"socket.ssl_cert=/etc/ssl/mysql/server-key.pem;socket./etc/ssl/mysql/server-key.pem\"\n\n# Log file for garbd. Optional, by default logs to syslog\n# Deprecated for CentOS7, use journalctl to query the log for garbd\n# LOG_FILE=\"/var/log/garbd.log\"\n</code></pre> <p>You can now start the Galera Arbitrator daemon (<code>garbd</code>) by running:</p> On Debian or UbuntuOn Red Hat Enterprise Linux or CentOS <pre><code>root@server:~# service garbd start\n</code></pre> Expected output <pre><code>[ ok ] Starting /usr/bin/garbd: :.\n</code></pre> <p>Note</p> <p>On systems that run <code>systemd</code> as the default system and service manager, use <code>systemctl</code> instead of <code>service</code> to invoke the command. Currently, both are supported.</p> <pre><code>root@server:~# systemctl start garb\n</code></pre> <pre><code>root@server:~# service garb start\n</code></pre> Expected output <pre><code>[ ok ] Starting /usr/bin/garbd: :.\n</code></pre> <p>Additionally, you can check the <code>arbitrator</code> status by running:</p> On Debian or UbuntuOn Red Hat Enterprise Linux or CentOS <pre><code>root@server:~# service garbd status\n</code></pre> Expected output <pre><code>[ ok ] garb is running.\n</code></pre> <pre><code>root@server:~# service garb status\n</code></pre> Expected output <pre><code>[ ok ] garb is running.\n</code></pre>"},{"location":"garbd-howto.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"gcache-record-set-cache-difference.html","title":"Understand GCache and Record-Set cache","text":"<p>In Percona XtraDB Cluster, there is a concept of GCache and Record-Set cache (which can also be called transaction write-set cache). The use of these two caches is often confusing if you are running long transactions, because both of them result in the creation of disk-level files. This manual describes what their main differences are.</p>"},{"location":"gcache-record-set-cache-difference.html#record-set-cache","title":"Record-Set cache","text":"<p>When you run a long-running transaction on any particular node, it will try to append a key for each row that it tries to modify (the key is a unique identifier for the row <code>{db,table,pk.columns}</code>). This information is cached in out-write-set, which is then sent to the group for certification.</p> <p>Keys are cached in HeapStore (which has <code>page-size=64K</code> and <code>total-size=4MB</code>). If the transaction data-size outgrows this limit, then the storage is switched from Heap to Page (which has <code>page-size=64MB</code> and <code>total-limit=free-space-on-disk</code>).</p> <p>All these limits are non-configurable, but having a memory-page size greater than 4MB per transaction can cause things to stall due to memory pressure, so this limit is reasonable. This is another limitation to address when Galera supports large transaction.</p> <p>The same long-running transaction will also generate binlog data that also appends to out-write-set on commit (<code>HeapStore-&gt;FileStore</code>). This data can be significant, as it is a binlog image of rows inserted/updated/deleted by the transaction. The <code>wsrep_max_ws_size</code> variable controls the size of this part of the write-set. The threshold doesn\u2019t consider size allocated for caching-keys and the header.</p> <p>If <code>FileStore</code> is used, it creates a file on the disk (with names like <code>xxxx_keys</code> and <code>xxxx_data</code>) to store the cache data. These files are kept until a transaction is committed, so the lifetime of the transaction is linked.</p> <p>When the node is done with the transaction and is about to commit, it will generate the final-write-set using the two files (if the data size grew enough to use <code>FileStore</code>) plus <code>HEADER</code>, and will publish it for certification to cluster.</p> <p>The native node executing the transaction will also act as subscription node, and will receive its own write-set through the cluster publish mechanism. This time, the native node will try to cache write-set into its GCache. How much data GCache retains is controlled by the GCache configuration.</p>"},{"location":"gcache-record-set-cache-difference.html#gcache","title":"GCache","text":"<p>GCache holds the write-set published on the cluster for replication. The lifetime of write-set in GCache is not transaction-linked.</p> <p>When a <code>JOINER</code> node needs an IST, it will be serviced through this GCache (if possible).</p> <p>GCache will also create the files to disk. You can read more about it here.</p> <p>At any given point in time, the native node has two copies of the write-set: one in GCache and another in Record-Set Cache.</p> <p>For example, lets say you <code>INSERT/UPDATE</code> 2 million rows in a table with the following schema.</p> <pre><code>(int, char(100), char(100) with pk (int, char(100))\n</code></pre> <p>It will create write-set key/data files in the background similar to the following:</p> <pre><code>-rw------- 1 xxx xxx 67108864 Apr 11 12:26 0x00000707_data.000000\n-rw------- 1 xxx xxx 67108864 Apr 11 12:26 0x00000707_data.000001\n-rw------- 1 xxx xxx 67108864 Apr 11 12:26 0x00000707_data.000002\n-rw------- 1 xxx xxx 67108864 Apr 11 12:26 0x00000707_keys.000000\n</code></pre>"},{"location":"gcache-record-set-cache-difference.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"gcache-write-set-cache-encryption.html","title":"GCache encryption and Write-Set cache encryption","text":"<p>These features are tech preview. Before using these features in production, we recommend that you test restoring production from physical backups in your environment, and also use the alternative backup method for redundancy.</p>"},{"location":"gcache-write-set-cache-encryption.html#gcache-and-write-set-cache-encryption","title":"GCache and Write-Set cache encryption","text":"<p>Enabling this feature encrypts the Galera GCache and Write-Set cache files with a File Key.  </p> <p>GCache has a RingBuffer on-disk file to manage write-sets. The keyring only stores the Master Key which is used to encrypt the File Key used by the RingBuffer file. The encrypted File Key is stored in the RingBuffer\u2019s preamble. The RingBuffer file of GCache is non-volatile, which means this file survives a restart. The File Key is not stored for GCache off-pages and Write-Set cache files.</p> <p>See also</p> <p>For more information, see Understanding GCache and Record-set Cache, and the Percona Database Performance Blog: All you need to know about GCache</p> Sample preamble key-value pairs <pre><code>Version: 2\nGID: 3afaa71d-6665-11ed-98de-2aba4aabc65e\nsynced: 0\nenc_version: 1\nenc_encrypted: 1\nenc_mk_id: 3\nenc_mk_const_id: 3ad045a2-6665-11ed-a49d-cb7b9d88753f\nenc_mk_uuid: 3ad04c8e-6665-11ed-a947-c7e346da147f\nenc_fk_id: S4hRiibUje4v5GSQ7a+uuS6NBBX9+230nsPHeAXH43k=\nenc_crc: 279433530\n</code></pre>"},{"location":"gcache-write-set-cache-encryption.html#key-descriptions","title":"Key descriptions","text":"<p>The following table describes the encryption keys defined in the preamble. All other keys in the preamble are not related to encryption.</p> Key Description <code>enc_version</code> The encryption version <code>enc_encrypted</code> If the GCache is encrypted or not <code>enc_mk_id</code> A part of the Master Key ID. Rotating the Master Key increments the sequence number. <code>enc_mk_const_id</code> A part of the Master Key ID, a constant Universally unique identifier (UUID). This option remains constant for the duration of the <code>galera.gcache</code> file and simplifies matching the Masater Key inside the keyring to the instance that generated the keys. Deleting the <code>galera.gcache</code> changes the value of this key. <code>enc_mk_uuid</code> The first Master Key or if Galera detects that the preamble is inconsistent, which causes a full GCache reset and a new Master Key is required, generates this UUID. <code>enc_fk_id</code> The File Key ID encrypted with the Master Key. <code>enc_crc</code> The cyclic redundancy check (CRC) calculated from all encryption-related keys."},{"location":"gcache-write-set-cache-encryption.html#controlling-encryption","title":"Controlling encryption","text":"<p>Encryption is controlled using the wsrep_provider_options. </p> Variable name Default value Allowed values <code>gcache.encryption</code> off on/off <code>gcache.encryption_cache_page_size</code> 32KB 2-512 <code>gcache.encryption_cache_size</code> 16MB 2 - 512 <code>allocator.disk_pages_encryption</code> off on/off <code>allocator.encryption_cache_page_size</code> 32KB <code>allocator.encryption_cache_size</code> 16MB"},{"location":"gcache-write-set-cache-encryption.html#rotate-the-gcache-master-key","title":"Rotate the GCache Master Key","text":"<p>GCache and Write-Set cache encryption uses either a keyring plugin or a keyring component. This plugin or component must be loaded.</p> <p>Store the keyring file outside the data directory when using a keyring plugin or a keyring component.</p> <pre><code>mysql&gt; ALTER INSTANCE ROTATE GCACHE MASTER KEY;\n</code></pre>"},{"location":"gcache-write-set-cache-encryption.html#variable-descriptions","title":"Variable descriptions","text":""},{"location":"gcache-write-set-cache-encryption.html#gcache-encryption","title":"GCache encryption","text":"<p>The following sections describe the variables related to GCache encryption. All variables are read-only.</p>"},{"location":"gcache-write-set-cache-encryption.html#gcacheencryption","title":"gcache.encryption","text":"<p>Enable or disable GCache cache encryption.</p>"},{"location":"gcache-write-set-cache-encryption.html#gcacheencryption_cache_page_size","title":"gcache.encryption_cache_page_size","text":"<p>The size of the GCache encryption page. The value must be multiple of the CPU page size (typically 4kB). If the value is not, the server reports an error and stops.</p>"},{"location":"gcache-write-set-cache-encryption.html#gcacheencryption_cache_size","title":"gcache.encryption_cache_size","text":"<p>Every encrypted file has an encryption.cache, which consists of pages. Use <code>gcache.encryption_cache_size</code> to configure the encryption.cache size. </p> <p>Configure the page size in the cache with <code>gcache.encryption_cache_page_size</code>. </p> <p>The maximum size for the encryption.cache is 512 pages. This value is a hint. If the value is larger than the maximum, the value is rounded down to 512 x gcache.encryption_cache_page_size.</p> <p>The minimum size for the encryption.cache is 2 pages. If the value is smaller, the value is rounded up.</p>"},{"location":"gcache-write-set-cache-encryption.html#write-set-cache-encryption","title":"Write-Set cache encryption","text":"<p>The following sections describe the variables related to Write-Set cache encryption. All variables are read-only.</p>"},{"location":"gcache-write-set-cache-encryption.html#allocatordisk_pages_encryption","title":"allocator.disk_pages_encryption","text":"<p>Enable or disable the Write-Set cache encryption.</p>"},{"location":"gcache-write-set-cache-encryption.html#allocatorencryption_cache_page_size","title":"allocator.encryption_cache_page_size","text":"<p>The size of the encryption cache for Write-Set pages. The value must be multiple of the CPU page size (typically 4kB).  If the value is not, the server reports an error and stops.</p>"},{"location":"gcache-write-set-cache-encryption.html#allocatorencryption_cache_size","title":"allocator.encryption_cache_size","text":"<p>Every Write-Set encrypted file has an encryption.cache, which consists of pages. Use <code>allocator.encryption_cache_size</code> to configure the size of the <code>encryption.cache</code>. </p> <p>Configure the page size in the cache with <code>allocator.encryption_cache_page_size</code>. </p> <p>The maximum size for the encryption.cache is 512 pages. This value is a hint. If the value is larger than the maximum, the value is rounded down to 512 x gcache.encryption_cache_page_size.</p> <p>The minimum size for the encryption.cache is 2 pages. If the value is smaller, the value is rounded up.</p>"},{"location":"gcache-write-set-cache-encryption.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"get-started-cluster.html","title":"Get started with Percona XtraDB Cluster","text":"<p>This guide describes the procedure for setting up Percona XtraDB Cluster.</p> <p>Examples provided in this guide assume there are three Percona XtraDB Cluster nodes, as a common choice for trying out and testing:</p> Node Host IP Node 1 pxc1 192.168.70.61 Node 2 pxc2 192.168.70.62 Node 3 pxc3 192.168.70.63 <p>Note</p> <p>Avoid creating a cluster with two or any even number of nodes, because this can lead to split brain.</p> <p>The following procedure provides an overview with links to details for every step:</p> <ul> <li>Install Percona XtraDB Cluster on all nodes and set up root access for them.</li> </ul> <p>It is recommended to install from official Percona repositories:</p> <ul> <li> <p>On Red Hat and CentOS, install using YUM.</p> </li> <li> <p>On Debian and Ubuntu, install using APT.</p> </li> <li> <p>Configure all nodes with relevant settings required for write-set replication.</p> </li> </ul> <p>This includes path to the Galera library, location of other nodes, etc.</p> <ul> <li>Bootstrap the first node to initialize the cluster.</li> </ul> <p>This must be the node with your main database,   which will be used as the data source for the cluster.</p> <ul> <li>Add other nodes to the cluster.</li> </ul> <p>Data on new nodes joining the cluster is overwritten   in order to synchronize it with the cluster.</p> <ul> <li>Verify replication.</li> </ul> <p>Although cluster initialization and node provisioning   is performed automatically, it is a good idea to ensure   that changes on one node actually replicate to other nodes.</p> <ul> <li>Install ProxySQL.</li> </ul> <p>To complete the deployment of the cluster, a high-availability proxy is required. We recommend installing ProxySQL on client nodes for efficient workload management across the cluster without any changes to the applications that generate queries.</p>"},{"location":"get-started-cluster.html#percona-monitoring-and-management","title":"Percona Monitoring and Management","text":"<p>Percona Monitoring and Management is the best choice for managing and monitoring Percona XtraDB Cluster performance. It provides visibility for the cluster and enables efficient troubleshooting.</p>"},{"location":"get-started-cluster.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"glossary.html","title":"Glossary","text":""},{"location":"glossary.html#frm","title":".frm","text":"<p>For each table, the server will create a file with the <code>.frm</code> extension containing the table definition (for all storage engines).</p>"},{"location":"glossary.html#acid","title":"ACID","text":"<p>An acronym for <code>Atomicity</code>, <code>Consistency</code>, <code>Isolation</code>, <code>Durability</code>.</p>"},{"location":"glossary.html#asynchronous-replication","title":"Asynchronous replication","text":"<p>Asynchronous replication is a technique where data is first written to the primary node. After the primary acknowledges the write, the data is written to secondary nodes.</p>"},{"location":"glossary.html#atomicity","title":"Atomicity","text":"<p>This property guarantees that all updates of a transaction occur in the database or no updates occur. This guarantee also applies with a server exit. If a transaction fails, the entire operation rolls back.</p>"},{"location":"glossary.html#cluster-replication","title":"Cluster replication","text":"<p>Normal replication path for cluster members.\u00a0Can be encrypted (not by default) and unicast or multicast (unicast by default). Runs on tcp port 4567 by default.</p>"},{"location":"glossary.html#consistency","title":"Consistency","text":"<p>This property guarantees that each transaction that modifies the database takes it from one consistent state to another. Consistency is implied with Isolation.</p>"},{"location":"glossary.html#datadir","title":"datadir","text":"<p>The directory in which the database server stores its databases. Most Linux distribution use <code>/var/lib/mysql</code> by default.</p>"},{"location":"glossary.html#donor-node","title":"donor node","text":"<p>The node elected to provide a state transfer (SST or IST).</p>"},{"location":"glossary.html#durability","title":"Durability","text":"<p>Once a transaction is committed, it will remain so and is resistant to a server exit.</p>"},{"location":"glossary.html#foreign-key","title":"Foreign Key","text":"<p>A referential constraint between two tables. Example: A purchase order in the purchase_orders table must have been made by a customer that exists in the customers table.</p>"},{"location":"glossary.html#general-availability-ga","title":"General availability (GA)","text":"<p>A finalized version of the product which is made available to the general public. It is the final stage in the software release cycle.</p>"},{"location":"glossary.html#gtid","title":"GTID","text":"<p>Global Transaction ID, in Percona XtraDB Cluster it consists of <code>UUID</code> and an ordinal sequence number which denotes the position of the change in the sequence.</p>"},{"location":"glossary.html#haproxy","title":"HAProxy","text":"<p><code>HAProxy</code> is a free, very fast and reliable solution offering high availability, load balancing, and proxying for TCP and HTTP-based applications. It is particularly suited for web sites crawling under very high loads while needing persistence or Layer7 processing. Supporting tens of thousands of connections is clearly realistic with todays hardware. Its mode of operation makes its integration into existing architectures very easy and riskless, while still offering the possibility not to expose fragile web servers to the net.</p>"},{"location":"glossary.html#ibdata","title":"ibdata","text":"<p>Default prefix for tablespace files, e.g., <code>ibdata1</code> is a 10MB auto-extendable file that MySQL creates for the shared tablespace by default.</p>"},{"location":"glossary.html#isolation","title":"Isolation","text":"<p>The Isolation guarantee means that no transaction can interfere with another. When transactions access data in a session, they also lock that data to prevent other operations on that data by other transaction.</p>"},{"location":"glossary.html#ist","title":"IST","text":"<p>Incremental State Transfer. Functionality which instead of whole state snapshot can catch up with the group by receiving the missing writesets, but only if the writeset is still in the donor\u2019s writeset cache.</p>"},{"location":"glossary.html#innodb","title":"InnoDB","text":"<p><code>Storage Engine</code> for MySQL and derivatives (<code>Percona Server</code>, <code>MariaDB</code>) originally written by Innobase Oy, since acquired by Oracle. It provides <code>ACID</code> compliant storage engine with <code>foreign key</code> support. InnoDB is the default storage engine on all platforms.</p>"},{"location":"glossary.html#jenkins","title":"Jenkins","text":"<p>Jenkins is a continuous integration system that we use to help ensure the continued quality of the software we produce. It helps us achieve the aims of: * no failed tests in trunk on any platform  * aid developers in ensuring merge requests build and test on all platforms * no known performance regressions (without a damn good explanation)</p>"},{"location":"glossary.html#joiner-node","title":"joiner node","text":"<p>The node joining the cluster, usually a state transfer target.</p>"},{"location":"glossary.html#lsn","title":"LSN","text":"<p>Log Serial Number. A term used in relation to the <code>InnoDB</code> or <code>XtraDB</code> storage engines. There are System-level LSNs and Page-level LSNs. The System LSN represents the most recent LSN value assigned to page changes. Each InnoDB page contains a Page LSN which is the max LSN for that page for changes that reside on the disk. This LSN is updated when the page is flushed to disk.</p>"},{"location":"glossary.html#mariadb","title":"MariaDB","text":"<p>A fork of <code>MySQL</code> that is maintained primarily by Monty Program AB. It aims to add features, fix bugs while maintaining 100% backwards compatibility with MySQL.</p>"},{"location":"glossary.html#mycnf","title":"my.cnf","text":"<p>This file refers to the database server\u2019s main configuration file. Most Linux distributions place it as <code>/etc/mysql/my.cnf</code> or <code>/etc/my.cnf</code>, but the location and name depends on the particular installation. Note that this is not the only way of configuring the server, some systems does not have one even and rely on the command options to start the server and its defaults values.</p>"},{"location":"glossary.html#myisam","title":"MyISAM","text":"<p>A <code>MySQL</code> <code>Storage Engine</code> that was the default until MySQL 5.5. It doesn\u2019t fully support transactions but in some scenarios may be faster than <code>InnoDB</code>. Each table is stored on disk in 3 files: <code>.frm</code>,i <code>.MYD</code>, <code>.MYI</code>.</p>"},{"location":"glossary.html#mysql","title":"MySQL","text":"<p>An open source database that has spawned several distributions and forks. MySQL AB was the primary maintainer and distributor until bought by Sun Microsystems, which was then acquired by Oracle. As Oracle owns the MySQL trademark, the term MySQL is often used for the Oracle distribution of MySQL as distinct from the drop-in replacements such as <code>MariaDB</code> and <code>Percona Server</code>.</p>"},{"location":"glossary.html#mysqlpxcinternalsession","title":"mysql.pxc.internal.session","text":"<p>This user is used by the SST process to run the SQL commands needed for <code>SST</code>, such as creating the <code>mysql.pxc.sst.user</code> and assigning it the role <code>mysql.pxc.sst.role</code>.</p>"},{"location":"glossary.html#mysqlpxcsstrole","title":"mysql.pxc.sst.role","text":"<p>This role has all the privileges needed to run xtrabackup to create a backup on the donor node.</p>"},{"location":"glossary.html#mysqlpxcsstuser","title":"mysql.pxc.sst.user","text":"<p>This user (set up on the donor node) is assigned the <code>mysql.pxc.sst.role</code> and runs the XtraBackup to make backups. The password for this is randomly generated for each SST. The password is generated automatically for each <code>SST</code>.</p>"},{"location":"glossary.html#node","title":"node","text":"<p>A cluster node \u2013 a single mysql instance that is in the cluster.</p>"},{"location":"glossary.html#numa","title":"NUMA","text":"<p>Non-Uniform Memory Access (<code>NUMA</code>) is a computer memory design used in multiprocessing, where the memory access time depends on the memory location relative to a processor. Under NUMA, a processor can access its own local memory faster than non-local memory, that is, memory local to another processor or memory shared between processors. The whole system may still operate as one unit, and all memory is basically accessible from everywhere, but at a potentially higher latency and lower performance.</p>"},{"location":"glossary.html#percona-server-for-mysql","title":"Percona Server for MySQL","text":"<p>Percona\u2019s branch of <code>MySQL</code> with performance and management improvements.</p>"},{"location":"glossary.html#percona-xtradb-cluster","title":"Percona XtraDB Cluster","text":"<p>Percona XtraDB Cluster (PXC) is a high availability solution for MySQL.</p>"},{"location":"glossary.html#primary-cluster","title":"primary cluster","text":"<p>A cluster with quorum.\u00a0A non-primary cluster will not allow any operations and will give <code>Unknown command</code> errors on any clients attempting to read or write from the database.</p>"},{"location":"glossary.html#quorum","title":"quorum","text":"<p>A majority (&gt; 50%) of nodes.\u00a0In the event of a network partition, only the cluster partition that retains a quorum (if any) will remain Primary by default.</p>"},{"location":"glossary.html#split-brain","title":"split brain","text":"<p>Split brain occurs when two parts of a computer cluster are disconnected, each part believing that the other is no longer running. This problem can lead to data inconsistency.</p>"},{"location":"glossary.html#sst","title":"SST","text":"<p>State Snapshot Transfer is the full copy of data from one node to another.  It\u2019s used when a new node joins the cluster, it has to transfer data from an existing node. Percona XtraDB Cluster: uses the <code>xtrabackup</code> program for this purpose. <code>xtrabackup</code> does not require <code>READ LOCK</code> for the entire syncing process - only for syncing the MySQL system tables and writing the information about the binlog, galera and replica information (same as the regular Percona XtraBackup backup).</p> <p>The SST method is configured with the <code>wsrep_sst_method</code> variable.</p> <p>In PXC 8.0, the mysql-upgrade command is now run automatically as part of <code>SST</code>. You do not have to run it manually when upgrading your system from an older version.</p>"},{"location":"glossary.html#storage-engine","title":"Storage Engine","text":"<p>A <code>Storage Engine</code> is a piece of software that implements the details of data storage and retrieval for a database system. This term is primarily used within the <code>MySQL</code> ecosystem due to it being the first widely used relational database to have an abstraction layer around storage. It is analogous to a Virtual File System layer in an Operating System. A VFS layer allows an operating system to read and write multiple file systems (for example, FAT, NTFS, XFS, ext3) and a Storage Engine layer allows a database server to access tables stored in different engines (e.g. <code>MyISAM</code>, InnoDB).</p>"},{"location":"glossary.html#tech-preview","title":"Tech preview","text":"<p>A tech preview item can be a feature, a variable, or a value within a variable. The term designates that the item is not yet ready for production use and is not included in support by SLA. A tech preview item is included in a release so that users can provide feedback. The item is either updated and released as general availability(GA) or removed if not useful. The item\u2019s functionality can change from tech preview to GA.</p>"},{"location":"glossary.html#uuid","title":"UUID","text":"<p>Universally Unique IDentifier which uniquely identifies the state and the sequence of changes node undergoes. 128-bit UUID is a classic DCE UUID Version 1 (based on current time and MAC address). Although in theory this UUID could be generated based on the real MAC-address, in the Galera it is always (without exception) based on the generated pseudo-random addresses (\u201clocally administered\u201d bit in the node address (in the UUID structure) is  always equal to unity).</p>"},{"location":"glossary.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"haproxy-config.html","title":"HAProxy configuration file","text":""},{"location":"haproxy-config.html#example-of-haproxy-v1-configuration-file","title":"Example of HAProxy v1 configuration file","text":"HAProxy v1 configuration file <pre><code>global\n        log 127.0.0.1   local0\n        log 127.0.0.1   local1 notice\n        maxconn 4096\n        uid 99\n        gid 99\n        daemon\n        #debug\n        #quiet\n\ndefaults\n        log     global\n        mode    http\n        option  tcplog\n        option  dontlognull\n        retries 3\n        redispatch\n        maxconn 2000\n        contimeout      5000\n        clitimeout      50000\n        srvtimeout      50000\n        timeout connect 160000\n        timeout client 240000\n        timeout server 240000\n\nlisten mysql-cluster 0.0.0.0:3306\n    mode tcp\n    balance roundrobin\n    option mysql-check user root\n\n    server db01 10.4.29.100:3306 check\n    server db02 10.4.29.99:3306 check\n    server db03 10.4.29.98:3306 check\n</code></pre> <p>Options set in the configuration file</p>"},{"location":"haproxy-config.html#differences-between-version-1-configuration-file-and-version-2-configuration-file","title":"Differences between version 1 configuration file and version 2 configuration file","text":""},{"location":"haproxy-config.html#version-declaration","title":"Version Declaration:","text":"<p>v1: The configuration file typically omits an explicit version declaration.</p> <p>v2: You must explicitly declare the version using the version keyword followed by the specific version number (e.g., version = 2.0).</p>"},{"location":"haproxy-config.html#global-parameters","title":"Global Parameters:","text":"<p>v1 and v2: Both versions utilize a global section to define global parameters, but certain parameters might have different names or functionalities across versions. Refer to the official documentation for specific changes.</p>"},{"location":"haproxy-config.html#configuration-blocks","title":"Configuration Blocks:","text":"<p>v1 and v2: Both versions use a similar indentation-based structure to define configuration blocks like frontend and backend. However, v2 introduces new blocks and keywords not present in v1 (e.g., process, http-errors).</p>"},{"location":"haproxy-config.html#directives","title":"Directives:","text":"<p>v1 and v2: While many directives remain consistent, some might have renamed keywords, altered syntax, or entirely new functionalities in v2. Consult the official documentation for a comprehensive comparison of directives and their usage between versions.</p>"},{"location":"haproxy-config.html#comments","title":"Comments:","text":"<p>v1 and v2: Both versions support comments using the # symbol. However, v2 introduces multi-line comments using / \u2026 / syntax, which v1 does not support.</p>"},{"location":"haproxy-config.html#version-2-configuration-file","title":"Version 2 configuration file","text":"<p>This simplified example is for load balancing. HAProxy offers numerous features for advanced configurations and fine-tuning.</p> <p>This example demonstrates a basic HAProxy v2 configuration file for load-balancing HTTP traffic across two backend servers.</p>"},{"location":"haproxy-config.html#global-section","title":"Global Section","text":"<p>The following settings are defined in the Global section:</p> <ul> <li> <p>The maximum number of concurrent connections allowed by HAProxy.</p> </li> <li> <p>The user and group under which HAProxy should run.</p> </li> <li> <p>A UNIX socket for accessing HAProxy statistics.</p> </li> </ul> <p>In the <code>defaults</code> block, we set the operating mode to TCP and define <code>option tcpka</code></p> <pre><code>global\n    maxconn 4000           # Maximum concurrent connections (adjust as needed)\n    user haproxy          # User to run HAProxy process\n    group haproxy          # Group to run HAProxy process\n    stats socket /var/run/haproxy.sock mode 666 level admin\n\ndefaults\n    mode tcp             # Set operating mode to TCP\n    #option tcpka\n</code></pre>"},{"location":"haproxy-config.html#frontend-section","title":"Frontend Section","text":"<p>The following settings are defined in this section:</p> <ul> <li> <p>Create a frontend named \u201cwebserver\u201d that listens on port 80 for incoming HTTP requests.</p> </li> <li> <p>Enable the <code>httpclose</code> option to terminate idle client connections efficiently.</p> </li> <li> <p>Specify the default backend for this frontend.</p> </li> </ul> <pre><code>frontend gr-prod-rw\n    bind 0.0.0.0:3307     \n    mode tcp\n    option contstats\n    option dontlognull\n    option clitcpka\n    default_backend gr-prod-rw\n</code></pre> <p>You should add the following options:</p> option Description <code>contstats</code> Provides continuous updates to the statistics of your connections. This option ensures that your traffic counters are updated in real-time, rather than only after a connection closes, giving you a more accurate and immediate view of your traffic patterns. <code>dontlognull</code> Does not log requests that don\u2019t transfer any data, like health check pings. <code>clitcpka</code> Configures TCP keepalive settings for client connections. This option allows the operating system to detect and terminate inactive connections, even if HAProxy isn\u2019t actively checking them."},{"location":"haproxy-config.html#backend-section","title":"Backend Section","text":"<p>In this section, you specify the backend servers that will handle requests forwarded by the frontend. List each server with their respective IP addresses, ports, and weights.</p> <p>You set up a health check with <code>check inter 10000</code>. This option means that HAProxy performs a health check on each server every 10,000 milliseconds or 10 seconds. If a server fails a health check, it is temporarily removed from the pool until it passes subsequent checks, ensuring smooth and reliable client service. This proactive monitoring is crucial for maintaining an efficient and uninterrupted backend service.</p> <p>Set the number of retries to put the service down and up. For example, you set the <code>rise</code> parameter to <code>1</code>, which means the server only needs to pass one health check before the server is considered healthy again. The <code>fall</code> parameter is set to <code>2</code>, requiring two consecutive failed health checks before the server is marked as unhealthy. </p> <p>The <code>weight 50 backup</code> setting is crucial for load balancing; this setting determines that this server only receives traffic if the primary servers are down. The weight of 50 indicates the relative amount of traffic the server will handle compared to other servers in the backup role. This method ensures the server can handle a significant load even in backup mode, but not as much as a primary server.</p> <p>The following example lists these options. Replace the server details (IP addresses, ports) with your backend server information. Adjust weights and other options according to your specific needs and server capabilities.</p> <pre><code>backend servers\n    server server1 10.0.68.39:3307 check inter 10000 rise 1 fall 2 weight 50\n    server server1 10.0.68.74:3307 check inter 10000 rise 1 fall 2 weight 50 backup\n    server server1 10.0.68.20:3307 check inter 10000 rise 1 fall 2 weight 1 backup\n</code></pre> <p><code>More information about how to configure HAProxy</code></p>"},{"location":"haproxy-config.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"haproxy.html","title":"Load balancing with HAProxy","text":"<p>The free and open source software, HAProxy, provides a high-availability load balancer and reverse proxy for TCP and HTTP-based applications. HAProxy can distribute requests across multiple servers, ensuring optimal performance and security.</p> <p>Here are the benefits of using HAProxy:</p> <ul> <li> <p>HAProxy supports layer 4 (TCP) and layer 7 (HTTP) load balancing, which means it can handle different network traffic and protocols. HAProxy requires patched backends to tunnel IP traffic in layer 4 load-balancing tunnel mode. This mode also disables some layer 7 advanced features.</p> </li> <li> <p>HAProxy has rich features, such as URL rewriting, SSL/TLS termination, gzip compression, caching, observability, health checks, retries, circuit breakers, WebSocket, HTTP/2 and HTTP/3 support, and more.</p> </li> <li> <p>HAProxy has a reputation for being fast and efficient in terms of processor and memory usage. The software is written in C and has an event-driven and multithreaded architecture.</p> </li> <li> <p>HAProxy has a user-friendly status page that shows detailed information about the load balancer and the backends. The software also integrates well with third-party monitoring tools and services.</p> </li> <li> <p>HAProxy supports session retention and cookie guidance, which can help with sticky sessions and affinity.</p> </li> </ul>"},{"location":"haproxy.html#create-a-user","title":"Create a user","text":"<p>Access the server as a user with administrative privileges, either <code>root</code> or use sudo.</p> <p>Create a Dedicated HAProxy user account for HAProxy to interact with your MySQL instance. This account enhances security.</p> <p>Make the following changes to the example <code>CREATE USER</code> command to replace the placeholders:</p> <ul> <li> <p>Replace haproxy_user with your preferred username.</p> </li> <li> <p>Substitute <code>haproxy_server_ip</code> with the actual IP address of your HAProxy server.</p> </li> <li> <p>Choose a robust password for the \u2018strong_password\u2019.</p> </li> </ul> <p>Execute the following command:</p> <pre><code>mysql&gt; CREATE USER 'haproxy_user'@'haproxy_server_ip' IDENTIFIED BY 'strong_password';\n</code></pre> <p>Grant the minimal set of privileges necessary for HAProxy to perform its health checks and monitoring.</p> <p>Execute the following:</p> <pre><code>GRANT SELECT ON `mysql`.* TO 'haproxy_user'@'haproxy_server_ip';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"haproxy.html#important-considerations","title":"Important Considerations","text":"<p>If your MySQL servers are part of a replication cluster, create the user and grant privileges on each node to ensure consistency.</p> <p>For enhanced security, consider restricting the <code>haproxy_user</code> to specific databases or tables to monitor rather than granting permissions to the entire <code>mysql</code> database schema.</p>"},{"location":"haproxy.html#install","title":"Install","text":"<p>Add the HAProxy Enterprise repository to your system by following the instructions for your operating system.</p> <p>Install HAProxy on the node you intend to use for load balancing. You can install it using the package manager.</p> On a Debian-derived distributionOn a Red Hat-derived distribution <pre><code>$ sudo apt update\n$ sudo apt install haproxy\n</code></pre> <pre><code>$ sudo yum update\n$ sudo yum install haproxy\n</code></pre> <p>To start HAProxy, use the <code>haproxy</code> command. You may pass any number of configuration parameters on the command line. To use a configuration file, add the <code>-f</code> option.</p> <pre><code>$ # Passing one configuration file\n$ sudo haproxy -f haproxy-1.cfg\n\n$ # Passing multiple configuration files\n$ sudo haproxy -f haproxy-1.cfg haproxy-2.cfg\n\n$ # Passing a directory\n$ sudo haproxy -f conf-dir\n</code></pre> <p>You can pass the name of an existing configuration file or a directory. HAProxy includes all files with the .cfg extension in the supplied directory. Another way to pass multiple files is to use <code>-f</code> multiple times.</p> <p>For more information, see <code>HAProxy Management Guide</code></p> <p>For information, see HAProxy configuration file</p> <p>Important</p> <p>In Percona XtraDB Cluster 8.0, the default authentication plugin is <code>caching_sha2_password</code>. HAProxy does not support this authentication plugin. Create a mysql user using the <code>mysql_native_password</code> authentication plugin.</p> <pre><code>mysql&gt; CREATE USER 'haproxy_user'@'%' IDENTIFIED WITH mysql_native_password by '$3Kr$t';\n</code></pre> <p>See also</p> <p>MySQL Documentation: CREATE USER statement</p>"},{"location":"haproxy.html#uninstall","title":"Uninstall","text":"<p>To uninstall haproxy version 2 from a Linux system, follow the latest instructions.</p>"},{"location":"haproxy.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"high-availability.html","title":"High availability","text":"<p>In a basic setup with three nodes, if you take any of the nodes down, Percona  XtraDB Cluster continues to function. At any point, you can shut down any node to perform maintenance or configuration changes.</p> <p>Even in unplanned situations (like a node crashing or if it becomes unavailable  over the network), you can run queries on working nodes. If a node is down and  the data has changed, there are two methods that the node may use when it  joins the cluster again:</p> Method What happens Description SST The joiner node receives a full copy of the database state from the donor node. You initiate a Solid State Transfer (SST) when adding a new node to a Galera cluster or when a node has fallen too far out of sync IST Only incremental changes are copied from one node to another. This operation can be used when a node is down for a short period."},{"location":"high-availability.html#sst","title":"SST","text":"<p>The primary benefit of SST is that it ensures data consistency across the  cluster by providing a complete snapshot of the database at a point in time. However, SST can be resource-intensive and time-consuming if the operation transfers significant data. The donor node is locked during this transfer, impacting cluster performance.</p> <p>You initiate a state snapshot transfer (SST) when a node joins a cluster  without the complete data set. This process involves transferring a full data  copy from one node to another, ensuring that the joining node has an exact  replica of the cluster\u2019s current state. Technically, SST is performed by  halting the donor node\u2019s database operations momentarily to create a consistent  snapshot of its data. The snapshot is then transferred over the network to the  joining node, which applies it to its database system.</p> <p>Even without locking your cluster in a read-only state, SST may be intrusive  and disrupt the regular operation of your services. IST avoids disruption. A node fetches only the changes that happened while that node was unavailable. IST uses a caching mechanism on nodes.</p>"},{"location":"high-availability.html#ist","title":"IST","text":"<p>Incremental State Transfer (IST) is a method that allows a node to request only  the missing transactions from another node in the cluster. This process is  beneficial because it reduces the amount of data that must be transferred,  leading to faster recovery times for nodes that are out of sync. Additionally,  IST minimizes the network bandwidth required for state transfer, which is  particularly advantageous in environments with limited resources.</p> <p>However, there are drawbacks to consider. Reliance on another node\u2019s state means that an SST operation is necessary if no node in the cluster has the required information. </p> <p>When a node joins the cluster with a state slightly behind the current cluster state, IST does not require the joining node to copy the entire database state. Technically, IST transfers only the missing write-sets that the joining node needs to catch up with the cluster. The donor node, the node with the most recent state, sends the write-sets to the joining node through a dedicated channel. The joining node then applies these write-sets to its database state incrementally until it synchronizes with the cluster\u2019s current state. The donor node can experience a performance impact during an IST operation, typically less severe than during SST.</p>"},{"location":"high-availability.html#monitor-the-node-state","title":"Monitor the node state","text":"<p>The <code>wsrep_state_comment</code> variable returns the current state of a Galera node in the cluster, providing information about the node\u2019s role and status. The value can vary depending on the specific state of the Galera node, such as the following: </p> <ul> <li> <p>\u201cSynced\u201d </p> </li> <li> <p>\u201cDonor/Desynced\u201d </p> </li> <li> <p>\u201cDonor/Joining\u201d</p> </li> <li> <p>\u201cJoined\u201d</p> </li> </ul> <p>You can monitor the current state of a node using the following command:</p> <pre><code>mysql&gt; SHOW STATUS LIKE 'wsrep_local_state_comment';\n</code></pre> <p>If the node is in <code>Synced (6)</code> state, that node is part of the cluster and can handle the traffic.</p>"},{"location":"high-availability.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"install-index.html","title":"Install Percona XtraDB Cluster","text":"<p>Install Percona XtraDB Cluster on all hosts that you are planning to use as cluster nodes and ensure that you have root access to the MySQL server on each one.</p> <p>We gather Telemetry data in the Percona packages and Docker images.</p>"},{"location":"install-index.html#ports-required","title":"Ports required","text":"<p>Open specific ports for the Percona XtraDB Cluster to function correctly. </p> <ul> <li> <p>Port 3306 is the default port for MySQL. This port  facilitates communication and data transfer between nodes and applications.</p> </li> <li> <p>Port 4567 is used for Galera replication traffic, which is vital for synchronizing data across the cluster nodes. </p> </li> <li> <p>Port 4568 is used for Incremental State Transfer (IST), allowing nodes to  transfer only the missing blocks of data. </p> </li> <li> <p>Port 4444 is for State Snapshot Transfer (SST), which involves a complete data snapshot  transfer from one node to another. </p> </li> <li> <p>Port 9200 if you use Percona Monitoring and Management (PMM)  for cluster monitoring.</p> </li> </ul>"},{"location":"install-index.html#recommendations","title":"Recommendations","text":"<p>We recommend installing Percona XtraDB Cluster from official Percona software repositories using the corresponding package manager for your system:</p> <ul> <li> <p>Debian or Ubuntu</p> </li> <li> <p>Red Hat or CentOS</p> </li> </ul> <p>Important</p> <p>After installing Percona XtraDB Cluster, the <code>mysql</code> service is stopped but enabled so that it may start the next time you restart the system. The service starts if the the <code>grastate.dat</code> file exists and the value of <code>seqno</code> is not -1.</p> <p>See also</p> <p>More information about Galera state information in Index of files created by PXC grastat.dat</p>"},{"location":"install-index.html#installation-alternatives","title":"Installation alternatives","text":"<p>Percona also provides a generic tarball with all required files and binaries for manual installation:</p> <ul> <li>Installing Percona XtraDB Cluster from Binary Tarball</li> </ul> <p>If you want to build Percona XtraDB Cluster from source, see Compiling and Installing from Source Code.</p> <p>If you want to run Percona XtraDB Cluster using Docker, see Running Percona XtraDB Cluster in a Docker Container.</p>"},{"location":"install-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"intro.html","title":"About Percona XtraDB Cluster","text":"<p>Percona XtraDB Cluster is a fully open-source high-availability solution for MySQL.  It integrates Percona Server for MySQL and Percona XtraBackup with the Galera library to enable synchronous multi-source replication.</p> <p>A cluster consists of nodes, where each node contains the same set of data synchronized accross nodes.  The recommended configuration is to have at least 3 nodes, but you can have 2 nodes as well.  Each node is a regular MySQL Server instance (for example, Percona Server).  You can convert an existing MySQL Server instance to a node and run the cluster using this node as a base.  You can also detach any node from the cluster and use it as a regular MySQL Server instance.</p> <p></p>"},{"location":"intro.html#benefits","title":"Benefits","text":"<ul> <li> <p>When you execute a query, it is executed locally on the node. All data is available locally, no need for remote access.</p> </li> <li> <p>No central management. You can loose any node at any point of time, and the cluster will continue to function without any data loss.</p> </li> <li> <p>Good solution for scaling a read workload. You can put read queries to any of the nodes.</p> </li> </ul>"},{"location":"intro.html#drawbacks","title":"Drawbacks","text":"<ul> <li> <p>Overhead of provisioning new node. When you add a new node, it has to copy the full data set from one of existing nodes. If it is 100 GB, it copies 100 GB.</p> </li> <li> <p>This can\u2019t be used as an effective write scaling solution.  There might be some improvements in write throughput when you run write traffic to 2 nodes versus all traffic to 1 node, but you can\u2019t expect a lot.  All writes still have to go on all nodes.</p> </li> <li> <p>You have several duplicates of data: for 3 nodes you have 3 duplicates.</p> </li> </ul>"},{"location":"intro.html#components","title":"Components","text":"<p>Percona XtraDB Cluster https://www.percona.com/software/mysql-database/percona-xtradb-cluster is based on Percona Server for MySQL running with the XtraDB storage engine. It uses the Galera library, which is an implementation of the write set replication (wsrep) API developed by Codership Oy. The default and recommended data transfer method is via Percona XtraBackup .</p>"},{"location":"intro.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"limitation.html","title":"Percona XtraDB Cluster limitations","text":"<p>The following limitations apply to Percona XtraDB Cluster:</p> <ul> <li> <p>Replication works only with InnoDB storage engine.</p> <p>Any writes to tables of other types are not replicated.</p> </li> <li> <p>Unsupported queries:</p> <p><code>LOCK TABLES</code> and <code>UNLOCK TABLES</code> is not supported in multi-source setups</p> <p>Lock functions, such as <code>GET_LOCK()</code>, <code>RELEASE_LOCK()</code>, and so on</p> </li> <li> <p>Query log cannot be directed to table.</p> <p>If you enable query logging, you must forward the log to a file:</p> <pre><code>log_output = FILE\n</code></pre> <p>Use <code>general_log</code> and <code>general_log_file</code> to choose query logging and the log file name.</p> </li> <li> <p>Maximum allowed transaction size is defined by the <code>wsrep_max_ws_rows</code> and <code>wsrep_max_ws_size</code> variables. </p> <p><code>LOAD DATA INFILE</code> processing will commit every 10 000 rows.  So large transactions due to <code>LOAD DATA</code> will be split to series of small transactions.</p> </li> <li> <p>Transaction issuing <code>COMMIT</code> may still be aborted at that stage.</p> <p>Due to cluster-level optimistic concurrency control,  there can be two transactions writing to the same rows and committing in separate Percona XtraDB Cluster nodes, and only one of them can successfully commit. The failing one will be aborted. For cluster-level aborts, Percona XtraDB Cluster gives back deadlock error code:</p> Error message <pre><code>(Error: 1213 SQLSTATE: 40001  (ER_LOCK_DEADLOCK)).\n</code></pre> </li> <li> <p>XA transactions are not supported</p> <p>Due to possible rollback on commit.</p> </li> <li> <p>Write throughput of the whole cluster is limited by the weakest node.</p> <p>If one node becomes slow, the whole cluster slows down.  If you have requirements for stable high performance, then it should be supported by corresponding hardware.</p> </li> <li> <p>Minimal recommended size of cluster is 3 nodes.</p> <p>The 3<sup>rd</sup> node can be an arbitrator.</p> </li> <li> <p><code>enforce_storage_engine=InnoDB</code> is not compatible with <code>wsrep_replicate_myisam=OFF</code></p> <p><code>wsrep_replicate_myisam</code> is set to <code>OFF</code> by default.</p> </li> <li> <p>Avoid <code>ALTER TABLE ... IMPORT/EXPORT</code> workloads when running Percona XtraDB Cluster in cluster mode.</p> <p>It can lead to node inconsistency if not executed in sync on all nodes.</p> </li> <li> <p>All tables must have a primary key.</p> <p>This ensures that the same rows appear in the same order on different nodes. The <code>DELETE</code> statement is not supported on tables without a primary key.</p> <p>See also</p> <p>Galera Documentation: Tables without Primary Keys</p> </li> <li> <p>Avoid reusing the names of persistent tables for temporary tables</p> <p>Although MySQL does allow having temporary tables named the same as persistent tables, this approach is not recommended.</p> <p>Galera Cluster blocks the replication of those persistent tables the names of which match the names of temporary tables.</p> <p>With wsrep_debug set to 1, the error log may contain the following message:</p> Error message <pre><code>... [Note] WSREP: TO BEGIN: -1, 0 : create table t (i int) engine=innodb\n... [Note] WSREP: TO isolation skipped for: 1, sql: create table t (i int) engine=innodb.Only temporary tables affected.\n</code></pre> <p>See also</p> <p>MySQL Documentation: Problems with temporary tables</p> </li> </ul> <p>As of version 8.0.21, an INPLACE ALTER TABLE query takes an internal shared lock on the table during the execution of the query. The <code>LOCK=NONE</code> clause is no longer allowed for all of the INPLACE ALTER TABLE queries due to this change.</p> <p>This change addresses a deadlock, which could cause a cluster node to hang in the following scenario:</p> <ul> <li> <p>An INPLACE <code>ALTER TABLE</code> query in one session or being applied as Total Order Isolation (TOI)</p> </li> <li> <p>A DML on the same table from another session</p> </li> </ul> <p>Do not use one or more dot characters (.) when defining the values for the following variables:</p> <ul> <li> <p>log_bin</p> </li> <li> <p>log_bin_index</p> </li> </ul> <p>MySQL and XtraBackup handles the value in different ways and this difference causes unpredictable behavior.</p>"},{"location":"limitation.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"load-balance-proxysql.html","title":"Load balance with ProxySQL","text":"<p>ProxySQL is a high-performance SQL proxy. ProxySQL runs as a daemon watched by a monitoring process. The process monitors the daemon and restarts it in case of a crash to minimize downtime.</p> <p>The daemon accepts incoming traffic from MySQL clients and forwards it to backend MySQL servers.</p> <p>The proxy is designed to run continuously without needing to be restarted.  Most configuration can be done at runtime using queries similar to SQL statements in the ProxySQL admin interface.  These include runtime parameters, server grouping, and traffic-related settings.</p> <p>See also</p> <p>ProxySQL Documentation</p> <p>ProxySQL v2 natively supports Percona XtraDB Cluster. With this version, <code>proxysql-admin</code> tool does not require any custom scripts to keep track of Percona XtraDB Cluster status.</p> <p>Important</p> <p>In version 8.0, Percona XtraDB Cluster does not support ProxySQL v1.  </p>"},{"location":"load-balance-proxysql.html#manual-configuration","title":"Manual configuration","text":"<p>This section describes how to configure ProxySQL with three Percona XtraDB Cluster nodes.</p> Node Host Name IP address Node 1 pxc1 192.168.70.71 Node 2 pxc2 192.168.70.72 Node 3 pxc3 192.168.70.73 Node 4 proxysql 192.168.70.74 <p>ProxySQL can be configured either using the <code>/etc/proxysql.cnf</code> file or through the admin interface. The admin interface is recommended because this interface can dynamically change the configuration without restarting the proxy.</p> <p>To connect to the ProxySQL admin interface, you need a <code>mysql</code> client. You can either connect to the admin interface from Percona XtraDB Cluster nodes that already have the <code>mysql</code> client installed (Node 1, Node 2, Node 3) or install the client on Node 4 and connect locally. For this tutorial, install Percona XtraDB Cluster on Node 4:</p> <p>Changes in the installation procedure</p> <p>In Percona XtraDB Cluster 8.0, ProxySQL is not installed automatically as a dependency of the <code>percona-xtradb-cluster-client-8.0</code> package. You should install the <code>proxysql</code> package separately.</p> <p>Note</p> <p>ProxySQL has multiple versions in the version 2 series.</p> <ul> <li>On Debian or Ubuntu for ProxySQL 2.x:</li> </ul> <pre><code>root@proxysql:~# apt install percona-xtradb-cluster-client\nroot@proxysql:~# apt install proxysql2\n</code></pre> <ul> <li>On Red Hat Enterprise Linux or CentOS for ProxySQL 2.x:</li> </ul> <pre><code>$ sudo yum install Percona-XtraDB-Cluster-client-80\n$ sudo yum install proxysql2\n</code></pre> <p>To connect to the admin interface, use the credentials, host name and port specified in the global variables.</p> <p>Warning</p> <p>Do not use default credentials in production!</p> <p>The following example shows how to connect to the ProxySQL admin interface with default credentials:</p> <pre><code>root@proxysql:~# mysql -u admin -padmin -h 127.0.0.1 -P 6032\n</code></pre> Expected output <pre><code>Welcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2\nServer version: 5.5.30 (ProxySQL Admin Module)\n\nCopyright (c) 2009-2020 Percona LLC and/or its affiliates\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql@proxysql&gt;\n</code></pre> <p>To see the ProxySQL databases and tables use the following commands:</p> <pre><code>mysql@proxysql&gt; SHOW DATABASES;\n</code></pre> <p>The following output shows the ProxySQL databases:</p> Expected output <pre><code>+-----+---------+-------------------------------+\n| seq | name    | file                          |\n+-----+---------+-------------------------------+\n| 0   | main    |                               |\n| 2   | disk    | /var/lib/proxysql/proxysql.db |\n| 3   | stats   |                               |\n| 4   | monitor |                               |\n+-----+---------+-------------------------------+\n4 rows in set (0.00 sec)\n</code></pre> <pre><code>mysql@proxysql&gt; SHOW TABLES;\n</code></pre> <p>The following output shows the ProxySQL tables:</p> Expected output <pre><code>+--------------------------------------+\n| tables                               |\n+--------------------------------------+\n| global_variables                     |\n| mysql_collations                     |\n| mysql_query_rules                    |\n| mysql_replication_hostgroups         |\n| mysql_servers                        |\n| mysql_users                          |\n| runtime_global_variables             |\n| runtime_mysql_query_rules            |\n| runtime_mysql_replication_hostgroups |\n| runtime_mysql_servers                |\n| runtime_scheduler                    |\n| scheduler                            |\n+--------------------------------------+\n12 rows in set (0.00 sec)\n</code></pre> <p>For more information about admin databases and tables, see Admin Tables</p> <p>Note</p> <p>The ProxySQL configuration can reside in the following areas:</p> <ul> <li> <p>MEMORY (your current working place)</p> </li> <li> <p>RUNTIME (the production settings)</p> </li> <li> <p>DISK (durable configuration, saved inside an SQLITE database)</p> </li> </ul> <p>When you change a parameter, you change it in MEMORY area. This ability is by design and lets you test the changes before pushing the change to production (RUNTIME), or save the change to disk.</p>"},{"location":"load-balance-proxysql.html#add-cluster-nodes-to-proxysql","title":"Add cluster nodes to ProxySQL","text":"<p>To configure the backend Percona XtraDB Cluster nodes in ProxySQL, insert corresponding records into the <code>mysql_servers</code> table.</p> <p>Note</p> <p>ProxySQL uses the concept of hostgroups to group cluster nodes. This enables you to balance the load in a cluster by routing different types of traffic to different groups. There are many ways you can configure hostgroups (for example, source and replicas, read and write load, etc.) and a every node can be a member of multiple hostgroups.</p> <p>This example adds three Percona XtraDB Cluster nodes to the default hostgroup (<code>0</code>), which receives both write and read traffic:</p> <pre><code>mysql@proxysql&gt; INSERT INTO mysql_servers(hostgroup_id, hostname, port) VALUES (0,'192.168.70.71',3306);\nmysql@proxysql&gt; INSERT INTO mysql_servers(hostgroup_id, hostname, port) VALUES (0,'192.168.70.72',3306);\nmysql@proxysql&gt; INSERT INTO mysql_servers(hostgroup_id, hostname, port) VALUES (0,'192.168.70.73',3306);\n</code></pre> <p>To see the nodes:</p> <pre><code>mysql@proxysql&gt; SELECT * FROM mysql_servers;\n</code></pre> <p>The following output shows the list of nodes:</p> Expected output <pre><code>+--------------+---------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+\n| hostgroup_id | hostname      | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |\n+--------------+---------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+\n| 0            | 192.168.70.71 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |\n| 0            | 192.168.70.72 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |\n| 0            | 192.168.70.73 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |\n+--------------+---------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"load-balance-proxysql.html#create-proxysql-monitoring-user","title":"Create ProxySQL monitoring user","text":"<p>To enable monitoring of Percona XtraDB Cluster nodes in ProxySQL, create a user with <code>USAGE</code> privilege on any node in the cluster and configure the user in ProxySQL.</p> <p>The following example shows how to add a monitoring user on Node 2:</p> <pre><code>mysql@pxc2&gt; CREATE USER 'proxysql'@'%' IDENTIFIED WITH mysql_native_password by '$3Kr$t';\nmysql@pxc2&gt; GRANT USAGE ON *.* TO 'proxysql'@'%';\n</code></pre> <p>The following example shows how to configure this user on the ProxySQL node:</p> <pre><code>mysql@proxysql&gt; UPDATE global_variables SET variable_value='proxysql'\n              WHERE variable_name='mysql-monitor_username';\nmysql@proxysql&gt; UPDATE global_variables SET variable_value='ProxySQLPa55'\n              WHERE variable_name='mysql-monitor_password';\n</code></pre> <p>To load this configuration at runtime, issue a <code>LOAD</code> command. To save these changes to disk (ensuring that they persist after ProxySQL shuts down), issue a <code>SAVE</code> command.</p> <pre><code>mysql@proxysql&gt; LOAD MYSQL VARIABLES TO RUNTIME;\nmysql@proxysql&gt; SAVE MYSQL VARIABLES TO DISK;\n</code></pre> <p>To ensure that monitoring is enabled, check the monitoring logs:</p> <pre><code>mysql@proxysql&gt; SELECT * FROM monitor.mysql_server_connect_log ORDER BY time_start_us DESC LIMIT 6;\n</code></pre> Expected output <pre><code>+---------------+------+------------------+----------------------+---------------+\n| hostname      | port | time_start_us    | connect_success_time | connect_error |\n+---------------+------+------------------+----------------------+---------------+\n| 192.168.70.71 | 3306 | 1469635762434625 | 1695                 | NULL          |\n| 192.168.70.72 | 3306 | 1469635762434625 | 1779                 | NULL          |\n| 192.168.70.73 | 3306 | 1469635762434625 | 1627                 | NULL          |\n| 192.168.70.71 | 3306 | 1469635642434517 | 1557                 | NULL          |\n| 192.168.70.72 | 3306 | 1469635642434517 | 2737                 | NULL          |\n| 192.168.70.73 | 3306 | 1469635642434517 | 1447                 | NULL          |\n+---------------+------+------------------+----------------------+---------------+\n6 rows in set (0.00 sec)\n</code></pre> <pre><code>mysql&gt; SELECT * FROM monitor.mysql_server_ping_log ORDER BY time_start_us DESC LIMIT 6;\n</code></pre> Expected output <pre><code>+---------------+------+------------------+-------------------+------------+\n| hostname      | port | time_start_us    | ping_success_time | ping_error |\n+---------------+------+------------------+-------------------+------------+\n| 192.168.70.71 | 3306 | 1469635762416190 | 948               | NULL       |\n| 192.168.70.72 | 3306 | 1469635762416190 | 803               | NULL       |\n| 192.168.70.73 | 3306 | 1469635762416190 | 711               | NULL       |\n| 192.168.70.71 | 3306 | 1469635702416062 | 783               | NULL       |\n| 192.168.70.72 | 3306 | 1469635702416062 | 631               | NULL       |\n| 192.168.70.73 | 3306 | 1469635702416062 | 542               | NULL       |\n+---------------+------+------------------+-------------------+------------+\n6 rows in set (0.00 sec)\n</code></pre> <p>The previous examples show that ProxySQL is able to connect and ping the nodes you have added.</p> <p>To enable monitoring of these nodes, load them at runtime:</p> <pre><code>mysql@proxysql&gt; LOAD MYSQL SERVERS TO RUNTIME;\n</code></pre>"},{"location":"load-balance-proxysql.html#create-proxysql-client-user","title":"Create ProxySQL client user","text":"<p>ProxySQL must have users that can access backend nodes to manage connections.</p> <p>To add a user, insert credentials into <code>mysql_users</code> table:</p> <pre><code>mysql@proxysql&gt; INSERT INTO mysql_users (username,password) VALUES ('sbuser','sbpass');\n</code></pre> Expected output <pre><code>Query OK, 1 row affected (0.00 sec)\n</code></pre> <p>Note</p> <p>ProxySQL currently doesn\u2019t encrypt passwords.</p> <p>Load the user into runtime space and save these changes to disk (ensuring that they persist after ProxySQL shuts down):</p> <pre><code>mysql@proxysql&gt; LOAD MYSQL USERS TO RUNTIME;\nmysql@proxysql&gt; SAVE MYSQL USERS TO DISK;\n</code></pre> <p>To confirm that the user has been set up correctly, you can try to log in as root:</p> <pre><code>root@proxysql:~# mysql -u sbuser -psbpass -h 127.0.0.1 -P 6033\n</code></pre> Expected output <pre><code>Welcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1491\nServer version: 5.5.30 (ProxySQL)\n\nCopyright (c) 2009-2020 Percona LLC and/or its affiliates\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n</code></pre> <p>To provide read/write access to the cluster for ProxySQL, add this user on one of the Percona XtraDB Cluster nodes:</p> <pre><code>mysql@pxc3&gt; CREATE USER 'sbuser'@'192.168.70.74' IDENTIFIED BY 'sbpass';\n</code></pre> Expected output <pre><code>Query OK, 0 rows affected (0.01 sec)\n</code></pre> <pre><code>mysql@pxc3&gt; GRANT ALL ON *.* TO 'sbuser'@'192.168.70.74';\n</code></pre> Expected output <pre><code>Query OK, 0 rows affected (0.00 sec)\n</code></pre>"},{"location":"load-balance-proxysql.html#test-cluster-with-sysbench","title":"Test cluster with sysbench","text":"<p>You can install <code>sysbench</code> from Percona software repositories:</p> <ul> <li>For Debian or Ubuntu:</li> </ul> <pre><code>root@proxysql:~# apt install sysbench\n</code></pre> <ul> <li>For Red Hat Enterprise Linux or CentOS</li> </ul> <pre><code>root@proxysql:~# yum install sysbench\n</code></pre> <p>Note</p> <p><code>sysbench</code> requires ProxySQL client user credentials that you created in Creating ProxySQL Client User.</p> <ol> <li> <p>Create the database that will be used for testing on one of the Percona XtraDB Cluster nodes:</p> <pre><code>mysql@pxc1&gt; CREATE DATABASE sbtest;\n</code></pre> </li> <li> <p>Populate the table with data for the benchmark on the ProxySQL node:</p> <pre><code>root@proxysql:~# sysbench --report-interval=5 --num-threads=4 \\\n--num-requests=0 --max-time=20 \\\n--test=/usr/share/doc/sysbench/tests/db/oltp.lua \\\n--mysql-user='sbuser' --mysql-password='sbpass' \\\n--oltp-table-size=10000 --mysql-host=127.0.0.1 --mysql-port=6033 \\\nprepare\n</code></pre> </li> <li> <p>Run the benchmark on the ProxySQL node:</p> <pre><code>root@proxysql:~# sysbench --report-interval=5 --num-threads=4 \\\n--num-requests=0 --max-time=20 \\\n--test=/usr/share/doc/sysbench/tests/db/oltp.lua \\\n--mysql-user='sbuser' --mysql-password='sbpass' \\\n--oltp-table-size=10000 --mysql-host=127.0.0.1 --mysql-port=6033 \\\nrun\n</code></pre> </li> </ol> <p>ProxySQL stores collected data in the <code>stats</code> schema:</p> <pre><code>mysql@proxysql&gt; SHOW TABLES FROM stats;\n</code></pre> Expected output <pre><code>+--------------------------------+\n| tables                         |\n+--------------------------------+\n| stats_mysql_query_rules        |\n| stats_mysql_commands_counters  |\n| stats_mysql_processlist        |\n| stats_mysql_connection_pool    |\n| stats_mysql_query_digest       |\n| stats_mysql_query_digest_reset |\n| stats_mysql_global             |\n+--------------------------------+\n</code></pre> <p>For example, to see the number of commands that run on the cluster:</p> <pre><code>mysql@proxysql&gt; SELECT * FROM stats_mysql_commands_counters;\n</code></pre> Expected output <pre><code>+---------------------------+---------------+-----------+-----------+-----------+---------+---------+----------+----------+-----------+-----------+--------+--------+---------+----------+\n| Command                   | Total_Time_us | Total_cnt | cnt_100us | cnt_500us | cnt_1ms | cnt_5ms | cnt_10ms | cnt_50ms | cnt_100ms | cnt_500ms | cnt_1s | cnt_5s | cnt_10s | cnt_INFs |\n+---------------------------+---------------+-----------+-----------+-----------+---------+---------+----------+----------+-----------+-----------+--------+--------+---------+----------+\n| ALTER_TABLE               | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| ANALYZE_TABLE             | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| BEGIN                     | 2212625       | 3686      | 55        | 2162      | 899     | 569     | 1        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| CHANGE_REPLICATION_SOURCE | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| COMMIT                    | 21522591      | 3628      | 0         | 0         | 0       | 1765    | 1590     | 272      | 1         | 0         | 0      | 0      | 0       | 0        |\n| CREATE_DATABASE           | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| CREATE_INDEX              | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n...\n| DELETE                    | 2904130       | 3670      | 35        | 1546      | 1346    | 723     | 19       | 1        | 0         | 0         | 0      | 0      | 0       | 0        |\n| DESCRIBE                  | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n...\n| INSERT                    | 19531649      | 3660      | 39        | 1588      | 1292    | 723     | 12       | 2        | 0         | 1         | 0      | 1      | 2       | 0        |\n...\n| SELECT                    | 35049794      | 51605     | 501       | 26180     | 16606   | 8241    | 70       | 3        | 4         | 0         | 0      | 0      | 0       | 0        |\n| SELECT_FOR_UPDATE         | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n...\n| UPDATE                    | 6402302       | 7367      | 75        | 2503      | 3020    | 1743    | 23       | 3        | 0         | 0         | 0      | 0      | 0       | 0        |\n| USE                       | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n| SHOW                      | 19691         | 2         | 0         | 0         | 0       | 0       | 1        | 1        | 0         | 0         | 0      | 0      | 0       | 0        |\n| UNKNOWN                   | 0             | 0         | 0         | 0         | 0       | 0       | 0        | 0        | 0         | 0         | 0      | 0      | 0       | 0        |\n+---------------------------+---------------+-----------+-----------+-----------+---------+---------+----------+----------+-----------+-----------+--------+--------+---------+----------+\n45 rows in set (0.00 sec)\n</code></pre>"},{"location":"load-balance-proxysql.html#automatic-failover","title":"Automatic failover","text":"<p>ProxySQL will automatically detect if a node is not available or not synced with the cluster.</p> <p>You can check the status of all available nodes by running:</p> <pre><code>mysql@proxysql&gt; SELECT hostgroup_id,hostname,port,status FROM runtime_mysql_servers;\n</code></pre> <p>The following output shows the status of all available nodes:</p> Expected output <pre><code>+--------------+---------------+------+--------+\n| hostgroup_id | hostname      | port | status |\n+--------------+---------------+------+--------+\n| 0            | 192.168.70.71 | 3306 | ONLINE |\n| 0            | 192.168.70.72 | 3306 | ONLINE |\n| 0            | 192.168.70.73 | 3306 | ONLINE |\n+--------------+---------------+------+--------+\n3 rows in set (0.00 sec)\n</code></pre> <p>To test problem detection and fail-over mechanism, shut down Node 3:</p> <pre><code>root@pxc3:~# service mysql stop\n</code></pre> <p>ProxySQL will detect that the node is down and update its status to <code>OFFLINE_SOFT</code>:</p> <pre><code>mysql@proxysql&gt; SELECT hostgroup_id,hostname,port,status FROM runtime_mysql_servers;\n</code></pre> Expected output <pre><code>+--------------+---------------+------+--------------+\n| hostgroup_id | hostname      | port | status       |\n+--------------+---------------+------+--------------+\n| 0            | 192.168.70.71 | 3306 | ONLINE       |\n| 0            | 192.168.70.72 | 3306 | ONLINE       |\n| 0            | 192.168.70.73 | 3306 | OFFLINE_SOFT |\n+--------------+---------------+------+--------------+\n3 rows in set (0.00 sec)\n</code></pre> <p>Now start Node 3 again:</p> <pre><code>root@pxc3:~# service mysql start\n</code></pre> <p>The script will detect the change and mark the node as <code>ONLINE</code>:</p> <pre><code>mysql@proxysql&gt; SELECT hostgroup_id,hostname,port,status FROM runtime_mysql_servers;\n</code></pre> Expected output <pre><code>+--------------+---------------+------+--------+\n| hostgroup_id | hostname      | port | status |\n+--------------+---------------+------+--------+\n| 0            | 192.168.70.71 | 3306 | ONLINE |\n| 0            | 192.168.70.72 | 3306 | ONLINE |\n| 0            | 192.168.70.73 | 3306 | ONLINE |\n+--------------+---------------+------+--------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"load-balance-proxysql.html#assisted-maintenance-mode","title":"Assisted maintenance mode","text":"<p>Usually, to take a node down for maintenance, you need to identify that node, update its status in ProxySQL to <code>OFFLINE_SOFT</code>, wait for ProxySQL to divert traffic from this node, and then initiate the shutdown or perform maintenance tasks. Percona XtraDB Cluster includes a special maintenance mode for nodes that enables you to take a node down without adjusting ProxySQL manually.</p> <p>Initiating <code>pxc_maint_mode=MAINTENANCE</code> does not disconnect existing connections. You must terminate these connections by either running your application code or forcing a re-connection. With a re-connection, the new connections are re-routed around the PXC node in <code>MAINTENANCE</code> mode.</p> <p>Assisted maintenance mode is controlled via the <code>pxc_maint_mode</code> variable, which is monitored by ProxySQL and can be set to one of the following values:</p> <ul> <li> <p><code>DISABLED</code>: This value is the default state that tells ProxySQL to route traffic to the node as usual.</p> </li> <li> <p><code>SHUTDOWN</code>: This state is set automatically when you initiate node shutdown.</p> <p>You may need to shut down a node when upgrading the OS, adding resources, changing hardware parts, relocating the server, etc.</p> <p>When you initiate node shutdown, Percona XtraDB Cluster does not send the signal immediately. Intead, it changes the state to <code>pxc_maint_mode=SHUTDOWN</code> and waits for a predefined period (10 seconds by default). When ProxySQL detects that the mode is set to <code>SHUTDOWN</code>, it changes the status of this node to <code>OFFLINE_SOFT</code>. This status stops creating new node connections. After the transition period, long-running active transactions are aborted.</p> </li> <li> <p><code>MAINTENANCE</code>: You can change to this state if you need to perform maintenance on a node without shutting it down.</p> <p>You may need to isolate the node for a specific time so that it does not receive traffic from ProxySQL while you resize the buffer pool, truncate the undo log, defragment, or check disks, etc.</p> <p>To do this, manually set <code>pxc_maint_mode=MAINTENANCE</code>. Control is not returned to the user for a predefined period (10 seconds by default). You can increase the transition period using the <code>pxc_maint_transition_period</code> variable to accommodate long-running transactions. If the period is long enough for all transactions to finish, there should be little disruption in the cluster workload. If you increase  the transition period, the packaging script may determine the wait as a server stall.</p> <p>When ProxySQL detects that the mode is set to <code>MAINTENANCE</code>, it stops routing traffic to the node. During the transition period, any existing connections continue, but ProxySQL avoids opening new connections and starting transactions. Still, the user can open connections to monitor status.</p> <p>Once control is returned, you can perform maintenance activity.</p> <p>Note</p> <p>Data changes continue to be replicated across the cluster.</p> <p>After you finish maintenance, set the mode back to <code>DISABLED</code>. When ProxySQL detects this, it starts routing traffic to the node again.</p> </li> </ul> <p>Related sections</p> <p>Setting up a testing environment with ProxySQL</p>"},{"location":"load-balance-proxysql.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"monitoring.html","title":"Monitor the cluster","text":"<p>Each node can have a different view of the cluster. There is no centralized node to monitor. To track down the source of issues, you have to monitor each node independently.</p> <p>Values of many variables depend on the node from which you are querying. For example, replication sent from a node and writes received by all other nodes.</p> <p>Having data from all nodes can help you understand where flow messages are coming from, which node sends excessively large transactions, and so on.</p>"},{"location":"monitoring.html#manual-monitoring","title":"Manual monitoring","text":"<p>Manual cluster monitoring can be performed using myq-tools.</p>"},{"location":"monitoring.html#alerting","title":"Alerting","text":"<p>Besides standard MySQL alerting, you should use at least the following triggers specific to Percona XtraDB Cluster:</p> <ul> <li>Cluster state of each node</li> </ul> <p><code>wsrep_cluster_status</code> != Primary</p> <ul> <li>Node state</li> </ul> <p><code>wsrep_connected</code> != <code>ON</code></p> <p><code>wsrep_ready</code> != <code>ON</code></p> <p>For additional alerting, consider the following:</p> <ul> <li> <p>Excessive replication conflicts can be identtified using the <code>wsrep_local_cert_failures</code> and <code>wsrep_local_bf_aborts</code> variables</p> </li> <li> <p>Excessive flow control messages can be identified using the <code>wsrep_flow_control_sent</code> and <code>wsrep_flow_control_recv</code> variables</p> </li> <li> <p>Large replication queues can be identified using the <code>wsrep_local_recv_queue</code>.</p> </li> </ul>"},{"location":"monitoring.html#metrics","title":"Metrics","text":"<p>Cluster metrics collection for long-term graphing should be done at least for the following:</p> <ul> <li>Queue sizes:</li> </ul> <p><code>wsrep_local_recv_queue</code> and <code>wsrep_local_send_queue</code></p> <ul> <li>Flow control:</li> </ul> <p><code>wsrep_flow_control_sent</code> and <code>wsrep_flow_control_recv</code></p> <ul> <li>Number of transactions for a node:</li> </ul> <p><code>wsrep_replicated</code> and <code>wsrep_received</code></p> <ul> <li>Number of transactions in bytes:</li> </ul> <p><code>wsrep_replicated_bytes</code> and <code>wsrep_received_bytes</code></p> <ul> <li>Replication conflicts:</li> </ul> <p><code>wsrep_local_cert_failures</code> and <code>wsrep_local_bf_aborts</code></p>"},{"location":"monitoring.html#use-percona-monitoring-and-management","title":"Use Percona Monitoring and Management","text":"<p>Percona Monitoring and Management includes two dashboards to monitor PXC:</p> <ol> <li> <p>PXC/Galera Cluster Overview:</p> <p></p> </li> <li> <p>PXC/Galera Graphs:</p> <p></p> <p>These dashboards are available from the menu:</p> <p></p> </li> </ol> <p>Please refer to the official documentation for details on Percona Monitoring and Management installation and setup.</p>"},{"location":"monitoring.html#other-reading","title":"Other reading","text":"<ul> <li>Realtime stats to pay attention to in PXC and Galera</li> </ul>"},{"location":"monitoring.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"nbo.html","title":"Non-Blocking Operations (NBO) method for Online Scheme Upgrades (OSU)","text":"<p>An Online Schema Upgrade can be a daily issue in an environment with accelerated development and deployment. The task becomes more difficult as the data grows. An <code>ALTER TABLE</code> statement is a multi-step operation and must run until it is complete. Aborting the statement may be more expensive than letting it complete.</p> <p>The Non-Blocking Operations (NBO) method is similar to the <code>TOI</code> method (see Online Schema Upgrade for more information on the available types of online schema upgrades). Every replica processes the DDL statement at the same point in the cluster transaction stream, and other transactions cannot commit during the operation. The <code>NBO</code> method provides a more efficient locking strategy and avoids the <code>TOI</code> issue of long-running DDL statements blocking cluster updates.</p> <p>In the NBO method, the supported DDL statement acquires a metadata lock on the table or schema at a late stage of the operation. The <code>lock_wait_timeout</code> system variable defines the timeout, measured in seconds, to acquire metadata locks. The default value, 3153600, could cause <code>infinite</code> waits and should not be used with the <code>NBO</code> method.</p> <p>Attempting a State Snapshot Transfer (SST) fails during the NBO operation.</p> <p>To dynamically set the <code>NBO</code> mode in the client, run the following statement:</p> <pre><code>SET SESSION wsrep_OSU_method='NBO';\n</code></pre>"},{"location":"nbo.html#supported-ddl-statements","title":"Supported DDL statements","text":"<p>The NBO method supports the following DDL statements:</p> <ul> <li> <p><code>ALTER TABLE</code></p> </li> <li> <p><code>ALTER INDEX</code></p> </li> <li> <p><code>CREATE INDEX</code></p> </li> <li> <p><code>DROP INDEX</code></p> </li> </ul>"},{"location":"nbo.html#limitations","title":"Limitations","text":"<p>The <code>NBO</code> method does not support the following:</p> <ul> <li> <p>Running two DDL statements with conflicting locks on the same table. For example, you cannot run two <code>ALTER TABLE</code> statements for an <code>employees</code> table.</p> </li> <li> <p>Modifying a table changed during the NBO operation. However, you can modify other tables and execute NBO queries on other tables.</p> </li> </ul> <p>See the Percona XtraDB Cluster 8.0.25-15.1 Release notes for the latest information.</p>"},{"location":"nbo.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"online-schema-upgrade.html","title":"Online schema upgrade","text":"<p>Database schemas must change as applications change. For a cluster, the schema upgrade must occur while the system is online. A synchronous cluster requires all active nodes have the same data. Schema updates are performed using Data Definition Language (DDL) statements, such as <code>ALTER TABLE &lt;table_name&gt; DROP COLUMN &lt;column_name&gt;</code>.</p> <p>The DDL statements are non-transactional, so these statements use up-front locking to avoid the chance of deadlocks and cannot be rolled back. We recommend that you test your schema changes, especially if you must run an <code>ALTER</code> statement on large tables. Verify the backups before updating the schemas in the production environment. A failure in a schema change can cause your cluster to drop nodes and lose data.</p> <p>Percona XtraDB Cluster supports the following methods for making online schema changes:</p> Method Name Reason for use Description TOI or Total Order Isolation Consistency is important. Other transactions are blocked while the cluster processes the DDL statements. This is the default method for the wsrep-OSU-method variable. The isolation of the DDL statement guarantees consistency. The DDL replication uses a Statement format. Each node processes the replicated DDL statement at same position in the replication stream. All other writes must wait until the DDL statement is executed. While a DDL statement is running, any long-running transactions in progress and using the same resource receive a deadlock error at commit and are rolled back. The pt-online-schema-change in the Percona Toolkit can alter the table without using locks. There are limitations: only InnoDB tables can be altered, and the <code>wsrep_OSU_method</code> must be <code>TOI</code>. RSU or Rolling Schema Upgrade This method guarantees high availability during the schema upgrades. The node desynchronizes with the cluster and disables flow control during the execution of the DDL statement. The rest of the cluster is not affected. After the statement execution, the node applies delayed events and synchronizes with the cluster. Although the cluster is active, during the process some nodes have the newer schema and some nodes have the older schema. The RSU method is a manual operation. For this method, the <code>gcache</code> must be large enough to store the data for the duration of the DDL change. NBO or Non-Blocking Operation This method is used when consistency is important and uses a more efficient locking strategy. This method is similar to <code>TOI</code>. DDL operations acquire an exclusive metadata lock on the table or schema at a late stage of the operation when updating the table or schema definition. Attempting a State Snapshot Transfer (SST) fails during the NBO operation. This mode uses a more efficient locking strategy and avoids the <code>TOI</code> issue of long-running DDL statements blocking other updates in the cluster."},{"location":"online-schema-upgrade.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"performance-schema-instrumentation.html","title":"Perfomance Schema instrumentation","text":"<p>To improve monitoring Percona XtraDB Cluster has implemented an infrastructure to expose Galera instruments (mutexes, cond-variables, files, threads) as a part of <code>PERFORMANCE_SCHEMA</code>.</p> <p>Although mutexes and condition variables from <code>wsrep</code> were already part of <code>PERFORMANCE_SCHEMA</code> threads were not.</p> <p>Mutexes, condition variables, threads, and files from Galera library also were not part of the <code>PERFORMANCE_SCHEMA</code>.</p> <p>You can see the complete list of available instruments by running:</p> <pre><code>mysql&gt; SELECT * FROM performance_schema.setup_instruments WHERE name LIKE '%galera%' OR name LIKE '%wsrep%';\n</code></pre> Expected output <pre><code>+----------------------------------------------------------+---------+-------+\n| NAME                                                     | ENABLED | TIMED |\n+----------------------------------------------------------+---------+-------+\n| wait/synch/mutex/sql/LOCK_wsrep_ready                    | NO      | NO    |\n| wait/synch/mutex/sql/LOCK_wsrep_sst                      | NO      | NO    |\n| wait/synch/mutex/sql/LOCK_wsrep_sst_init                 | NO      | NO    |\n...\n| stage/wsrep/wsrep: in rollback thread                    | NO      | NO    |\n| stage/wsrep/wsrep: aborter idle                          | NO      | NO    |\n| stage/wsrep/wsrep: aborter active                        | NO      | NO    |\n+----------------------------------------------------------+---------+-------+\n73 rows in set (0.00 sec)\n</code></pre> <p>Some of the most important are:</p> <ul> <li> <p>Two main actions that Galera does are <code>REPLICATION</code> and <code>ROLLBACK</code>. Mutexes, condition variables, and threads related to this are part of <code>PERFORMANCE_SCHEMA</code>.</p> </li> <li> <p>Galera internally uses monitor mechanism to enforce ordering of events. These monitor control events apply and are mainly responsible for the wait between different action. All such monitor mutexes and condition variables are covered as part of this implementation.</p> </li> <li> <p>There are lot of other miscellaneous action related to receiving of package and servicing messages. Mutexes and condition variables needed for them are now visible too. Threads that manage receiving and servicing are also being instrumented.</p> </li> </ul> <p>This feature has exposed all the important mutexes, condition variables that lead to lock/threads/files as part of this process.</p> <p>Besides exposing file it also tracks write/read bytes like stats for file. These stats are not exposed for Galera files as Galera uses <code>mmap</code>.</p> <p>Also, there are some threads that are short-lived and created only when needed especially for SST/IST purpose. They are also tracked but come into <code>PERFORMANCE_SCHEMA</code> tables only if/when they are created.</p> <p><code>Stage Info</code> from Galera specific function which server updates to track state of running thread is also visible in <code>PERFORMANCE_SCHEMA</code>.</p>"},{"location":"performance-schema-instrumentation.html#what-is-not-exposed","title":"What is not exposed ?","text":"<p>Galera uses customer data-structure in some cases (like STL structures). Mutexes used for protecting these structures which are not part of mainline Galera logic or doesn\u2019t fall in big-picture are not tracked. Same goes with threads that are <code>gcomm</code> library specific.</p> <p>Galera maintains a process vector inside each monitor for its internal graph creation. This process vector is 65K in size and there are two such vectors per monitor. That is 128K * 3 = 384K condition variables. These are not tracked to avoid hogging <code>PERFORMANCE_SCHEMA</code> limits and sidelining of the main crucial information.</p>"},{"location":"performance-schema-instrumentation.html#use-pxc_cluster_view","title":"Use <code>pxc_cluster_view</code>","text":"<p>The <code>pxc_cluster_view</code> - provides a unified view of the cluster. The table is in the Performance_Schema database.</p> <pre><code>DESCRIBE pxc_cluster_view;\n</code></pre> <p>This table has the following definition:</p> Expected output <pre><code>+-------------+--------------+------+-----+---------+-------+\n| Field       | Type         | Null | Key | Default | Extra |\n+-------------+--------------+------+-----+---------+-------+\n| HOST_NAME   | char(64)     | NO   |     | NULL    |       |\n| UUID        | char(36)     | NO   |     | NULL    |       |\n| STATUS      | char(64)     | NO   |     | NULL    |       |\n| LOCAL_INDEX | int unsigned | NO   |     | NULL    |       |\n| SEGMENT     | int unsigned | NO   |     | NULL    |       |\n+-------------+--------------+------+-----+---------+-------+\n5 rows in set (0.00 sec)\n</code></pre> <p>To view the table, run the following query:</p> <pre><code>SELECT * FROM pxc_cluster_view;\n</code></pre> Expected output <pre><code>+-----------+--------------------------------------+--------+-------------+---------+\n| HOST_NAME | UUID                                 | STATUS | LOCAL_INDEX | SEGMENT |\n+-----------+--------------------------------------+--------+-------------+---------+\n| node1     | 22b9d47e-c215-11eb-81f7-7ed65a9d253b | SYNCED |           0 |       0 |\n| node3     | 29c51cf5-c216-11eb-9101-1ba3a28e377a | SYNCED |           1 |       0 |\n| node2     | 982cdb03-c215-11eb-9865-0ae076a59c5c | SYNCED |           2 |       0 |\n+-----------+--------------------------------------+--------+-------------+---------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"performance-schema-instrumentation.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"proxysql-v2.html","title":"ProxySQL admin utilities","text":"<p>The ProxySQL and ProxySQL admin utilities documentation provides information on installing and running ProxySQL 1.x.x or ProxySQL 2.x.x with the following ProxySQL admin utilities: </p> <ul> <li> <p>The ProxySQL Admin simplifies the configuration of Percona XtraDB Cluster nodes with ProxySQL.</p> </li> <li> <p>The Percona Scheduler Admin tool can automatically perform a failover due to node failures, service degradation, or maintenance.</p> </li> </ul>"},{"location":"proxysql-v2.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"quickstart-overview.html","title":"Quickstart Guide for Percona XtraDB Cluster","text":"<p>Percona XtraDB Cluster (PXC) is a 100% open source, enterprise-grade, highly available clustering solution for MySQL multi-master setups based on Galera. PXC helps enterprises minimize unexpected downtime and data loss, reduce costs, and improve performance and scalability of your database environments supporting your critical business applications in the most demanding public, private, and hybrid cloud environments.</p>"},{"location":"quickstart-overview.html#install-percona-xtradb-cluster","title":"Install Percona XtraDB Cluster","text":"<p>You can install Percona XtraDB Cluster using different methods. </p> <ul> <li>Use the Percona Repositories</li> <li>Use APT</li> <li>Use YUM</li> <li>Use binary tarballs</li> <li>Use Docker</li> </ul>"},{"location":"quickstart-overview.html#for-superior-and-optimized-performance","title":"For superior and optimized performance","text":"<p>Percona Server for MySQL (PS) is a freely available, fully compatible, enhanced, and open source drop-in replacement for any MySQL database. It provides superior and optimized performance, greater scalability and availability, enhanced backups, increased visibility, and instrumentation. Percona Server for MySQL is trusted by thousands of enterprises to provide better performance and concurrency for their most demanding workloads.</p> <p>Install Percona Server for MySQL.</p>"},{"location":"quickstart-overview.html#for-backups-and-restores","title":"For backups and restores","text":"<p>Percona XtraBackup (PXB) is a 100% open source backup solution for all versions of Percona Server for MySQL and MySQL\u00ae that performs online non-blocking, tightly compressed, highly secure full backups on transactional systems. Maintain fully available applications during planned maintenance windows with Percona XtraBackup.</p> <p>Install Percona XtraBackup</p>"},{"location":"quickstart-overview.html#for-monitoring-and-management","title":"For Monitoring and Management","text":"<p>Percona Monitoring and Management (PMM )monitors and provides actionable performance data for MySQL variants, including Percona Server for MySQL, Percona XtraDB Cluster, Oracle MySQL Community Edition, Oracle MySQL Enterprise Edition, and MariaDB. PMM captures metrics and data for the InnoDB, XtraDB, and MyRocks storage engines, and has specialized dashboards for specific engine details.</p> <p>Install PMM and connect your MySQL instances to it.</p>"},{"location":"quickstart-overview.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"restarting-nodes.html","title":"Restart the cluster nodes","text":"<p>To restart a cluster node, shut down MySQL and restarting it. The node should leave the cluster (and the total vote count for quorum should decrement).</p> <p>When it rejoins, the node should synchronize using IST. If the set of changes needed for IST are not found in the <code>gcache</code> file on any other node in the entire cluster, then SST will be performed instead. Therefore, restarting cluster nodes for rolling configuration changes or software upgrades is rather simple from the cluster\u2019s perspective.</p> <p>Note</p> <p>If you restart a node with an invalid configuration change that prevents MySQL from loading, Galera will drop the node\u2019s state and force an SST for that node.</p> <p>Note</p> <p>If MySQL fails for any reason, it will not remove its PID file (which is by design deleted only on clean shutdown). Obviously server will not restart if existing PID file is present. So in case of encountered MySQL failure for any reason with the relevant records in log, PID file should be removed manually.</p>"},{"location":"restarting-nodes.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"secure-network.html","title":"Secure the network","text":"<p>By default, anyone with access to your network can connect to any Percona XtraDB Cluster node either as a client or as another node joining the cluster. This could potentially let them query your data or get a complete copy of it.</p> <p>In general, it is a good idea to disable all remote connections to Percona XtraDB Cluster nodes. If you require clients or nodes from outside of your network to connect, you can set up a VPN (virtual private network) for this purpose.</p>"},{"location":"secure-network.html#firewall-configuration","title":"Firewall configuration","text":"<p>A firewall can let you filter Percona XtraDB Cluster traffic based on the clients and nodes that you trust.</p> <p>By default, Percona XtraDB Cluster nodes use the following ports:</p> <ul> <li> <p>3306 is used for MySQL client connections and SST (State Snapshot Transfer) via <code>mysqldump</code>.</p> </li> <li> <p>4444 is used for SST via Percona XtraBackup.</p> </li> <li> <p>4567 is used for write-set replication traffic (over TCP) and multicast replication (over TCP and UDP).</p> </li> <li> <p>4568 is used for IST (Incremental State Transfer).</p> </li> </ul> <p>Ideally you want to make sure that these ports on each node are accessed only from trusted IP addresses. You can implement packet filtering using <code>iptables</code>, <code>firewalld</code>, <code>pf</code>, or any other firewall of your choice.</p>"},{"location":"secure-network.html#use-iptables","title":"Use iptables","text":"<p>To restrict access to Percona XtraDB Cluster ports using <code>iptables</code>, you need to append new rules to the <code>INPUT</code> chain on the filter table. In the following example, the trusted range of IP addresses is 192.168.0.1/24. It is assumed that only Percona XtraDB Cluster nodes and clients will connect from these IPs. To enable packet filtering, run the commands as root on each Percona XtraDB Cluster node.</p> <pre><code># iptables --append INPUT --in-interface eth0 \\\n   --protocol tcp --match tcp --dport 3306 \\\n   --source 192.168.0.1/24 --jump ACCEPT\n# iptables --append INPUT --in-interface eth0 \\\n   --protocol tcp --match tcp --dport 4444 \\\n   --source 192.168.0.1/24 --jump ACCEPT\n# iptables --append INPUT --in-interface eth0 \\\n   --protocol tcp --match tcp --dport 4567 \\\n   --source 192.168.0.1/24 --jump ACCEPT\n# iptables --append INPUT --in-interface eth0 \\\n   --protocol tcp --match tcp --dport 4568 \\\n   --source 192.168.0.1/24 --jump ACCEPT\n# iptables --append INPUT --in-interface eth0 \\\n   --protocol udp --match udp --dport 4567 \\\n   --source 192.168.0.1/24 --jump ACCEPT\n</code></pre> <p>Note</p> <p>The last one opens port 4567 for multicast replication over UDP.</p> <p>If the trusted IPs are not in sequence, you will need to run these commands for each address on each node. In this case, you can consider to open all ports between trusted hosts. This is a little bit less secure, but reduces the amount of commands. For example, if you have three Percona XtraDB Cluster nodes, you can run the following commands on each one:</p> <pre><code># iptables --append INPUT --protocol tcp \\\n    --source 64.57.102.34 --jump ACCEPT\n# iptables --append INPUT --protocol tcp \\\n    --source 193.166.3.20  --jump ACCEPT\n# iptables --append INPUT --protocol tcp \\\n    --source 193.125.4.10  --jump ACCEPT\n</code></pre> <p>Running the previous commands will allow TCP connections from the IP addresses of the other Percona XtraDB Cluster nodes.</p> <p>Note</p> <p>The changes that you make in <code>iptables</code> are not persistent unless you save the packet filtering state:</p> <pre><code># service save iptables\n</code></pre> <p>For distributions that use <code>systemd</code>, you need to save the current packet filtering rules to the path where <code>iptables</code> reads from when it starts. This path can vary by distribution, but it is usually in the <code>/etc</code> directory. For example:</p> <ul> <li> <p><code>/etc/sysconfig/iptables</code></p> </li> <li> <p><code>/etc/iptables/iptables.rules</code></p> </li> </ul> <p>Use <code>iptables-save</code> to update the file:</p> <pre><code># iptables-save &gt; /etc/sysconfig/iptables\n</code></pre>"},{"location":"secure-network.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"security-index.html","title":"Security basics","text":"<p>By default, Percona XtraDB Cluster does not provide any protection for stored data. There are several considerations to take into account for securing Percona XtraDB Cluster:</p> <ul> <li>Securing the Network</li> </ul> <p>Anyone with access to your network can connect to any Percona XtraDB Cluster node    either as a client or as another node joining the cluster.    You should consider restricting access using VPN    and filter traffic on ports used by Percona XtraDB Cluster.</p> <ul> <li>Encrypting PXC Traffic</li> </ul> <p>Unencrypted traffic can potentially be viewed by anyone monitoring your    network. In Percona XtraDB Cluster 8.0 traffic encryption is enabled by default.</p> <ul> <li>Data-at-rest encryption</li> </ul> <p>Percona XtraDB Cluster supports tablespace encryption to provide at-rest encryption for physical tablespace data files.</p> <p>For more information, see the following blog post:</p> <pre><code>  * [MySQL Data at Rest Encryption](https://www.percona.com/blog/2016/04/08/mysql-data-at-rest-encryption/)\n</code></pre>"},{"location":"security-index.html#security-modules","title":"Security modules","text":"<p>Most modern distributions include special security modules that control access to resources for users and applications. By default, these modules will most likely constrain communication between Percona XtraDB Cluster nodes.</p> <p>The easiest solution is to disable or remove such programs, however, this is not recommended for production environments. You should instead create necessary security policies for Percona XtraDB Cluster.</p>"},{"location":"security-index.html#selinux","title":"SELinux","text":"<p>SELinux is usually enabled by default in Red Hat Enterprise Linux and derivatives (including CentOS). SELinux helps protects the user\u2019s home directory data and provides the following:</p> <ul> <li> <p>Prevents unauthorized users from exploiting the system</p> </li> <li> <p>Allows authorized users to access files</p> </li> <li> <p>Used as a role-based access control system</p> </li> </ul> <p>To help with troubleshooting, during installation and configuration, you can set the mode to <code>permissive</code>:</p> <pre><code>$ setenforce 0\n</code></pre> <p>Note</p> <p>This action changes the mode only at runtime.</p> <p>See also</p> <p>For more information, see Enabling AppArmor</p>"},{"location":"security-index.html#apparmor","title":"AppArmor","text":"<p>AppArmor is included in Debian and Ubuntu. Percona XtraDB Cluster contains several AppArmor profiles which allows for easier maintenance. To help with troubleshooting, during the installation and configuration, you can set the mode to <code>complain</code> for <code>mysqld</code>.</p> <p>See also</p> <p>For more information, see Enabling AppArmor</p>"},{"location":"security-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"selinux.html","title":"Enable SELinux","text":"<p>SELinux helps protects the user\u2019s home directory data. SELinux provides the following:</p> <ul> <li> <p>Prevents unauthorized users from exploiting the system</p> </li> <li> <p>Allows authorized users to access files</p> </li> <li> <p>Used as a role-based access control system</p> </li> </ul> <p>For more information, see Percona Server and SELinux</p> <p>Red Hat and CentOS distributes a policy module to extend the SELinux policy module for mysqld. We provide the following:</p> <ul> <li> <p>Extended module for pxc - an extension of the default module for mysqld distributed by the operating system.</p> </li> <li> <p>wsrep-sst-xtrabackup-v2 - allows execution of the xtrabackup-v2 SST script</p> </li> </ul>"},{"location":"selinux.html#modify-policies","title":"Modify policies","text":"<p>Modifications described in Percona Server and SELinux can also be applied for Percona XtraDB Cluster.</p> <p>To adjust PXC-specific configurations, especially SST/IST ports, use the following procedures as <code>root</code>:</p> <p>To enable port <code>14567</code> instead of the default port <code>4567</code>:</p> <p>Find the tag associated with the <code>4567</code> port:</p> <pre><code>$ semanage port -l | grep 4567\ntram_port_t tcp 4567\n</code></pre> <p>Run a command to find which rules grant mysqld access to the port:</p> <pre><code>$ sesearch -A -s mysqld_t -t tram_port_t -c tcp_socket\nFound 5 semantic av rules:\n    allow mysqld_t port_type : tcp_socket { recv_msg send_msg } ;\n    allow mysqld_t tram_port_t : tcp_socket { name_bind name_connect } ;\n    allow mysqld_t port_type : tcp_socket { recv_msg send_msg } ;\n    allow mysqld_t port_type : tcp_socket name_connect ;\n    allow nsswitch_domain port_type : tcp_socket { recv_msg send_msg } ;\n</code></pre> <p>You could tag port 14567 with the <code>tramp_port_t</code> tag, but this tag may cause issues because port 14567 is not a TRAM port. Use the general <code>mysqld_port_t</code> tag to add ports. For example, the following command adds port 14567 to the policy module with the <code>mysqld_port_t</code> tag.</p> <pre><code>$ semanage port -a -t mysqld_port_t -p tcp 14567\n</code></pre> <p>You can verify the addition with the following command:</p> <pre><code>$ semanage port -l | grep 14567\nmysqld_port_t                  tcp      4568, 14567, 1186, 3306, 63132-63164\n</code></pre> <p>To see the tag associated with the 4444 port, run the following command:</p> <pre><code>$ semanage port -l | grep 4444\nkerberos_port_t                tcp      88, 750, 4444\nkerberos_port_t                udp      88, 750, 4444\n</code></pre> <p>To find the rules associated with <code>kerberos_port_t</code>, run the following:</p> <pre><code>$ sesearch -A -s mysqld_t -t kerberos_port_t -c tcp_socket\nFound 9 semantic av rules:\nallow mysqld_t port_type : tcp_socket { recv_msg send_msg } ;\nallow mysqld_t rpc_port_type : tcp_socket name_bind ;\nallow mysqld_t port_type : tcp_socket { recv_msg send_msg } ;\nallow mysqld_t port_type : tcp_socket name_connect ;\nallow nsswitch_domain kerberos_port_t : tcp_socket name_connect ;\nallow nsswitch_domain kerberos_port_t : tcp_socket { recv_msg send_msg } ;\nallow nsswitch_domain reserved_port_type : tcp_socket name_connect ;\nallow mysqld_t reserved_port_type : tcp_socket name_connect ;\nallow nsswitch_domain port_type : tcp_socket { recv_msg send_msg } ;\n</code></pre> <p>If you require port 14444 added, use the same method used to add port 14567.</p> <p>If you must use a port that is already tagged, you can use either of the following ways:</p> <ul> <li> <p>Change the port tag to <code>mysqld_port_t</code></p> </li> <li> <p>Adjust the mysqld/sst script policy module to allow access to the given port. This method is better since all PXC-related adjustments are within the PXC-related policy modules.</p> </li> </ul>"},{"location":"selinux.html#work-with-pxc_encrypt_cluster_traffic","title":"Work with <code>pxc_encrypt_cluster_traffic</code>","text":"<p>By default, the <code>pxc_encrypt_cluster_traffic</code> is <code>ON</code>, which means that all cluster traffic is protected with certificates. However, these certificates cannot be located in the data directory since that location is overwritten during the SST process.</p> <p>Review How to set up the certificates. When SELinux is enabled, mysqld must have access to these certificates. The following items must be checked or considered:</p> <ul> <li> <p>Certificates inside <code>/etc/mysql/certs/</code> directory must use the <code>mysqld_etc_t</code> tag. This tag is applied automatically when the files are copied into the directory. When they are moved, the files retain their original context.</p> </li> <li> <p>Certificates are accessible to the mysql user. The server certificates should be readable only by this user.</p> </li> <li> <p>Certificates without the proper SELinux context can be restored with the following command:</p> </li> </ul> <pre><code>$ restorecon -v /etc/mysql/certs/*\n</code></pre>"},{"location":"selinux.html#enable-enforcing-mode-for-pxc","title":"Enable enforcing mode for PXC","text":"<p>The process, mysqld, runs in permissive mode, by default, even if SELinux runs in enforcing mode:</p> <pre><code>$ semodule -l | grep permissive\npermissive_mysqld_t\npermissivedomains\n</code></pre> <p>After ensuring that the system journal does not list any issues, the administrator can remove the permissive mode for mysqld_t:</p> <pre><code>$ semanage permissive -d mysqld_t\n</code></pre> <p>See also</p> <p>MariaDB 10.2 Galera Cluster with SELinux-enabled on CentOS 7</p>"},{"location":"selinux.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"set-up-3nodes-ec2.html","title":"How to set up a three-node cluster in EC2 environment","text":"<p>This manual assumes you are running three EC2 instances with Red Hat Enterprise Linux 7 64-bit.</p> <ul> <li> <p><code>node1</code>: <code>10.93.46.58</code></p> </li> <li> <p><code>node2</code>: <code>10.93.46.59</code></p> </li> <li> <p><code>node3</code>: <code>10.93.46.60</code></p> </li> </ul>"},{"location":"set-up-3nodes-ec2.html#recommendations-on-launching-ec2-instances","title":"Recommendations on launching EC2 instances","text":"<ol> <li> <p>Select instance types that support Enhanced Networking functionality. Good network performance critical for synchronous replication used in Percona XtraDB Cluster.</p> </li> <li> <p>When adding instance storage volumes, choose the ones with good I/O performance:</p> <ul> <li> <p>instances with NVMe are preferred</p> </li> <li> <p>GP2 SSD are preferred to GP3 SSD volume types due to I/O latency</p> </li> <li> <p>over sized GP2 SSD are preferred to IO1 volume types due to cost</p> </li> </ul> </li> <li> <p>Attach Elastic network interfaces with static IPs or assign Elastic IP addresses to your instances. Thereby IP addresses are preserved on instances in case of reboot or restart. This is required as each Percona XtraDB Cluster member includes the <code>wsrep_cluster_address</code> option in its configuration which points to other cluster members.</p> </li> <li> <p>Launch instances in different availability zones to avoid cluster downtime in case one of the zones experiences power loss or network connectivity issues.</p> <p>See also</p> <p>Amazon EC2 Documentation: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html</p> </li> </ol> <p>To set up Percona XtraDB Cluster:</p> <ol> <li> <p>Remove Percona XtraDB Cluster and Percona Server for MySQL packages for older versions:</p> <ul> <li> <p>Percona XtraDB Cluster 5.6, 5.7</p> </li> <li> <p>Percona Server for MySQL 5.6, 5.7</p> </li> </ul> </li> <li> <p>Install Percona XtraDB Cluster as described in Installing Percona XtraDB Cluster on Red Hat Enterprise Linux and CentOS.</p> </li> <li> <p>Create data directories:</p> <pre><code>$ mkdir -p /mnt/data\n$ mysql_install_db --datadir=/mnt/data --user=mysql\n</code></pre> </li> <li> <p>Stop the firewall service:</p> <pre><code>$ service iptables stop\n</code></pre> <p>Note</p> <p>Alternatively, you can keep the firewall running, but open ports 3306, 4444, 4567, 4568. For example to open port 4567 on 192.168.0.1:</p> <pre><code>$ iptables -A INPUT -i eth0 -p tcp -m tcp --source 192.168.0.1/24 --dport 4567 -j ACCEPT\n</code></pre> </li> <li> <p>Create <code>/etc/my.cnf</code> files:</p> <p>Contents of the configuration file on the first node:</p> <pre><code>[mysqld]\ndatadir=/mnt/data\nuser=mysql\n\nbinlog_format=ROW\n\nwsrep_provider=/usr/lib64/libgalera_smm.so\nwsrep_cluster_address=gcomm://10.93.46.58,10.93.46.59,10.93.46.60\n\nwsrep_cluster_name=trimethylxanthine\nwsrep_sst_method=xtrabackup-v2\nwsrep_node_name=node1\n\ninnodb_autoinc_lock_mode=2\n</code></pre> <p>For the second and third nodes change the following lines:</p> <pre><code>wsrep_node_name=node2\n\nwsrep_node_name=node3\n</code></pre> </li> <li> <p>Start and bootstrap Percona XtraDB Cluster on the first node:</p> <pre><code>[root@pxc1 ~]# systemctl start mysql@bootstrap.service\n</code></pre> Expected output <pre><code>2014-01-30 11:52:35 23280 [Note] /usr/sbin/mysqld: ready for connections.\nVersion: '...'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  Percona XtraDB Cluster (GPL), Release ..., Revision ..., wsrep_version\n</code></pre> </li> <li> <p>Start the second and third nodes:</p> <pre><code>$ sudo systemctl start mysql\n</code></pre> Expected output <pre><code>... [Note] WSREP: Flow-control interval: [28, 28]\n... [Note] WSREP: Restored state OPEN -&gt; JOINED (2)\n... [Note] WSREP: Member 2 (percona1) synced with group.\n... [Note] WSREP: Shifting JOINED -&gt; SYNCED (TO: 2)\n... [Note] WSREP: New cluster view: global state: 4827a206-876b-11e3-911c-3e6a77d54953:2, view# 7: Primary, number of nodes: 3, my index: 2, protocol version 2\n... [Note] WSREP: SST complete, seqno: 2\n... [Note] Plugin 'FEDERATED' is disabled.\n... [Note] InnoDB: The InnoDB memory heap is disabled\n... [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins\n... [Note] InnoDB: Compressed tables use zlib 1.2.3\n... [Note] InnoDB: Using Linux native AIO\n... [Note] InnoDB: Not using CPU crc32 instructions\n... [Note] InnoDB: Initializing buffer pool, size = 128.0M\n... [Note] InnoDB: Completed initialization of buffer pool\n... [Note] InnoDB: Highest supported file format is Barracuda.\n... [Note] InnoDB: 128 rollback segment(s) are active.\n... [Note] InnoDB: Waiting for purge to start\n... [Note] InnoDB:  Percona XtraDB (http://www.percona.com) ... started; log sequence number 1626341\n... [Note] RSA private key file not found: /var/lib/mysql//private_key.pem. Some authentication plugins will not work.\n... [Note] RSA public key file not found: /var/lib/mysql//public_key.pem. Some authentication plugins will not work.\n... [Note] Server hostname (bind-address): '*'; port: 3306\n... [Note] IPv6 is available.\n... [Note]   - '::' resolves to '::';\n... [Note] Server socket created on IP: '::'.\n... [Note] Event Scheduler: Loaded 0 events\n... [Note] /usr/sbin/mysqld: ready for connections.\nVersion: '...'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  Percona XtraDB Cluster (GPL), Release ..., Revision ..., wsrep_version\n... [Note] WSREP: inited wsrep sidno 1\n... [Note] WSREP: wsrep_notify_cmd is not defined, skipping notification.\n... [Note] WSREP: REPL Protocols: 5 (3, 1)\n... [Note] WSREP: Assign initial position for certification: 2, protocol version: 3\n... [Note] WSREP: Service thread queue flushed.\n... [Note] WSREP: Synchronized with group, ready for connections\n</code></pre> <p>When all nodes are in SYNCED state, your cluster is ready.</p> </li> <li> <p>You can try connecting to MySQL on any node and create a database:</p> <p><pre><code>$ mysql -uroot\n&gt; CREATE DATABASE hello_tom;\n</code></pre> The new database will be propagated to all nodes.</p> </li> </ol>"},{"location":"set-up-3nodes-ec2.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"singlebox.html","title":"How to set up a three-node cluster on a single box","text":"<p>This tutorial describes how to set up a 3-node cluster on a single physical box.</p> <p>For the purposes of this tutorial, assume the following:</p> <ul> <li> <p>The local IP address is <code>192.168.2.21</code>.</p> </li> <li> <p>Percona XtraDB Cluster is extracted from binary tarball into <code>/usr/local/Percona-XtraDB-Cluster-8.0.x86_64</code></p> </li> </ul> <p>To set up the cluster:</p> <ol> <li> <p>Create three MySQL configuration files for the corresponding nodes:</p> <ul> <li><code>/etc/my.4000.cnf</code></li> </ul> <pre><code>[mysqld]\nport = 4000\nsocket=/tmp/mysql.4000.sock\ndatadir=/data/bench/d1\nbasedir=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64\nuser=mysql\nlog_error=error.log\nbinlog_format=ROW\nwsrep_cluster_address='gcomm://192.168.2.21:5030,192.168.2.21:6030'\nwsrep_provider=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64/lib/libgalera_smm.so\nwsrep_sst_receive_address=192.168.2.21:4020\nwsrep_node_incoming_address=192.168.2.21\nwsrep_cluster_name=trimethylxanthine\nwsrep_provider_options = \"gmcast.listen_addr=tcp://192.168.2.21:4030;\"\nwsrep_sst_method=xtrabackup-v2\nwsrep_node_name=node4000\ninnodb_autoinc_lock_mode=2\n</code></pre> <ul> <li><code>/etc/my.5000.cnf</code></li> </ul> <pre><code>[mysqld]\nport = 5000\nsocket=/tmp/mysql.5000.sock\ndatadir=/data/bench/d2\nbasedir=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64\nuser=mysql\nlog_error=error.log\nbinlog_format=ROW\nwsrep_cluster_address='gcomm://192.168.2.21:4030,192.168.2.21:6030'\nwsrep_provider=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64/lib/libgalera_smm.so\nwsrep_sst_receive_address=192.168.2.21:5020\nwsrep_node_incoming_address=192.168.2.21\n\nwsrep_cluster_name=trimethylxanthine\nwsrep_provider_options = \"gmcast.listen_addr=tcp://192.168.2.21:5030;\"\nwsrep_sst_method=xtrabackup-v2\nwsrep_node_name=node5000\ninnodb_autoinc_lock_mode=2\n</code></pre> <ul> <li><code>/etc/my.6000.cnf</code></li> </ul> <pre><code>[mysqld]\nport = 6000\nsocket=/tmp/mysql.6000.sock\ndatadir=/data/bench/d3\nbasedir=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64\nuser=mysql\nlog_error=error.log\nbinlog_format=ROW\nwsrep_cluster_address='gcomm://192.168.2.21:4030,192.168.2.21:5030'\nwsrep_provider=/usr/local/Percona-XtraDB-Cluster-8.0.x86_64/lib/libgalera_smm.so\nwsrep_sst_receive_address=192.168.2.21:6020\nwsrep_node_incoming_address=192.168.2.21\nwsrep_cluster_name=trimethylxanthine\nwsrep_provider_options = \"gmcast.listen_addr=tcp://192.168.2.21:6030;\"\nwsrep_sst_method=xtrabackup-v2\nwsrep_node_name=node6000\ninnodb_autoinc_lock_mode=2\n</code></pre> </li> <li> <p>Create three data directories for the nodes:</p> <ul> <li> <p><code>/data/bench/d1</code></p> </li> <li> <p><code>/data/bench/d2</code></p> </li> <li> <p><code>/data/bench/d3</code></p> </li> </ul> </li> <li> <p>Start the first node using the following command (from the Percona XtraDB Cluster install directory):</p> <pre><code>$ bin/mysqld_safe --defaults-file=/etc/my.4000.cnf --wsrep-new-cluster\n</code></pre> <p>If the node starts correctly, you should see the following output:</p> Expected output <pre><code>111215 19:01:49 [Note] WSREP: Shifting JOINED -&gt; SYNCED (TO: 0)\n111215 19:01:49 [Note] WSREP: New cluster view: global state: 4c286ccc-2792-11e1-0800-94bd91e32efa:0, view# 1: Primary, number of nodes: 1, my index: 0, protocol version 1\n</code></pre> <p>To check the ports, run the following command:</p> <pre><code>$ netstat -anp | grep mysqld\ntcp        0      0 192.168.2.21:4030           0.0.0.0:*                   LISTEN      21895/mysqld\ntcp        0      0 0.0.0.0:4000                0.0.0.0:*                   LISTEN      21895/mysqld\n</code></pre> </li> <li> <p>Start the second and third nodes:</p> <pre><code>$ bin/mysqld_safe --defaults-file=/etc/my.5000.cnf\n$ bin/mysqld_safe --defaults-file=/etc/my.6000.cnf\n</code></pre> <p>If the nodes start and join the cluster successful, you should see the following output:</p> <pre><code>111215 19:22:26 [Note] WSREP: Shifting JOINER -&gt; JOINED (TO: 2)\n111215 19:22:26 [Note] WSREP: Shifting JOINED -&gt; SYNCED (TO: 2)\n111215 19:22:26 [Note] WSREP: Synchronized with group, ready for connections\n</code></pre> <p>To check the cluster size, run the following command:</p> <pre><code>$ mysql -h127.0.0.1 -P6000 -e \"show global status like 'wsrep_cluster_size';\"\n</code></pre> Expected output <pre><code>+--------------------+-------+\n| Variable_name      | Value |\n+--------------------+-------+\n| wsrep_cluster_size | 3     |\n+--------------------+-------+\n</code></pre> <p>After that you can connect to any node and perform queries, which will be automatically synchronized with other nodes. For example, to create a database on the second node, you can run the following command:</p> <pre><code>$ mysql -h127.0.0.1 -P5000 -e \"CREATE DATABASE hello_peter\"\n</code></pre> </li> </ol>"},{"location":"singlebox.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"state-snapshot-transfer.html","title":"State snapshot transfer","text":"<p>State Snapshot Transfer (SST) is a full data copy from one node (donor) to the joining node (joiner). It\u2019s used when a new node joins the cluster. In order to be synchronized with the cluster, the new node has to receive data from a node that is already part of the cluster.</p> <p>Percona XtraDB Cluster enables  via xtrabackup.</p> <p>Xtrabackup SST uses backup locks, which means the Galera provider is not paused at all as with  earlier. The SST method can be configured using the <code>wsrep_sst_method</code> variable.</p> <p>Note</p> <p>If the <code>gcs.sync_donor</code> variable is set to <code>Yes</code> (default is <code>No</code>), the whole cluster will get blocked if the donor is blocked by SST.</p>"},{"location":"state-snapshot-transfer.html#choose-the-sst-donor","title":"Choose the SST Donor","text":"<p>If there are no nodes available that can safely perform incremental state transfer (IST), the cluster defaults to SST.</p> <p>If there are nodes available that can perform IST, the cluster prefers a local node over remote nodes to serve as the donor.</p> <p>If there are no local nodes available that can perform IST, the cluster chooses a remote node to serve as the donor.</p> <p>If there are several local and remote nodes that can perform IST, the cluster chooses the node with the highest <code>seqno</code> to serve as the donor.</p>"},{"location":"state-snapshot-transfer.html#use-percona-xtrabackup","title":"Use Percona Xtrabackup","text":"<p>The default SST method is <code>xtrabackup-v2</code> which uses Percona XtraBackup. This is the least blocking method that leverages backup locks. XtraBackup is run locally on the donor node.</p> <p>The datadir needs to be specified in the server configuration file <code>my.cnf</code>, otherwise the transfer process will fail.</p> <p>Detailed information on this method is provided in Percona XtraBackup SST Configuration documentation.</p>"},{"location":"state-snapshot-transfer.html#sst-for-tables-with-tablespaces-that-are-not-in-the-data-directory","title":"SST for tables with tablespaces that are not in the data directory","text":"<p>For example:</p> <pre><code>CREATE TABLE t1 (c1 INT PRIMARY KEY) DATA DIRECTORY = '/alternative/directory';\n</code></pre>"},{"location":"state-snapshot-transfer.html#sst-using-percona-xtrabackup","title":"SST using Percona XtraBackup","text":"<p>XtraBackup will restore the table to the same location on the joiner node.  If the target directory does not exist, it will be created.  If the target file already exists, an error will be returned, because XtraBackup cannot clear tablespaces not in the data directory.</p>"},{"location":"state-snapshot-transfer.html#other-reading","title":"Other reading","text":"<ul> <li> <p>State Snapshot Transfer Methods for MySQL</p> </li> <li> <p>Xtrabackup SST configuration</p> </li> </ul>"},{"location":"state-snapshot-transfer.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"strict-mode.html","title":"Percona XtraDB Cluster strict mode","text":"<p>The Percona XtraDB Cluster (PXC) Strict Mode is designed to avoid the use of tech preview features and unsupported features in PXC. This mode performs a number of validations at startup and during runtime.</p> <p>Depending on the actual mode you select, upon encountering a failed validation, the server will either throw an error (halting startup or denying the operation), or log a warning and continue running as normal. The following modes are available:</p> <ul> <li> <p><code>DISABLED</code>: Do not perform strict mode validations and run as normal.</p> </li> <li> <p><code>PERMISSIVE</code>: If a validation fails, log a warning and continue running as normal.</p> </li> <li> <p><code>ENFORCING</code>: If a validation fails during startup, halt the server and throw an error. If a validation fails during runtime, deny the operation and throw an error.</p> </li> <li> <p><code>MASTER</code>: The same as <code>ENFORCING</code> except that the validation of explicit table locking is not performed. This mode can be used with clusters in which write operations are isolated to a single node.</p> </li> </ul> <p>By default, PXC Strict Mode is set to <code>ENFORCING</code>, except if the node is acting as a standalone server or the node is bootstrapping, then PXC Strict Mode defaults to <code>DISABLED</code>.</p> <p>It is recommended to keep PXC Strict Mode set to <code>ENFORCING</code>, because in this case whenever Percona XtraDB Cluster encounters a tech preview feature or an unsupported operation, the server will deny it. This will force you to re-evaluate your Percona XtraDB Cluster configuration without risking the consistency of your data.</p> <p>If you are planning to set PXC Strict Mode to anything else than <code>ENFORCING</code>, you should be aware of the limitations and effects that this may have on data integrity. For more information, see Validations.</p> <p>To set the mode, use the <code>pxc_strict_mode</code> variable in the configuration file or the <code>--pxc-strict-mode</code> option during <code>mysqld</code> startup.</p> <p>Note</p> <p>It is better to start the server with the necessary mode (the default <code>ENFORCING</code> is highly recommended). However, you can dynamically change it during runtime. For example, to set PXC Strict Mode to <code>PERMISSIVE</code>, run the following command:</p> <pre><code>mysql&gt; SET GLOBAL pxc_strict_mode=PERMISSIVE;\n</code></pre> <p>Note</p> <p>To further ensure data consistency, it is important to have all nodes in the cluster running with the same configuration, including the value of <code>pxc_strict_mode</code> variable.</p>"},{"location":"strict-mode.html#validations","title":"Validations","text":"<p>PXC Strict Mode validations are designed to ensure optimal operation for common cluster setups that do not require tech preview features and do not rely on operations not supported by Percona XtraDB Cluster.</p> <p>Warning</p> <p>If an unsupported operation is performed on a node with <code>pxc_strict_mode</code> set to <code>DISABLED</code> or <code>PERMISSIVE</code>, it will not be validated on nodes where it is replicated to, even if the destination node has <code>pxc_strict_mode</code> set to <code>ENFORCING</code>.</p> <p>This section describes the purpose and consequences of each validation.</p>"},{"location":"strict-mode.html#group-replication","title":"Group replication","text":"<p>Group replication is a feature of MySQL that provides distributed state machine replication with strong coordination between servers. It is implemented as a plugin which, if activated, may conflict with PXC. Group replication cannot be activated to run alongside PXC. However, you can migrate to PXC from the environment that uses group replication.</p> <p>For the strict mode to work correctly, make sure that the group replication plugin is not active. In fact, if <code>pxc_strict_mode</code> is set to ENFORCING or MASTER, the server will stop with an error:</p> <p>Error message with <code>pxc_strict_mode</code> set to <code>ENFORCING</code> or <code>MASTER</code></p> The error message <pre><code>Group replication cannot be used with PXC in strict mode.\n</code></pre> <p>If <code>pxc_strict_mode</code> is set to <code>DISABLED</code> you can use group replication at your own risk. Setting <code>pxc_strict_mode</code> to <code>PERMISSIVE</code> will result in a warning.</p> <p>Warning message with <code>pxc_strict_mode</code> set to <code>PERMISSIVE</code></p> Warning message <pre><code>Using group replication with PXC is only supported for migration. Please\nmake sure that group replication is turned off once all data is migrated to PXC.\n</code></pre>"},{"location":"strict-mode.html#storage-engine","title":"Storage engine","text":"<p>Percona XtraDB Cluster currently supports replication only for tables that use a transactional storage engine (XtraDB or InnoDB). To ensure data consistency, the following statements should not be allowed for tables that use a non-transactional storage engine (MyISAM, MEMORY, CSV, and others):</p> <ul> <li> <p>Data manipulation statements that perform writing to table (for example, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, etc.)</p> </li> <li> <p>The following administrative statements: <code>CHECK</code>, <code>OPTIMIZE</code>, <code>REPAIR</code>, and <code>ANALYZE</code></p> </li> <li> <p><code>TRUNCATE TABLE</code> and <code>ALTER TABLE</code></p> </li> </ul> <p>Depending on the selected mode, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted.</p> <p><code>PERMISSIVE</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted, but a warning is logged when an undesirable operation is performed on an unsupported table.</p> <p><code>ENFORCING</code> or <code>MASTER</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, any undesirable operation performed on an unsupported table is denied and an error is logged.</p> <p>Note</p> <p>Unsupported tables can be converted to use a supported storage engine.</p>"},{"location":"strict-mode.html#myisam-replication","title":"MyISAM replication","text":"<p>Percona XtraDB Cluster provides support for replication of tables that use the MyISAM storage engine. The use of the MyISAM storage engine in a cluster is not recommended and if you use the storage engine, this is your own risk. Due to the non-transactional nature of MyISAM, the storage engine is not fully-supported in Percona XtraDB Cluster.</p> <p>MyISAM replication is controlled using the <code>wsrep_replicate_myisam</code> variable, which is set to <code>OFF</code> by default. Due to its unreliability, MyISAM replication should not be enabled if you want to ensure data consistency.</p> <p>Depending on the selected mode, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, you can set <code>wsrep_replicate_myisam</code> to any value.</p> <p><code>PERMISSIVE</code></p> <p>At startup, if <code>wsrep_replicate_myisam</code> is set to <code>ON</code>, a warning is logged and startup continues.</p> <p>At runtime, it is permitted to change <code>wsrep_replicate_myisam</code> to any value, but if you set it to <code>ON</code>, a warning is logged.</p> <p><code>ENFORCING</code> or <code>MASTER</code></p> <p>At startup, if <code>wsrep_replicate_myisam</code> is set to <code>ON</code>, an error is logged and startup is aborted.</p> <p>At runtime, any attempt to change <code>wsrep_replicate_myisam</code> to <code>ON</code> fails and an error is logged.</p> <p>Note</p> <p>The <code>wsrep_replicate_myisam</code> variable controls replication for MyISAM tables, and this validation only checks whether it is allowed. Undesirable operations for MyISAM tables are restricted using the Storage engine validation.</p>"},{"location":"strict-mode.html#binary-log-format","title":"Binary log format","text":"<p>Percona XtraDB Cluster supports only the default row-based binary logging format.  In 8.0, setting the binlog_format variable to anything but <code>ROW</code> at startup or runtime is not allowed regardless of the value of the <code>pxc_strict_mode</code> variable.</p>"},{"location":"strict-mode.html#tables-without-primary-keys","title":"Tables without primary keys","text":"<p>Percona XtraDB Cluster cannot properly propagate certain write operations to tables that do not have primary keys defined. Undesirable operations include data manipulation statements that perform writing to table (especially <code>DELETE</code>).</p> <p>Depending on the selected mode, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted.</p> <p><code>PERMISSIVE</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted, but a warning is logged when an undesirable operation is performed on a table without an explicit primary key defined.</p> <p><code>ENFORCING</code> or <code>MASTER</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, any undesirable operation performed on a table without an explicit primary key is denied and an error is logged.</p>"},{"location":"strict-mode.html#log-output","title":"Log output","text":"<p>Percona XtraDB Cluster does not support tables in the MySQL database as the destination for log output. By default, log entries are written to file. This validation checks the value of the log_output variable.</p> <p>Depending on the selected mode, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, you can set <code>log_output</code> to any value.</p> <p><code>PERMISSIVE</code></p> <p>At startup, if <code>log_output</code> is set only to <code>TABLE</code>, a warning is logged and startup continues.</p> <p>At runtime, it is permitted to change <code>log_output</code> to any value, but if you set it only to <code>TABLE</code>, a warning is logged.</p> <p><code>ENFORCING</code> or <code>MASTER</code></p> <p>At startup, if <code>log_output</code> is set only to <code>TABLE</code>, an error is logged and startup is aborted.</p> <p>At runtime, any attempt to change <code>log_output</code> only to <code>TABLE</code> fails and an error is logged.</p>"},{"location":"strict-mode.html#explicit-table-locking","title":"Explicit table locking","text":"<p>Percona XtraDB Cluster provides only the tech-preview-level of support for explicit table locking operations, The following undesirable operations lead to explicit table locking and are covered by this validation:</p> <ul> <li> <p><code>LOCK TABLES</code></p> </li> <li> <p><code>GET_LOCK()</code> and <code>RELEASE_LOCK()</code></p> </li> <li> <p><code>FLUSH TABLES &lt;tables&gt; WITH READ LOCK</code></p> </li> <li> <p>Setting the <code>SERIALIZABLE</code> transaction level</p> </li> </ul> <p>Depending on the selected mode, the following happens:</p> <p><code>DISABLED</code> or <code>MASTER</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted.</p> <p><code>PERMISSIVE</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted, but a warning is logged when an undesirable operation is performed.</p> <p><code>ENFORCING</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, any undesirable operation is denied and an error is logged.</p>"},{"location":"strict-mode.html#auto-increment-lock-mode","title":"Auto-increment lock mode","text":"<p>The lock mode for generating auto-increment values must be interleaved to ensure that each node generates a unique (but non-sequential) identifier.</p> <p>This validation checks the value of the innodb_autoinc_lock_mode variable. By default, the variable is set to <code>1</code> (consecutive lock mode), but it should be set to <code>2</code> (interleaved lock mode).</p> <p>Depending on the strict mode selected, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p><code>PERMISSIVE</code></p> <p>At startup, if <code>innodb_autoinc_lock_mode</code> is not set to <code>2</code>, a warning is logged and startup continues.</p> <p><code>ENFORCING</code> or <code>MASTER</code></p> <p>At startup, if <code>innodb_autoinc_lock_mode</code> is not set to <code>2</code>, an error is logged and startup is aborted.</p> <p>Note</p> <p>This validation is not performed during runtime, because the <code>innodb_autoinc_lock_mode</code> variable cannot be set dynamically.</p>"},{"location":"strict-mode.html#combine-schema-and-data-changes-in-a-single-statement","title":"Combine schema and data changes in a single statement","text":"<p>With strict mode set to <code>ENFORCING</code>, Percona XtraDB Cluster does not support  statements, because they combine both schema and data changes. Note that tables in the SELECT clause should be present on all replication nodes.</p> <p>With strict mode set to <code>PERMISSIVE</code> or <code>DISABLED</code>, CREATE TABLE \u2026 AS SELECT (CTAS) statements are replicated using the  method to ensure consistency. </p> <p>In Percona XtraDB Cluster 5.7, CREATE TABLE \u2026 AS SELECT (CTAS) statements were replicated using DML write-sets when strict mode was set to <code>PERMISSIVE</code> or <code>DISABLED</code>.</p> <p>Important</p> <p>MyISAM tables are created and loaded even if <code>wsrep_replicate_myisam</code> equals to 1.  Percona XtraDB Cluster does not recommend using the MyISAM storage engine. The support for MyISAM may be removed in a future release.</p> <p>See also</p> <p>MySQL Bug System: XID inconsistency on master-slave with CTAS https://bugs.mysql.com/bug.php?id=93948  </p> <p>Depending on the strict mode selected, the following happens:</p> Mode Behavior DISABLED At startup, no validation is performed. At runtime, all operations are permitted. PERMISSIVE At startup, no validation is performed. At runtime, all operations are permitted, but a warning is logged when a CREATE TABLE \u2026 AS SELECT (CTAS) operation is performed. ENFORCING At startup, no validation is performed. At runtime, any CTAS operation is denied and an error is logged. <p>Important</p> <p>Although CREATE TABLE \u2026 AS SELECT (CTAS) operations for temporary tables are permitted even in <code>STRICT</code> mode, temporary tables should not be used as source tables in CREATE TABLE \u2026 AS SELECT (CTAS) operations due to the fact that temporary tables are not present on all nodes.</p> <p>If <code>node-1</code> has a temporary and a non-temporary table with the same name, CREATE TABLE \u2026 AS SELECT (CTAS) on <code>node-1</code> will use temporary and CREATE TABLE \u2026 AS SELECT (CTAS) on <code>node-2</code> will use the non-temporary table resulting in a data level inconsistency.</p>"},{"location":"strict-mode.html#discard-and-import-tablespaces","title":"Discard and import tablespaces","text":"<p><code>DISCARD TABLESPACE</code> and <code>IMPORT TABLESPACE</code> are not replicated using TOI. This can lead to data inconsistency if executed on only one node.</p> <p>Depending on the strict mode selected, the following happens:</p> <p><code>DISABLED</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted.</p> <p><code>PERMISSIVE</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, all operations are permitted, but a warning is logged when you discard or import a tablespace.</p> <p><code>ENFORCING</code></p> <p>At startup, no validation is performed.</p> <p>At runtime, discarding or importing a tablespace is denied and an error is logged.</p>"},{"location":"strict-mode.html#major-version-check","title":"Major version check","text":"<p>This validation checks that the protocol version is the same as the server major version. This validation protects the cluster against writes attempted on already upgraded nodes.</p> Expected output <pre><code>ERROR 1105 (HY000): Percona-XtraDB-Cluster prohibits use of multiple major versions while accepting write workload with pxc_strict_mode = ENFORCING or MASTER\n</code></pre>"},{"location":"strict-mode.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"tarball.html","title":"Install Percona XtraDB Cluster from Binary Tarball","text":"<p>Percona provides generic tarballs with all required files and binaries for manual installation.</p> <p>You can download the appropriate tarball package from https://www.percona.com/downloads/Percona-XtraDB-Cluster-80</p>"},{"location":"tarball.html#version-updates","title":"Version updates","text":"<p>Starting with Percona XtraDB Cluster 8.0.20-11, the Linux - Generic section lists only full or minimal tar files. Each tarball file replaces the multiple tar file listing used in earlier versions and supports all distributions.</p> <p>Important</p> <p>Starting with Percona XtraDB Cluster 8.0.21, Percona does not provide a tarball for RHEL 6/CentOS 6 (glibc2.12).</p> <p>The version number in the tarball name must be substituted with the appropriate version number for your system. To indicate that such a substitution is needed in statements, we use <code>&lt;version-number&gt;</code>.</p> Name Type Description Percona-XtraDB-Cluster_-Linux.x86_64.glibc2.17.tar.gz Full Contains binary files, libraries, test files, and debug symbols Percona-XtraDB-Cluster_-Linux.x86_64.glibc2.17.minimal.tar.gz Minimal Contains binary files and libraries but does not include test files, or debug symbols <p>For installations before Percona XtraDB Cluster 8.0.20-11, the Linux - Generic section contains multiple tarballs based on the operating system names:</p> <pre><code>Percona-XtraDB-Cluster_8.0.18-9.3_Linux.x86_64.bionic.tar.gz\nPercona-XtraDB-Cluster_8.0.18-9.3_Linux.x86_64.buster.tar.gz\n...\n</code></pre> <p>For example, you can use <code>curl</code> as follows:</p> <pre><code>$ curl -O https://downloads.percona.com/downloads/Percona-XtraDB-Cluster-LATEST/Percona-XtraDB-Cluster-8.0.27/binary/tarball/Percona-XtraDB-Cluster_8.0.27-18.1_Linux.x86_64.glibc2.17-minimal.tar.gz\n</code></pre> <p>Check your system to make sure the packages that the PXC version requires are installed.</p>"},{"location":"tarball.html#for-debian-or-ubuntu","title":"For Debian or Ubuntu:","text":"<pre><code>$ sudo apt-get install -y \\\nsocat libdbd-mysql-perl \\\nlibaio1 libc6 libcurl3 libev4 libgcc1 libgcrypt20 \\\nlibgpg-error0 libssl1.1 libstdc++6 zlib1g libatomic1\n</code></pre>"},{"location":"tarball.html#for-red-hat-enterprise-linux-or-centos","title":"For Red Hat Enterprise Linux or CentOS:","text":"<pre><code>$ sudo yum install -y openssl socat  \\\nprocps-ng chkconfig procps-ng coreutils shadow-utils \\\n</code></pre>"},{"location":"tarball.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"telemetry.html","title":"Telemetry on Percona XtraDB Cluster","text":"<p>Percona telemetry fills in the gaps in our understanding of how you use Percona XtraDB Cluster to improve our products. Participation in the anonymous program is optional. You can opt-out if you prefer to not share this information.</p>"},{"location":"telemetry.html#what-information-is-collected","title":"What information is collected","text":"<p>At this time, telemetry is added only to the Percona packages and Docker images. Percona XtraDB Cluster collects only information about the installation environment. Future releases may add additional metrics.</p> <p>Be assured that access to this raw data is rigorously controlled. Percona does not collect personal data. All data is anonymous and cannot be traced to a specific user. To learn more about our privacy practices, read our Percona Privacy statement.</p> <p>An example of the data collected is the following:</p> <pre><code>[{\"id\" : \"c416c3ee-48cd-471c-9733-37c2886f8231\",\n\"product_family\" : \"PRODUCT_FAMILY_PXC\",\n\"instanceId\" : \"6aef422e-56a7-4530-af9d-94cc02198343\",\n\"createTime\" : \"2023-10-16T10:46:23Z\",\n\"metrics\":\n[{\"key\" : \"deployment\",\"value\" : \"PACKAGE\"},\n{\"key\" : \"pillar_version\",\"value\" : \"8.0.34-26\"},\n{\"key\" : \"OS\",\"value\" : \"Oracle Linux Server 8.8\"},\n{\"key\" : \"hardware_arch\",\"value\" : \"x86_64 x86_64\"}]}]\n</code></pre>"},{"location":"telemetry.html#disable-telemetry","title":"Disable telemetry","text":"<p>Starting with Percona XtraDB Cluster 8.0.34-26-1, telemetry is enabled by default. If you decide not to send usage data to Percona, you can set the <code>PERCONA_TELEMETRY_DISABLE=1</code> environment variable for either the root user or in the operating system prior to the installation process.</p> Debian-derived distributionRed Hat-derived distributionDOCKER <p>Add the environment variable before the install process.</p> <pre><code>$ sudo PERCONA_TELEMETRY_DISABLE=1 apt install percona-xtradb-cluster\n</code></pre> <p>Add the environment variable before the install process.</p> <pre><code>$ sudo PERCONA_TELEMETRY_DISABLE=1 yum install percona-xtradb-cluster\n</code></pre> <p>Add the environment variable when running a command in a new container.</p> <pre><code>$ docker run -d -e MYSQL_ROOT_PASSWORD=test1234# -e PERCONA_TELEMETRY_DISABLE=1 -e CLUSTER_NAME=pxc-cluster1 --name=pxc-node1 percona/percona-xtradb-cluster:8.0\n</code></pre>"},{"location":"telemetry.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"threading-model.html","title":"Percona XtraDB Cluster threading model","text":"<p>Percona XtraDB Cluster creates a set of threads to service its operations, which are not related to existing MySQL threads. There are three main groups of threads:</p>"},{"location":"threading-model.html#applier-threads","title":"Applier threads","text":"<p>Applier threads apply write-sets that the node receives from other nodes. Write messages are directed through <code>gcv_recv_thread</code>.</p> <p>The number of applier threads is controlled using the <code>wsrep_slave_threads</code> variable or the <code>wsrep_applier_threads</code> variable. The <code>wsrep_slave_threads</code> variable was deprecated in the Percona XtraDB Cluster 8.0.26-16 release. The default value is <code>1</code>, which means at least one wsrep applier thread exists to process the request.</p> <p>Applier threads wait for an event, and once it gets the event, it applies it using normal replica apply routine path, and relays the log info apply path with wsrep-customization. These threads are similar to replica worker threads (but not exactly the same).</p> <p>Coordination is achieved using Apply and Commit Monitor. A transaction passes through two important states: <code>APPLY</code> and <code>COMMIT</code>. Every transaction registers itself with an apply monitor, where its apply order is defined. So all transactions with apply order sequence number (<code>seqno</code>) of less than this transaction\u2019s sequence number, are applied before applying this transaction. The same is done for commit as well (<code>last_left &gt;= trx_.depends_seqno()</code>).</p>"},{"location":"threading-model.html#rollback-thread","title":"Rollback thread","text":"<p>There is only one rollback thread to perform rollbacks in case of conflicts.</p> <ul> <li> <p>Transactions executed in parallel can conflict and may need to roll back.</p> </li> <li> <p>Applier transactions always take priority over local transactions.   This is natural, as applier transactions have been accepted by the cluster,   and some of the nodes may have already applied them. Local conflicting   transactions still have a window to rollback.</p> </li> </ul> <p>All the transactions that need to be rolled back are added to the rollback queue, and the rollback thread is notified. The rollback thread then iterates over the queue and performs rollback operations.</p> <p>If a transaction is active on a node, and a node receives a transaction write-set from the cluster group that conflicts with the local active transaction, then such local transactions are always treated as a victim transaction to roll back.</p> <p>Transactions can be in a commit state or an execution stage when the conflict arises. Local transactions in the execution stage are forcibly killed so that the waiting applier transaction is allowed to proceed. Local transactions in the commit stage fail with a certification error.</p>"},{"location":"threading-model.html#other-threads","title":"Other threads","text":""},{"location":"threading-model.html#service-thread","title":"Service thread","text":"<p>This thread is created during boot-up and used to perform auxiliary services. It has two main functions:</p> <ul> <li> <p>It releases the GCache buffer after the cached write-set is purged up to the said level.</p> </li> <li> <p>It notifies the cluster group that the respective node has committed a transaction up to this level.   Each node maintains some basic status info about other nodes in the cluster.   On receiving the message, the information is updated in this local metadata.</p> </li> </ul>"},{"location":"threading-model.html#receiving-thread","title":"Receiving thread","text":"<p>The <code>gcs_recv_thread</code> thread is the first one to see all the messages received in a group.</p> <p>It will try to assign actions against each message it receives. It adds these messages to a central FIFO queue, which are then processed by the Applier threads. Messages can include different operations like state change, configuration update, flow-control, and so on.</p> <p>One important action is processing a write-set, which actually is applying transactions to database objects.</p>"},{"location":"threading-model.html#gcomm-connection-thread","title":"Gcomm connection thread","text":"<p>The gcomm connection thread <code>GCommConn::run_fn</code> is used to co-ordinate the low-level group communication activity. Think of it as a black box meant for communication.</p>"},{"location":"threading-model.html#action-based-threads","title":"Action-based threads","text":"<p>Besides the above, some threads are created on a needed basis. SST creates threads for donor and joiner (which eventually forks out a child process to host the needed SST script), IST creates receiver and async sender threads, PageStore creates a background thread for removing the files that were created.</p> <p>If the checksum is enabled and the replicated write-set is big enough, the checksum is done as part of a separate thread.</p>"},{"location":"threading-model.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"trademark-policy.html","title":"Trademark policy","text":"<p>This Trademark Policy is to ensure that users of Percona-branded products or services know that what they receive has really been developed, approved, tested and maintained by Percona. Trademarks help to prevent confusion in the marketplace, by distinguishing one company\u2019s or person\u2019s products and services from another\u2019s.</p> <p>Percona owns a number of marks, including but not limited to Percona, XtraDB, Percona XtraDB, XtraBackup, Percona XtraBackup, Percona Server, and Percona Live, plus the distinctive visual icons and logos associated with these marks. Both the unregistered and registered marks of Percona are protected.</p> <p>Use of any Percona trademark in the name, URL, or other identifying characteristic of any product, service, website, or other use is not permitted without Percona\u2019s written permission with the following three limited exceptions.</p> <p>First, you may use the appropriate Percona mark when making a nominative fair use reference to a bona fide Percona product.</p> <p>Second, when Percona has released a product under a version of the GNU General Public License (\u201cGPL\u201d), you may use the appropriate Percona mark when distributing a verbatim copy of that product in accordance with the terms and conditions of the GPL.</p> <p>Third, you may use the appropriate Percona mark to refer to a distribution of GPL-released  Percona software that has been modified with minor changes for the sole purpose of allowing the software to operate on an operating system or hardware platform for which Percona has not yet released the software, provided that those third party changes do not affect the behavior, functionality, features, design or performance of the software. Users who acquire this Percona-branded software receive substantially exact implementations of the Percona software.</p> <p>Percona reserves the right to revoke this authorization at any time in its sole discretion.  For example, if Percona believes that your modification is beyond the scope of the limited license granted in this Policy or that your use of the Percona mark is detrimental to Percona, Percona will revoke this authorization.  Upon revocation, you must immediately cease using the applicable Percona mark.  If you do not immediately cease using the Percona mark upon revocation, Percona may take action to protect its rights and interests in the Percona mark.  Percona does not grant any license to use any Percona mark for any other modified versions of Percona software; such use will require our prior written permission.</p> <p>Neither trademark law nor any of the exceptions set forth in this Trademark Policy permit you to truncate, modify or otherwise use any Percona mark as part of your own brand.  For example, if XYZ creates a modified version of the Percona Server, XYZ may not brand that modification as \u201cXYZ Percona Server\u201d or \u201cPercona XYZ Server\u201d, even if that modification otherwise complies with the third exception noted above.</p> <p>In all cases, you must comply with applicable law, the underlying license, and this Trademark Policy, as amended from time to time.  For instance, any mention of Percona trademarks should include the full trademarked name, with proper spelling and capitalization, along with attribution of ownership to Percona Inc.  For example, the full proper name for XtraBackup is Percona XtraBackup. However, it is acceptable to omit the word \u201cPercona\u201d for brevity on the second and subsequent uses, where such omission does not cause confusion.</p> <p>In the event of doubt as to any of the conditions or exceptions outlined in this Trademark Policy, please contact trademarks@percona.com for assistance and we will do our very best to be helpful.</p>"},{"location":"trademark-policy.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"upgrade-from-backup.html","title":"Restore a 5.7 backup to an 8.0 cluster","text":"<p>Use Percona XtraBackup to back up the source server data and restore the data to a target server, and then upgrade the server to a different version of Percona XtraDB Cluster.</p> <p>Downgrading is not supported.</p>"},{"location":"upgrade-from-backup.html#restore-a-database-with-a-different-server-version","title":"Restore a database with a different server version","text":"<p>Review Upgrade Percona XtraDB cluster.</p> <p>Upgrade the nodes one at a time. The primary node should be the last node to be upgraded. The following steps are required on each node.</p> <ol> <li> <p>Back up the data on the source server.</p> </li> <li> <p>Install the same database version as the source server on the target server.</p> </li> <li> <p>Restore with a <code>copy-back</code> operation on the target server.</p> </li> <li> <p>Start the database server on the target server.</p> </li> <li> <p>Do a slow shutdown of the database server with the <code>SET GLOBAL innodb_fast_shutdown=0</code> statement. This shutdown type flushes InnoDB operations before completing and may take longer.</p> </li> <li> <p>Install the new database server version on the target server.</p> </li> <li> <p>Start the new database server version on the restored data directory.</p> </li> <li> <p>Perform any other upgrade steps as necessary.</p> </li> </ol> <p>To ensure the upgrade was successful, check the data.</p>"},{"location":"upgrade-from-backup.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"upgrade-guide.html","title":"Upgrade Percona XtraDB Cluster","text":"<p>The following documents contain details about relevant changes in the 8.0 series of MySQL and Percona Server for MySQL. Make sure you deal with any incompatible features and variables mentioned in these documents when upgrading to Percona XtraDB Cluster 8.0.</p> <ul> <li> <p>Upgrading MySQL</p> </li> <li> <p>Upgrading from MySQL 5.7 to 8.0</p> </li> </ul>"},{"location":"upgrade-guide.html#important-changes-in-percona-xtradb-cluster-80","title":"Important changes in Percona XtraDB Cluster 8.0","text":"<ul> <li>Upgrade Percona XtraDB Cluster</li> <li>Important changes in Percona XtraDB Cluster 8.0<ul> <li>Traffic encryption is enabled by default</li> <li>Not recommended to mix PXC 5.7 nodes with PXC 8.0 nodes</li> <li>PXC strict mode is enabled by default</li> <li>The configuration file layout has changed in PXC 8.0</li> <li>caching_sha2_password is the default authentication plugin</li> <li>mysql_upgrade is part of SST</li> </ul> </li> <li>Major upgrade scenarios<ul> <li>Scenario: No active parallel workload or with read-only workload</li> <li>Scenario: Upgrade from PXC 5.6 to PXC 8.0</li> </ul> </li> <li>Minor upgrade</li> </ul>"},{"location":"upgrade-guide.html#traffic-encryption-is-enabled-by-default","title":"Traffic encryption is enabled by default","text":"<p>The <code>pxc_encrypt_cluster_traffic</code> variable, which enables traffic encryption, is set to <code>ON</code> by default in Percona XtraDB Cluster 8.0.</p> <p>Unless you configure a node accordingly (each node in your cluster must use the same SSL certificates) or try to join a cluster running PXC 5.7 which unencrypted cluster traffic, the node will not be able to join resulting in an error.</p> The error message <pre><code>... [ERROR] ... [Galera] handshake with remote endpoint ...\nThis error is often caused by SSL issues. ...\n</code></pre> <p>See also</p> <p>sections Encrypting PXC Traffic, Configuring Nodes for Write-Set Replication</p>"},{"location":"upgrade-guide.html#not-recommended-to-mix-pxc-57-nodes-with-pxc-80-nodes","title":"Not recommended to mix PXC 5.7 nodes with PXC 8.0 nodes","text":"<p>Shut down the cluster and upgrade each node to PXC 8.0. It is important that you make backups before attempting an upgrade.</p>"},{"location":"upgrade-guide.html#pxc-strict-mode-is-enabled-by-default","title":"PXC strict mode is enabled by default","text":"<p>Percona XtraDB Cluster in 8.0 runs with PXC Strict Mode enabled by default. This will deny any unsupported operations and may halt the server if a strict mode validation fails. It is recommended to first start the node with the <code>pxc_strict_mode</code> variable set to <code>PERMISSIVE</code> in the MySQL configuration file.</p> <p>All configuration settings are stored in the default MySQL configuration file:</p> <ul> <li> <p>Path on Debian and Ubuntu: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p> </li> <li> <p>Path on Red Hat and CentOS: <code>/etc/my.cnf</code></p> </li> </ul> <p>After you check the log for any tech preview features or unsupported features and you have fixed any of the encountered incompatibilities, set the variable back to <code>ENFORCING</code> at run time:</p> <pre><code>mysql&gt; SET pxc_strict_mode=ENFORCING;\n</code></pre> <p>Restarting the node with the updated configuration file also sets variable to <code>ENFORCING</code>.</p>"},{"location":"upgrade-guide.html#the-configuration-file-layout-has-changed-in-pxc-80","title":"The configuration file layout has changed in PXC 8.0","text":"<p>All configuration settings are stored in the default MySQL configuration file:</p> <ul> <li> <p>Path on Debian and Ubuntu: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p> </li> <li> <p>Path on Red Hat and CentOS: /etc/my.cnf</p> </li> </ul> <p>Before you start the upgrade, move your custom settings from <code>/etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf</code> (on Debian and Ubuntu) or from <code>/etc/percona-xtradb-cluster.conf.d/wsrep.cnf</code> (on Red Hat and CentOS) to the new location accordingly.</p> <p>Note</p> <p>If you have moved your my.cnf file to a different location and added a symlink to <code>/etc/my.cnf</code>, the RPM package manager, when upgrading, can delete the symlink and put a default my.cnf file in /etc/.</p>"},{"location":"upgrade-guide.html#caching_sha2_password-is-the-default-authentication-plugin","title":"caching_sha2_password is the default authentication plugin","text":"<p>In Percona XtraDB Cluster 8.0, the default authentication plugin is <code>caching_sha2_password</code>. The ProxySQL option \u2013syncusers will not work if the Percona XtraDB Cluster user is created using <code>caching_sha2_password</code>. Use the <code>mysql_native_password</code> authentication plugin in these cases.</p> <p>Be sure you are running on the latest 5.7 version before you upgrade to 8.0.</p>"},{"location":"upgrade-guide.html#mysql_upgrade-is-part-of-sst","title":"mysql_upgrade is part of SST","text":"<p>mysql_upgrade is now run automatically as part of SST. You do not have to run it manually when upgrading your system from an older version.</p>"},{"location":"upgrade-guide.html#major-upgrade-scenarios","title":"Major upgrade scenarios","text":"<p>Upgrading PXC from 5.7 to 8.0 may have slightly different strategies depending on the configuration and workload on your PXC cluster.</p> <p>Note that the new default value of <code>pxc-encrypt-cluster-traffic</code> (set to ON versus OFF in PXC 5.7) requires additional care. You cannot join a 5.7 node to a PXC 8.0 cluster unless the node has traffic encryption enabled as the cluster may not have some nodes with traffic encryption enabled and some nodes with traffic encryption disabled. For more information, see Traffic encryption is enabled by default.</p>"},{"location":"upgrade-guide.html#scenario-no-active-parallel-workload-or-with-read-only-workload","title":"Scenario: No active parallel workload or with read-only workload","text":"<p>If there is no active parallel workload or the cluster has read-only workload while upgrading the nodes, complete the following procedure for each node in the cluster:</p> <ol> <li> <p>Shutdown one of the node 5.7 cluster nodes.</p> </li> <li> <p>Remove 5.7 PXC packages without removing the data-directory.</p> </li> <li> <p>Install PXC 8.0 packages.</p> </li> <li> <p>Restart the mysqld service.</p> </li> </ol> <p>Important</p> <p>Before upgrading, make sure your application can work with a reduced cluster size. If the cluster operates with an even number of nodes, the cluster may have split-brain.</p> <p>This upgrade flow auto-detects the presence of the 5.7 data directory and trigger the upgrade as part of the node bootup process. The data directory is upgraded to be compatible with PXC 8.0. Then the node joins the cluster and enters synced state. The 3-node cluster is restored with 2 nodes running PXC 5.7 and 1 node running PXC 8.0.</p> <p>Note</p> <p>Since SST is not involved, SST based auto-upgrade flow is not started.</p> <p>PXC 8.0 uses Galera 4 while PXC 5.7 uses Galera-3. The cluster will continue to use the protocol version 3 used in Galera 3 effectively limiting some of the functionality. With all nodes upgraded to version 8.0, protocol version 4 is applied.</p> <p>Tip</p> <p>The protocol version is stored in the <code>protocol_version</code> column of the <code>wsrep_cluster</code> table.</p> <pre><code>mysql&gt; USE mysql;\n</code></pre> <pre><code>mysql&gt; SELECT protocol_version from wsrep_cluster;\n</code></pre> <p>The example of the output is the following:</p> <pre><code>+------------------+\n| protocol_version |\n+------------------+\n|                4 |\n+------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>As soon as the last 5.7 node shuts down, the configuration of the remaining two nodes is updated to use protocol version 4. A new upgraded node will then join using protocol version 4 and the whole cluster will maintain protocol version 4 enabling the support for additional Galera 4 facilities.</p> <p>It may take longer to join the last upgraded node since it will invite IST to obtain the configuration changes.</p> <p>Note</p> <p>Starting from Galera 4, the configuration changes are cached to <code>gcache</code> and the configuration changes are donated as part of IST or SST to help build the certification queue on the JOINING node. As other nodes (say n2 and n3), already using protocol version 4, donate the configuration changes when the JOINER node is booted.</p> <p>The situation was different for the previous and penultimate nodes since the donation of the configuration changes is not supported by protocol version 3 that they used.</p> <p>With IST involved on joining the last node, the smart IST flow is triggered to take care of the upgrade even before MySQL starts to look at the data directory.</p> <p>Important</p> <p>It is not recommended to restart the last node without upgrading it.</p>"},{"location":"upgrade-guide.html#scenario-upgrade-from-pxc-56-to-pxc-80","title":"Scenario: Upgrade from PXC 5.6 to PXC 8.0","text":"<p>First, upgrade PXC from 5.6 to the latest version of PXC 5.7. Then proceed with the upgrade using the procedure described in Scenario: No active parallel workload or with read-only workload.</p>"},{"location":"upgrade-guide.html#minor-upgrade","title":"Minor upgrade","text":"<p>To upgrade the cluster, follow these steps for each node:</p> <ol> <li> <p>Make sure that all nodes are synchronized.</p> </li> <li> <p>Stop the <code>mysql</code> service:</p> <pre><code>$ sudo service mysql stop\n</code></pre> </li> <li> <p>Upgrade Percona XtraDB Cluster and Percona XtraBackup packages. For more information, see Installing Percona XtraDB Cluster.</p> </li> <li> <p>Back up <code>grastate.dat</code>, so that you can restore it if it is corrupted or zeroed out due to network issue.</p> </li> <li> <p>Now, start the cluster node with 8.0 packages installed, PXC will upgrade the data directory as needed - either as part of the startup process or a state transfer (IST/SST).</p> <p>In most cases, starting the <code>mysql</code> service should run the node with your previous configuration. For more information, see Adding Nodes to Cluster.</p> <pre><code>$ sudo service mysql start\n</code></pre> <p>Note</p> <p>On CentOS, the /etc/my.cnf configuration file is renamed to <code>my.cnf.rpmsave</code>. Make sure to rename it back before joining the upgraded node back to the cluster.</p> <p>PXC Strict Mode is enabled by default, which may result in denying any unsupported operations and may halt the server. For more information, see pxc-strict-mode is enabled by default.</p> <p><code>pxc-encrypt-cluster-traffic</code> is enabled by default. You need to configure each node accordingly and avoid joining a cluster with unencrypted cluster traffic. For more information, see Traffic encryption is enabled by default.</p> </li> <li> <p>Repeat this procedure for the next node in the cluster until you upgrade all nodes.</p> </li> </ol>"},{"location":"upgrade-guide.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"verify-replication.html","title":"Verify replication","text":"<p>Use the following procedure to verify replication by creating a new database on the second node, creating a table for that database on the third node, and adding some records to the table on the first node.</p> <ol> <li> <p>Create a new database on the second node:</p> <pre><code>mysql@pxc2&gt; CREATE DATABASE percona;\n</code></pre> <p>The following output confirms that a new database has been created:</p> Expected output <pre><code>Query OK, 1 row affected (0.01 sec)\n</code></pre> </li> <li> <p>Switch to a newly created database:</p> <pre><code>mysql@pxc3&gt; USE percona;\n</code></pre> <p>The following output confirms that a database has been changed:</p> Expected output <pre><code>Database changed\n</code></pre> </li> <li> <p>Create a table on the third node:</p> <pre><code>mysql@pxc3&gt; CREATE TABLE example (node_id INT PRIMARY KEY, node_name VARCHAR(30));\n</code></pre> <p>The following output confirms that a table has been created:</p> Expected output <pre><code>Query OK, 0 rows affected (0.05 sec)\n</code></pre> </li> <li> <p>Insert records on the first node:</p> <pre><code>mysql@pxc1&gt; INSERT INTO percona.example VALUES (1, 'percona1');\n</code></pre> <p>The following output confirms that the records have been inserted:</p> Expected output <pre><code>Query OK, 1 row affected (0.02 sec)\n</code></pre> </li> <li> <p>Retrieve rows from that table on the second node:</p> <pre><code>mysql@pxc2&gt; SELECT * FROM percona.example;\n</code></pre> <p>The following output confirms that all the rows have been retrieved:</p> Expected output <pre><code>+---------+-----------+\n| node_id | node_name |\n+---------+-----------+\n|       1 | percona1  |\n+---------+-----------+\n1 row in set (0.00 sec)\n</code></pre> </li> </ol>"},{"location":"verify-replication.html#next-steps","title":"Next steps","text":"<ul> <li> <p>Consider installing ProxySQL on client nodes for efficient workload management across the cluster without any changes to the applications that generate queries. This is the recommended high-availability solution for Percona XtraDB Cluster. For more information, see Load balancing with ProxySQL.</p> </li> <li> <p>Percona Monitoring and Management is the best choice for managing and monitoring Percona XtraDB Cluster performance. It provides visibility for the cluster and enables efficient troubleshooting.</p> </li> </ul>"},{"location":"verify-replication.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"virtual-sandbox.html","title":"Set up a testing environment with ProxySQL","text":"<p>This section describes how to set up Percona XtraDB Cluster in a virtualized testing environment based on ProxySQL. To test the cluster, we will use the sysbench benchmark tool.</p> <p>It is assumed that each PXC node is installed on Amazon EC2 micro instances running CentOS 7.  However, the information in this section should apply if you used another virtualization technology (for example, VirtualBox) with any Linux distribution.</p> <p>Each of the tree Percona XtraDB Cluster nodes is installed on a separate virtual machine. One more virtual machine has ProxySQL, which redirects requests to the nodes.</p> <p>Tip</p> <p>Running ProxySQL on an application server, instead of having it as a dedicated entity, removes the unnecessary extra network roundtrip, because the load balancing layer in Percona XtraDB Cluster scales well with application servers.</p> <ol> <li> <p>Install Percona XtraDB Cluster on three cluster nodes, as described in Configuring Percona XtraDB Cluster on CentOS.</p> </li> <li> <p>On the client node, install ProxySQL and <code>sysbench</code>:</p> <pre><code>$ yum -y install proxysql2 sysbench\n</code></pre> </li> <li> <p>When all cluster nodes are started, configure ProxySQL using the admin interface.</p> <p>Tip</p> <p>To connect to the ProxySQL admin interface, you need a <code>mysql</code> client. You can either connect to the admin interface from Percona XtraDB Cluster nodes that already have the <code>mysql</code> client installed (Node 1, Node 2, Node 3) or install the client on Node 4 and connect locally.</p> <p>To connect to the admin interface, use the credentials, host name and port specified in the global variables.</p> <p>Warning</p> <p>Do not use default credentials in production!</p> <p>The following example shows how to connect to the ProxySQL admin interface with default credentials (assuming that ProxySQL IP is 192.168.70.74):</p> <pre><code>root@proxysql:~# mysql -u admin -padmin -h 127.0.0.1 -P 6032\n</code></pre> Expected output <pre><code>Welcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2\nServer version: 5.5.30 (ProxySQL Admin Module)\n\nCopyright (c) 2009-2020 Percona LLC and/or its affiliates\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>To see the ProxySQL databases and tables use the <code>SHOW DATABASES</code> and <code>SHOW TABLES</code> commands:</p> <pre><code>mysql&gt; SHOW DATABASES;\n</code></pre> <p>The following output shows the list of the ProxySQL databases:</p> Expected output <pre><code>+-----+---------------+-------------------------------------+\n| seq | name          | file                                |\n+-----+---------------+-------------------------------------+\n| 0   | main          |                                     |\n| 2   | disk          | /var/lib/proxysql/proxysql.db       |\n| 3   | stats         |                                     |\n| 4   | monitor       |                                     |\n| 5   | stats_monitor | /var/lib/proxysql/proxysql_stats.db |\n+-----+---------------+-------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <pre><code>mysql&gt; SHOW TABLES;\n</code></pre> <p>The following output shows the list of tables:</p> Expected output <pre><code>+----------------------------------------------------+\n| tables                                             |\n+----------------------------------------------------+\n| global_variables                                   |\n| mysql_aws_aurora_hostgroups                        |\n| mysql_collations                                   |\n| mysql_firewall_whitelist_rules                     |\n| mysql_firewall_whitelist_sqli_fingerprints         |\n| mysql_firewall_whitelist_users                     |\n| mysql_galera_hostgroups                            |\n| mysql_group_replication_hostgroups                 |\n| mysql_query_rules                                  |\n| mysql_query_rules_fast_routing                     |\n| mysql_replication_hostgroups                       |\n| mysql_servers                                      |\n| mysql_users                                        |\n| proxysql_servers                                   |\n| restapi_routes                                     |\n| runtime_checksums_values                           |\n| runtime_global_variables                           |\n| runtime_mysql_aws_aurora_hostgroups                |\n| runtime_mysql_firewall_whitelist_rules             |\n| runtime_mysql_firewall_whitelist_sqli_fingerprints |\n| runtime_mysql_firewall_whitelist_users             |\n| runtime_mysql_galera_hostgroups                    |\n| runtime_mysql_group_replication_hostgroups         |\n| runtime_mysql_query_rules                          |\n| runtime_mysql_query_rules_fast_routing             |\n| runtime_mysql_replication_hostgroups               |\n| runtime_mysql_servers                              |\n| runtime_mysql_users                                |\n| runtime_proxysql_servers                           |\n| runtime_restapi_routes                             |\n| runtime_scheduler                                  |\n| scheduler                                          |\n+----------------------------------------------------+\n32 rows in set (0.00 sec)\n</code></pre> <p>For more information about admin databases and tables, see Admin Tables</p> <p>Note</p> <p>ProxySQL has 3 areas where the configuration can reside:</p> <ul> <li> <p>MEMORY (your current working place)</p> </li> <li> <p>RUNTIME (the production settings)</p> </li> <li> <p>DISK (durable configuration, saved inside an SQLITE database)</p> </li> </ul> <p>When you change a parameter, you change it in MEMORY area. That is done by design to allow you to test the changes before pushing to production (RUNTIME), or saving them to disk.</p> </li> </ol>"},{"location":"virtual-sandbox.html#adding-cluster-nodes-to-proxysql","title":"Adding cluster nodes to ProxySQL","text":"<p>To configure the backend Percona XtraDB Cluster nodes in ProxySQL, insert corresponding records into the mysql_servers table.</p> <pre><code>INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight) VALUES ('192.168.70.71',10,3306,1000);\nINSERT INTO mysql_servers (hostname,hostgroup_id,port,weight) VALUES ('192.168.70.72',10,3306,1000);\nINSERT INTO mysql_servers (hostname,hostgroup_id,port,weight) VALUES ('192.168.70.73',10,3306,1000);\n</code></pre> <p>ProxySQL v2.0 supports PXC natlively. It uses the concept of hostgroups (see the value of hostgroup_id in the mysql_servers table) to group cluster nodes to balance the load in a cluster by routing different types of traffic to different groups.</p> <p>This information is stored in the [runtime_]mysql_galera_hostgroups table.</p> <p>Columns of the <code>[runtime_]mysql_galera_hostgroups</code> table</p> Column name Description writer_hostgroup: The ID of the hostgroup that refers to the WRITER node backup_writer_hostgroup The ID of the hostgroup that contains candidate WRITER servers reader_hostgroup The ID of the hostgroup that contains candidate READER servers offline_hostgroup The ID of the hostgroup that will eventually contain the WRITER node that will be put OFFLINE active <code>1</code> (Yes) to inidicate that this configuration should be used; <code>0</code>  (No) - otherwise max_writers The maximum number of WRITER nodes that must operate simultaneously. For most cases, a reasonable value is <code>1</code>. The value in this column may not exceed the total number of nodes. writer_is_also_reader <code>1</code> (Yes) to keep the given node in both <code>reader_hostgroup</code> and <code>writer_hostgroup</code>. <code>0</code> (No) to remove the given node from <code>reader_hostgroup</code> if it already belongs to <code>writer_hostgroup</code>. max_transactions_behind As soon as the value of :variable:<code>wsrep_local_recv_queue</code> exceeds the number stored in this column the given node is set to <code>OFFLINE</code>. Set the value carefully based on the behaviour of the node. comment Helpful extra information about the given node <p>Make sure that the variable mysql-server_version refers to the correct version. For Percona XtraDB Cluster 8.0, set it to 8.0 accordingly:</p> <pre><code>mysql&gt; UPDATE GLOBAL_VARIABLES\nSET variable_value='8.0'\nWHERE variable_name='mysql-server_version';\n\nmysql&gt; LOAD MYSQL SERVERS TO RUNTIME;\nmysql&gt; SAVE MYSQL SERVERS TO DISK;\n</code></pre> <p>See also</p> <p>Percona Blogpost: ProxySQL Native Support for Percona XtraDB Cluster (PXC) https://www.percona.com/blog/2019/02/20/proxysql-native-support-for-percona-xtradb-cluster-pxc/</p> <p>Given the nodes from the mysql_servers table, you may set up the hostgroups as follows:</p> <pre><code>mysql&gt; INSERT INTO mysql_galera_hostgroups (\nwriter_hostgroup, backup_writer_hostgroup, reader_hostgroup,\noffline_hostgroup, active, max_writers, writer_is_also_reader,\nmax_transactions_behind)\nVALUES (10, 12, 11, 13, 1, 1, 2, 100);\n</code></pre> <p>This command configures ProxySQL as follows:</p> <p>WRITER hostgroup</p> <pre><code>hostgroup `10`\n</code></pre> <p>READER hostgroup</p> <pre><code>hostgroup `11`\n</code></pre> <p>BACKUP WRITER hostgroup</p> <pre><code>hostgroup `12`\n</code></pre> <p>OFFLINE hostgroup</p> <pre><code>hostgroup `13`\n</code></pre> <p>Set up ProxySQL query rules for read/write split using the mysql_query_rules table:</p> <pre><code>mysql&gt; INSERT INTO mysql_query_rules (\nusername,destination_hostgroup,active,match_digest,apply)\nVALUES ('appuser',10,1,'^SELECT.*FOR UPDATE',1);\n\nmysql&gt; INSERT INTO mysql_query_rules (\nusername,destination_hostgroup,active,match_digest,apply)\nVALUES ('appuser',11,1,'^SELECT ',1);\n\nmysql&gt; LOAD MYSQL QUERY RULES TO RUNTIME;\nmysql&gt; SAVE MYSQL QUERY RULES TO DISK;\n\nmysql&gt; select hostgroup_id,hostname,port,status,weight from runtime_mysql_servers;\n</code></pre> Expected output <pre><code>+--------------+----------------+------+--------+--------+\n| hostgroup_id | hostname       | port | status | weight |\n+--------------+----------------+------+--------+--------+\n| 10           | 192.168.70.73 | 3306  | ONLINE | 1000   |\n| 11           | 192.168.70.72 | 3306  | ONLINE | 1000   |\n| 11           | 192.168.70.71 | 3306  | ONLINE | 1000   |\n| 12           | 192.168.70.72 | 3306  | ONLINE | 1000   |\n| 12           | 192.168.70.71 | 3306  | ONLINE | 1000   |\n+--------------+----------------+------+--------+--------+\n5 rows in set (0.00 sec)\n</code></pre> <p>See also</p> <p>ProxySQL Blog: MySQL read/write split with ProxySQL   https://proxysql.com/blog/configure-read-write-split/ ProxySQL Documentation: <code>mysql_query_rules</code> table   https://github.com/sysown/proxysql/wiki/Main-(runtime)#mysql_query_rules</p>"},{"location":"virtual-sandbox.html#proxysql-failover-behavior","title":"ProxySQL failover behavior","text":"<p>Notice that all servers were inserted into the mysql_servers table with the READER hostgroup set to 10 (see the value of the hostgroup_id column):</p> <pre><code>mysql&gt; SELECT * FROM mysql_servers;\n</code></pre> Expected output <pre><code>+--------------+---------------+------+--------+     +---------+\n| hostgroup_id | hostname      | port | weight | ... | comment |\n+--------------+---------------+------+--------+     +---------+\n| 10           | 192.168.70.71 | 3306 | 1000   |     |         |\n| 10           | 192.168.70.72 | 3306 | 1000   |     |         |\n| 10           | 192.168.70.73 | 3306 | 1000   |     |         |\n+--------------+---------------+------+--------+     +---------+\n3 rows in set (0.00 sec)\n</code></pre> <p>This configuration implies that ProxySQL elects the writer automatically. If the elected writer goes offline, ProxySQL assigns another (failover). You might tweak this mechanism by assigning a higher weight to a selected node. ProxySQL directs all write requests to this node. However, it also becomes the mostly utilized node for reading requests. In case of a failback (a node is put back online), the node with the highest weight is automatically elected for write requests.</p>"},{"location":"virtual-sandbox.html#creating-a-proxysql-monitoring-user","title":"Creating a ProxySQL monitoring user","text":"<p>To enable monitoring of Percona XtraDB Cluster nodes in ProxySQL, create a user with <code>USAGE</code> privilege on any node in the cluster and configure the user in ProxySQL.</p> <p>The following example shows how to add a monitoring user on Node 2:</p> <pre><code>mysql&gt; CREATE USER 'proxysql'@'%' IDENTIFIED WITH mysql_native_password BY 'ProxySQLPa55';\nmysql&gt; GRANT USAGE ON *.* TO 'proxysql'@'%';\n</code></pre> <p>The following example shows how to configure this user on the ProxySQL node:</p> <pre><code>mysql&gt; UPDATE global_variables SET variable_value='proxysql'\nWHERE variable_name='mysql-monitor_username';\n\nmysql&gt; UPDATE global_variables SET variable_value='ProxySQLPa55'\nWHERE variable_name='mysql-monitor_password';\n</code></pre>"},{"location":"virtual-sandbox.html#saving-and-loading-the-configuration","title":"Saving and loading the configuration","text":"<p>To load this configuration at runtime, issue the <code>LOAD</code> command.  To save these changes to disk (ensuring that they persist after ProxySQL shuts down), issue the <code>SAVE</code> command.</p> <pre><code>mysql&gt; LOAD MYSQL VARIABLES TO RUNTIME;\nmysql&gt; SAVE MYSQL VARIABLES TO DISK;\n</code></pre> <p>To ensure that monitoring is enabled, check the monitoring logs:</p> <pre><code>mysql&gt; SELECT * FROM monitor.mysql_server_connect_log ORDER BY time_start_us DESC LIMIT 6;\n</code></pre> Expected output <pre><code>+---------------+------+------------------+----------------------+---------------+\n| hostname      | port | time_start_us    | connect_success_time | connect_error |\n+---------------+------+------------------+----------------------+---------------+\n| 192.168.70.71 | 3306 | 1469635762434625 | 1695                 | NULL          |\n| 192.168.70.72 | 3306 | 1469635762434625 | 1779                 | NULL          |\n| 192.168.70.73 | 3306 | 1469635762434625 | 1627                 | NULL          |\n| 192.168.70.71 | 3306 | 1469635642434517 | 1557                 | NULL          |\n| 192.168.70.72 | 3306 | 1469635642434517 | 2737                 | NULL          |\n| 192.168.70.73 | 3306 | 1469635642434517 | 1447                 | NULL          |\n+---------------+------+------------------+----------------------+---------------+\n6 rows in set (0.00 sec)\n</code></pre> <pre><code>mysql&gt; SELECT * FROM monitor.mysql_server_ping_log ORDER BY time_start_us DESC LIMIT 6;\n</code></pre> Expected output <pre><code>+---------------+------+------------------+-------------------+------------+\n| hostname      | port | time_start_us    | ping_success_time | ping_error |\n+---------------+------+------------------+-------------------+------------+\n| 192.168.70.71 | 3306 | 1469635762416190 | 948               | NULL       |\n| 192.168.70.72 | 3306 | 1469635762416190 | 803               | NULL       |\n| 192.168.70.73 | 3306 | 1469635762416190 | 711               | NULL       |\n| 192.168.70.71 | 3306 | 1469635702416062 | 783               | NULL       |\n| 192.168.70.72 | 3306 | 1469635702416062 | 631               | NULL       |\n| 192.168.70.73 | 3306 | 1469635702416062 | 542               | NULL       |\n+---------------+------+------------------+-------------------+------------+\n6 rows in set (0.00 sec)\n</code></pre> <p>The previous examples show that ProxySQL is able to connect and ping the nodes you added.</p> <p>To enable monitoring of these nodes, load them at runtime:</p> <pre><code>mysql&gt; LOAD MYSQL SERVERS TO RUNTIME;\n</code></pre>"},{"location":"virtual-sandbox.html#creating-proxysql-client-user","title":"Creating ProxySQL Client User","text":"<p>ProxySQL must have users that can access backend nodes to manage connections.</p> <p>To add a user, insert credentials into <code>mysql_users</code> table:</p> <pre><code>mysql&gt; INSERT INTO mysql_users (username,password) VALUES ('appuser','$3kRetp@$sW0rd');\n</code></pre> <p>The example of the output is the following:</p> Expected output <pre><code>Query OK, 1 row affected (0.00 sec)\n</code></pre> <p>Note</p> <p>ProxySQL currently doesn\u2019t encrypt passwords.</p> <p>See also</p> <p>More information about password encryption in ProxySQL</p> <p>Load the user into runtime space and save these changes to disk (ensuring that they persist after ProxySQL shuts down):</p> <pre><code>mysql&gt; LOAD MYSQL USERS TO RUNTIME;\nmysql&gt; SAVE MYSQL USERS TO DISK;\n</code></pre> <p>To confirm that the user has been set up correctly, you can try to log in:</p> <pre><code>root@proxysql:~# mysql -u appuser -p$3kRetp@$sW0rd -h 127.0.0.1 -P 6033\n</code></pre> Expected output <pre><code>Welcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1491\nServer version: 5.5.30 (ProxySQL)\n\nCopyright (c) 2009-2020 Percona LLC and/or its affiliates\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n</code></pre> <p>To provide read/write access to the cluster for ProxySQL, add this user on one of the Percona XtraDB Cluster nodes:</p> <pre><code>mysql&gt; CREATE USER 'appuser'@'192.168.70.74'\nIDENTIFIED WITH mysql_native_password by '$3kRetp@$sW0rd';\n\nmysql&gt; GRANT ALL ON *.* TO 'appuser'@'192.168.70.74';\n</code></pre>"},{"location":"virtual-sandbox.html#testing-the-cluster-with-the-sysbench-benchmark-tool","title":"Testing the cluster with the sysbench benchmark tool","text":"<p>After you set up Percona XtraDB Cluster in your testing environment, you can test it using the <code>sysbench</code> benchmarking tool.</p> <ol> <li> <p>Create a database (sysbenchdb in this example; you can use a different name):</p> <pre><code>mysql&gt; CREATE DATABASE sysbenchdb;\n</code></pre> <p>The following output confirms that a new database has been created:</p> Expected output <pre><code>Query OK, 1 row affected (0.01 sec)\n</code></pre> </li> <li> <p>Populate the table with data for the benchmark. Note that you     should pass the database you have created as the value of the     <code>--mysql-db</code> parameter, and the name of the user who has full     access to this database as the value of the <code>--mysql-user</code>     parameter:</p> <pre><code>$ sysbench /usr/share/sysbench/oltp_insert.lua --mysql-db=sysbenchdb \\\n--mysql-host=127.0.0.1 --mysql-port=6033 --mysql-user=appuser \\\n--mysql-password=$3kRetp@$sW0rd --db-driver=mysql --threads=10 --tables=10 \\\n--table-size=1000 prepare\n</code></pre> </li> <li> <p>Run the benchmark on port 6033:</p> <pre><code>$ sysbench /usr/share/sysbench/oltp_read_write.lua --mysql-db=sysbenchdb \\\n--mysql-host=127.0.0.1 --mysql-port=6033 --mysql-user=appuser \\\n--mysql-password=$3kRetp@$sW0rd --db-driver=mysql --threads=10 --tables=10 \\\n--skip-trx=true --table-size=1000 --time=100 --report-interval=10 run\n</code></pre> </li> </ol> <p>Related sections and additional reading</p> <ul> <li>Load balancing with ProxySQL</li> <li>Configuring Percona XtraDB Cluster on CentOS</li> <li>Percona Blog post: ProxySQL Native Support for Percona XtraDB Cluster (PXC)</li> <li>GitHub repository for the sysbench benchmarking tool</li> </ul>"},{"location":"virtual-sandbox.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"wsrep-files-index.html","title":"Index of files created by PXC","text":"<ul> <li> <p><code>GRA_\\*.log</code></p> <p>These files contain binlog events in ROW format representing the failed transaction. That means that the replica thread was not able to apply one of the transactions. For each of those file, a corresponding warning or error message is present in the mysql error log file. Those error can also be false positives like a bad <code>DDL</code> statement (dropping  a table that doesn\u2019t exists for example) and therefore nothing to worry about. However it\u2019s always recommended to check these log to understand what\u2019s is happening.</p> <p>To be able to analyze these files binlog header needs to be added to the log file. To create the <code>GRA_HEADER</code> file you need an instance running with <code>binlog_checksum</code> set to <code>NONE</code> and extract first 120 bytes from the binlog file:</p> <pre><code>$ head -c 123 mysqld-bin.000001 &gt; GRA_HEADER\n$ cat GRA_HEADER &gt; /var/lib/mysql/GRA_1_2-bin.log\n$ cat /var/lib/mysql/GRA_1_2.log &gt;&gt; /var/lib/mysql/GRA_1_2-bin.log\n$ mysqlbinlog -vvv /var/lib/mysql/GRA_1_2-bin.log\n\n/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/;\n/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;\nDELIMITER /*!*/;\n# at 4\n#160809  16:04:05 server id 3  end_log_pos 123     Start: binlog v 4, server v 8.0-log created 160809 16:04:05 at startup\n# Warning: this binlog is either in use or was not closed properly.\nROLLBACK/*!*/;\nBINLOG '\nnbGpVw8DAAAAdwAAAHsAAAABAAQANS43LjEyLTVyYzEtbG9nAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAACdsalXEzgNAAgAEgAEBAQEEgAAXwAEGggAAAAICAgCAAAACgoKKioAEjQA\nALfQ8hw=\n'/*!*/;\n# at 123\n#160809  16:05:49 server id 2  end_log_pos 75     Query    thread_id=11    exec_time=0    error_code=0\nuse `test`/*!*/;\nSET TIMESTAMP=1470738949/*!*/;\nSET @@session.pseudo_thread_id=11/*!*/;\nSET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0, @@session.unique_checks=1, @@session.autocommit=1/*!*/;\nSET @@session.sql_mode=1436549152/*!*/;\nSET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;\n/*!\\C utf8 *//*!*/;\nSET @@session.character_set_client=33,@@session.collation_connection=33,@@session.collation_server=8/*!*/;\nSET @@session.lc_time_names=0/*!*/;\nSET @@session.collation_database=DEFAULT/*!*/;\ndrop table t\n/*!*/;\nSET @@SESSION.GTID_NEXT= 'AUTOMATIC' /* added by mysqlbinlog */ /*!*/;\nDELIMITER ;\n# End of log file\n/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;\n/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/;\n</code></pre> <p>This information can be used for checking the MySQL error log for the corresponding error message.</p> Error message <pre><code>160805  9:33:37 8:52:21 [ERROR] Slave SQL: Error 'Unknown table 'test'' on query. Default database: 'test'. Query: 'drop table test', Error_code: 1051\n160805  9:33:37 8:52:21 [Warning] WSREP: RBR event 1 Query apply warning: 1, 3\n</code></pre> <p>In this example <code>DROP TABLE</code> statement was executed on a table that doesn\u2019t exist.</p> </li> <li> <p><code>gcache.page</code></p> <p>See <code>gcache.page_size</code></p> <p>See also</p> <p>Percona Database Performance Blog: All You Need to Know About GCache (Galera-Cache) https://www.percona.com/blog/2016/11/16/all-you-need-to-know-about-gcache-galera-cache/</p> </li> <li> <p><code>galera.cache</code></p> <p>This file is used as a main writeset store. It\u2019s implemented as a permanent ring-buffer file that is preallocated on disk when the node is initialized. File size can be controlled with the variable <code>gcache.size</code>. If this value is bigger, more writesets are cached and chances are better that the re-joining node will get IST instead of SST. Filename can be changed with the <code>gcache.name</code> variable.</p> </li> <li> <p><code>grastate.dat</code></p> <p>This file contains the Galera state information.</p> <ul> <li> <p><code>version</code> - grastate version</p> </li> <li> <p><code>uuid</code> - a unique identifier for the state and the sequence of changes it undergoes.For more information on how UUID is generated see UUID.</p> </li> <li> <p><code>seqno</code> - Ordinal Sequence Number, a 64-bit signed integer used to denote the position of the change in the sequence. <code>seqno</code> is <code>0</code> when no writesets have been generated or applied on that node, i.e., not applied/generated across the lifetime of a <code>grastate</code> file. <code>-1</code> is a special value for the <code>seqno</code> that is kept in the <code>grastate.dat</code> while the server is running to allow Galera to distinguish between a clean and an unclean shutdown. Upon a clean shutdown, the correct <code>seqno</code> value is written to the file. So, when the server is brought back up, if the value is still <code>-1</code> , this means that the server did not shut down cleanly. If the value is greater than <code>0</code>, this means that the shutdown was clean. <code>-1</code> is then written again to the file in order to allow the server to correctly detect if the next shutdown was clean in the same manner.</p> </li> <li> <p><code>cert_index</code> - cert index restore through grastate is not implemented yet</p> </li> </ul> <p>Examples of this file look like this:</p> <p>In case server node has this state when not running it means that that node crashed during the transaction processing.</p> <pre><code># GALERA saved state\nversion: 2.1\nuuid:    1917033b-7081-11e2-0800-707f5d3b106b\nseqno:   -1\ncert_index:\n</code></pre> <p>In case server node has this state when not running it means that the node was gracefully shut down.</p> <pre><code># GALERA saved state\nversion: 2.1\nuuid:    1917033b-7081-11e2-0800-707f5d3b106b\nseqno:   5192193423942\ncert_index:\n</code></pre> <p>In case server node has this state when not running it means that the node crashed during the DDL.</p> <pre><code># GALERA saved state\nversion: 2.1\nuuid:    00000000-0000-0000-0000-000000000000\nseqno:   -1\ncert_index:\n</code></pre> </li> <li> <p><code>gvwstate.dat</code></p> </li> </ul> <p>This file is used for Primary Component recovery feature. This file is    created once primary component is formed or changed, so you can get the    latest primary component this node was in. And this file is deleted when the    node is shutdown gracefully.</p> <p>First part contains the node UUID information. Second part contains    the view information. View information is written between <code>#vwbeg</code> and    <code>#vwend</code>. View information consists of:</p> <pre><code>* view_id: [view_type] [view_uuid] [view_seq]. - `view_type` is always `3` which means primary view. `view_uuid` and `view_seq` identifies a unique view, which could be perceived as identifier of this primary component.\n\n* bootstrap: [bootstarp_or_not]. - it could be `0` or `1`, but it does not affect primary component recovery process now.\n\n* member: [node\u2019s uuid] [node\u2019s segment]. - it represents all nodes in this primary component.\n\n??? example \"Example of the file\"\n\n    ```{.text .no-copy}\n    my_uuid: c5d5d990-30ee-11e4-aab1-46d0ed84b408\n    #vwbeg\n    view_id: 3 bc85bd53-31ac-11e4-9895-1f2ce13f2542 2 \n    bootstrap: 0\n    member: bc85bd53-31ac-11e4-9895-1f2ce13f2542 0\n    member: c5d5d990-30ee-11e4-aab1-46d0ed84b408 0\n    #vwend\n    ```\n</code></pre>"},{"location":"wsrep-files-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"wsrep-provider-index.html","title":"Index of wsrep_provider options","text":"<p>The following variables can be set and checked in the <code>wsrep_provider_options</code> variable. The value of the variable can be changed in the MySQL configuration file, <code>my.cnf</code>, or by setting the variable value in the MySQL client.</p> <p>To change the value in <code>my.cnf</code>, the following syntax should be used:</p> <pre><code>$ wsrep_provider_options=\"variable1=value1;[variable2=value2]\"\n</code></pre> <p>For example to set the size of the Galera buffer storage to 512 MB, specify the following in <code>my.cnf</code>:</p> <pre><code>$ wsrep_provider_options=\"gcache.size=512M\"\n</code></pre> <p>Dynamic variables can be changed from the MySQL client using the <code>SET GLOBAL</code> command. For example, to change the value of the <code>pc.ignore_sb</code>, use the following command:</p> <pre><code>mysql&gt; SET GLOBAL wsrep_provider_options=\"pc.ignore_sb=true\";\n</code></pre>"},{"location":"wsrep-provider-index.html#index","title":"Index","text":""},{"location":"wsrep-provider-index.html#base_dir","title":"<code>base_dir</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: value of <code>datadir</code> <p>This variable specifies the data directory.</p>"},{"location":"wsrep-provider-index.html#base_host","title":"<code>base_host</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: value of <code>wsrep_node_address</code> <p>This variable sets the value of the node\u2019s base IP. This is an IP address on which Galera listens for connections from other nodes. Setting this value incorrectly would stop the node from communicating with other nodes.</p>"},{"location":"wsrep-provider-index.html#base_port","title":"<code>base_port</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 4567 <p>This variable sets the port on which Galera listens for connections from other nodes. Setting this value incorrectly would stop the node from communicating with other nodes.</p>"},{"location":"wsrep-provider-index.html#certlog_conflicts","title":"<code>cert.log_conflicts</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: no <p>This variable is used to specify if the details of the certification failures should be logged.</p>"},{"location":"wsrep-provider-index.html#certoptimistic_pa","title":"<code>cert.optimistic_pa</code>","text":"<p>Enabled</p> <pre><code>Allows the full range of parallelization as determined by the certification\nalgorithm.\n</code></pre> <p>Disabled</p> <pre><code>Limits the parallel applying window so that it does not exceed the parallel\napplying window seen on the source. In this case, the action starts applying\nno sooner than all actions on the source are committed.\n</code></pre> Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: No <p>See also</p> <p>Galera Cluster Documentation: * Parameter: cert.optimistic_pa * Setting parallel slave threads</p>"},{"location":"wsrep-provider-index.html#debug","title":"<code>debug</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: no <p>When this variable is set to <code>yes</code>, it will enable debugging.</p>"},{"location":"wsrep-provider-index.html#evsauto_evict","title":"<code>evs.auto_evict</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 0 <p>Number of entries allowed on delayed list until auto eviction takes place. Setting value to <code>0</code> disables auto eviction protocol on the node, though node response times will still be monitored. EVS protocol version (<code>evs.version</code>) <code>1</code> is required to enable auto eviction.</p>"},{"location":"wsrep-provider-index.html#evscausal_keepalive_period","title":"<code>evs.causal_keepalive_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: value of <code>evs.keepalive_period</code> <p>This variable is used for development purposes and shouldn\u2019t be used by regular users.</p>"},{"location":"wsrep-provider-index.html#evsdebug_log_mask","title":"<code>evs.debug_log_mask</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 0x1 <p>This variable is used for EVS (Extended Virtual Synchrony) debugging. It can be used only when <code>wsrep_debug</code> is set to <code>ON</code>.</p>"},{"location":"wsrep-provider-index.html#evsdelay_margin","title":"<code>evs.delay_margin</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: PT1S <p>Time period that a node can delay its response from expected until it is added to delayed list. The value must be higher than the highest RTT between nodes.</p>"},{"location":"wsrep-provider-index.html#evsdelayed_keep_period","title":"<code>evs.delayed_keep_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: PT30S <p>Time period that node is required to remain responsive until one entry is removed from delayed list.</p>"},{"location":"wsrep-provider-index.html#evsevict","title":"<code>evs.evict</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes <p>Manual eviction can be triggered by setting the <code>evs.evict</code> to a certain node value. Setting the <code>evs.evict</code> to an empty string will clear the evict list on the node where it was set.</p>"},{"location":"wsrep-provider-index.html#evsinactive_check_period","title":"<code>evs.inactive_check_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT0.5S <p>This variable defines how often to check for peer inactivity.</p>"},{"location":"wsrep-provider-index.html#evsinactive_timeout","title":"<code>evs.inactive_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT15S <p>This variable defines the inactivity limit, once this limit is reached the node will be considered dead.</p>"},{"location":"wsrep-provider-index.html#evsinfo_log_mask","title":"<code>evs.info_log_mask</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable is used for controlling the extra EVS info logging.</p>"},{"location":"wsrep-provider-index.html#evsinstall_timeout","title":"<code>evs.install_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: PT7.5S <p>This variable defines the timeout on waiting for install message acknowledgments.</p>"},{"location":"wsrep-provider-index.html#evsjoin_retrans_period","title":"<code>evs.join_retrans_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT1S <p>This variable defines how often to retransmit EVS join messages when forming cluster membership.</p>"},{"location":"wsrep-provider-index.html#evskeepalive_period","title":"<code>evs.keepalive_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT1S <p>This variable defines how often to emit keepalive beacons (in the absence of any other traffic).</p>"},{"location":"wsrep-provider-index.html#evsmax_install_timeouts","title":"<code>evs.max_install_timeouts</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 1 <p>This variable defines how many membership install rounds to try before giving up (total rounds will be <code>evs.max_install_timeouts</code> + 2).</p>"},{"location":"wsrep-provider-index.html#evssend_window","title":"<code>evs.send_window</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 10 <p>This variable defines the maximum number of data packets in replication at a time. For WAN setups, the variable can be set to a considerably higher value than default (for example,512). The value must not be less than <code>evs.user_send_window</code>.</p>"},{"location":"wsrep-provider-index.html#evsstats_report_period","title":"<code>evs.stats_report_period</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT1M <p>This variable defines the control period of EVS statistics reporting.</p>"},{"location":"wsrep-provider-index.html#evssuspect_timeout","title":"<code>evs.suspect_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT5S <p>This variable defines the inactivity period after which the node is \u201csuspected\u201d to be dead. If all remaining nodes agree on that, the node will be dropped out of cluster even before <code>evs.inactive_timeout</code> is reached.</p>"},{"location":"wsrep-provider-index.html#evsuse_aggregate","title":"<code>evs.use_aggregate</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: true <p>When this variable is enabled, smaller packets will be aggregated into one.</p>"},{"location":"wsrep-provider-index.html#evsuser_send_window","title":"<code>evs.user_send_window</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 4 <p>This variable defines the maximum number of data packets in replication at a time. For WAN setups, the variable can be set to a considerably higher value than default (for example, 512).</p>"},{"location":"wsrep-provider-index.html#evsversion","title":"<code>evs.version</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable defines the EVS protocol version. Auto eviction is enabled when this variable is set to <code>1</code>. Default <code>0</code> is set for backwards compatibility.</p>"},{"location":"wsrep-provider-index.html#evsview_forget_timeout","title":"<code>evs.view_forget_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: P1D <p>This variable defines the timeout after which past views will be dropped from history.</p>"},{"location":"wsrep-provider-index.html#gcachedir","title":"<code>gcache.dir</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: <code>datadir</code> <p>This variable can be used to define the location of the <code>galera.cache</code> file.</p>"},{"location":"wsrep-provider-index.html#gcachefreeze_purge_at_seqno","title":"<code>gcache.freeze_purge_at_seqno</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Local, Global Dynamic: Yes Default Value: 0 <p>This variable controls the purging of the gcache and enables retaining more data in it. This variable makes it possible to use IST (Incremental State Transfer) when the node rejoins instead of SST (State Snapshot Transfer).</p> <p>Set this variable on an existing node of the cluster (that will continue to be part of the cluster and can act as a potential donor node). This node continues to retain the write-sets and allows restarting the node to rejoin by using IST.</p> <p>See also</p> <p>Percona Database Performance Blog:</p> <ul> <li> <p>All You Need to Know About GCache (Galera-Cache)</p> </li> <li> <p>Want IST Not SST for Node Rejoins? We Have a Solution!</p> </li> </ul> <p>The <code>gcache.freeze_purge_at_seqno</code> variable takes three values:</p> <p>-1 (default)</p> <p>No freezing of gcache, the purge operates as normal.</p> <p>A valid seqno in gcache</p> <p>The freeze purge of write-sets may not be smaller than the selected seqno. The best way to select an optimal value is to use the value of the variable :variable:<code>wsrep_last_applied</code> from the node that you plan to shut down.</p> <p>now The freeze purge of write-sets is no less than the smallest seqno currently in gcache. Using this value results in freezing the gcache-purge instantly. Use this value if selecting a valid seqno in gcache is difficult.</p>"},{"location":"wsrep-provider-index.html#gcachekeep_pages_count","title":"<code>gcache.keep_pages_count</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Local, Global Dynamic: Yes Default Value: 0 <p>This variable is used to limit the number of overflow pages rather than the total memory occupied by all overflow pages. Whenever <code>gcache.keep_pages_count</code> is set to a non-zero value, excess overflow pages will be deleted (starting from the oldest to the newest).</p> <p>Whenever either the <code>gcache.keep_pages_count</code> or the <code>gcache.keep_pages_size</code> variable is updated at runtime to a non-zero value, cleanup is called on excess overflow pages to delete them.</p>"},{"location":"wsrep-provider-index.html#gcachekeep_pages_size","title":"<code>gcache.keep_pages_size</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Local, Global Dynamic: No Default Value: 0 <p>This variable is used to limit the total size of overflow pages rather than the count of all overflow pages. Whenever <code>gcache.keep_pages_size</code> is set to a non-zero value, excess overflow pages will be deleted (starting from the oldest to the newest) until the total size is below the specified value.</p> <p>Whenever either the <code>gcache.keep_pages_count</code> or the <code>gcache.keep_pages_size</code> variable is updated at runtime to a non-zero value, cleanup is called on excess overflow pages to delete them.</p>"},{"location":"wsrep-provider-index.html#gcachemem_size","title":"<code>gcache.mem_size</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable has been deprecated in <code>5.6.22-25.8</code> and shouldn\u2019t be used as it could cause a node to crash.</p> <p>This variable was used to define how much RAM is available for the system.</p>"},{"location":"wsrep-provider-index.html#gcachename","title":"<code>gcache.name</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: /var/lib/mysql/galera.cache <p>This variable can be used to specify the name of the Galera cache file.</p>"},{"location":"wsrep-provider-index.html#gcachepage_size","title":"<code>gcache.page_size</code>","text":"Option Description Command Line: No Config File: Yes Scope: Global Dynamic: No Default Value: 128M <p>Size of the page files in page storage. The limit on overall page storage is the size of the disk. Pages are prefixed by gcache.page.</p> <p>See also</p> <ul> <li> <p>Galera Documentation: gcache.page_size</p> </li> <li> <p>Percona Database Performance Blog: All You Need to Know About GCache</p> </li> </ul>"},{"location":"wsrep-provider-index.html#gcacherecover","title":"<code>gcache.recover</code>","text":"Option Description Command line: No Configuration file: Yes Scope: Global Dynamic: No Default value: No <p>Attempts to recover a node\u2019s gcache file to a usable state on startup. If the node can successfully recover the gcache file, the node can provide IST to the remaining nodes. This ability can reduce the time needed to bring up the cluster.</p> <p>An example of enabling the variable in the configuration file:</p> <pre><code>wsrep_provider_options=\"gcache.recover=yes\"\n</code></pre>"},{"location":"wsrep-provider-index.html#gcachesize","title":"<code>gcache.size</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 128M <p>Size of the transaction cache for Galera replication. This defines the size of the <code>galera.cache</code> file which is used as source for IST. The bigger the value of this variable, the better are chances that the re-joining node will get IST instead of SST.</p>"},{"location":"wsrep-provider-index.html#gcommthread_prio","title":"<code>gcomm.thread_prio</code>","text":"<p>Using this option, you can raise the priority of the gcomm thread to a higher level than it normally uses.</p> <p>The format for this variable is: &lt;policy&gt;:&lt;priority&gt;. The priority value is an integer.</p> <p>other</p> <pre><code>Default time-sharing scheduling in Linux. The threads can run\nuntil blocked by an I/O request or preempted by higher priorities or\nsuperior scheduling designations.\n</code></pre> <p>fifo</p> <pre><code>First-in First-out (FIFO) scheduling. These threads always immediately\npreempt any currently running other, batch or idle threads. They can run\nuntil they are either blocked by an I/O request or preempted by a FIFO thread\nof a higher priority.\n</code></pre> <p>rr</p> <pre><code>Round-robin scheduling. These threads always preempt any currently running\nother, batch or idle threads. The scheduler allows these threads to run for a\nfixed period of a time. If the thread is still running when this time period is\nexceeded, they are stopped and moved to the end of the list, allowing another\nround-robin thread of the same priority to run in their place. They can\notherwise continue to run until they are blocked by an I/O request or are\npreempted by threads of a higher priority.\n</code></pre> <p>See also</p> <p>For information, see the Galera Cluster documentation</p>"},{"location":"wsrep-provider-index.html#gcsfc_auto_evict_threshold","title":"<code>gcs.fc_auto_evict_threshold</code>","text":"Option Description Command Line: Yes Config file : Yes Scope: Global Dynamic: No Default value: 0.75 <p>Implemented in Percona XtraDB Cluster 8.0.33-25.</p> <p>Defines the threshold that must be reached or crossed before a node is evicted from the cluster. This variable is a ratio of the <code>gcs.fc_auto_evict_window</code> variable. The default value is <code>.075</code>, but the value can be set to any value between 0.0 and 1.0. </p>"},{"location":"wsrep-provider-index.html#gcsfc_auto_evict_window","title":"<code>gcs.fc_auto_evict_window</code>","text":"Option Description Command Line: Yes Config file : Yes Scope: Global Dynamic: No Default value: 0 <p>Implemented in Percona XtraDB Cluster 8.0.33-25.</p> <p>The variable defines the time window width within which flow controls are observed. The time span of the window is [now - gcs.fc_audot_evict_window, now]. The window is constantly moving ahead as the time passes. And now, within this window if the flow control summary time &gt;= (gcs.fc_audot-evict_window * gcs.fc_audot_evict_threshold), the node self-leaves the cluster.</p> <p>The default value is 0, which means that the feature is disabled.</p> <p>The maximum value is <code>DBL_MAX</code>.</p>"},{"location":"wsrep-provider-index.html#gcsfc_debug","title":"<code>gcs.fc_debug</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable specifies after how many writesets the debug statistics about SST flow control will be posted.</p>"},{"location":"wsrep-provider-index.html#gcsfc_factor","title":"<code>gcs.fc_factor</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 1 <p>This variable is used for replication flow control. Replication is resumed when the replica queue drops below <code>gcs.fc_factor</code> * <code>gcs.fc_limit</code>.</p>"},{"location":"wsrep-provider-index.html#gcsfc_limit","title":"<code>gcs.fc_limit</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 100 <p>This variable is used for replication flow control. Replication is paused when the replica queue exceeds this limit. In the default operation mode, flow control limit is dynamically recalculated based on the amount of nodes in the cluster, but this recalculation can be turned off with use of the <code>gcs.fc_master_slave</code> variable to make manual setting of the <code>gcs.fc_limit</code> having an effect  (e.g., for configurations when writing is done to a single node in Percona XtraDB Cluster).</p>"},{"location":"wsrep-provider-index.html#gcsfc_master_slave","title":"<code>gcs.fc_master_slave</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: NO Default Value: NO <p>This variable is used to specify if there is only one source node in the cluster. It affects whether flow control limit is recalculated dynamically (when <code>NO</code>) or not (when <code>YES</code>).</p>"},{"location":"wsrep-provider-index.html#gcsmax_packet_size","title":"<code>gcs.max_packet_size</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 64500 <p>This variable is used to specify the writeset size after which they will be fragmented.</p>"},{"location":"wsrep-provider-index.html#gcsmax_throttle","title":"<code>gcs.max_throttle</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0.25 <p>This variable specifies how much the replication can be throttled during the state transfer in order to avoid running out of memory. Value can be set to <code>0.0</code> if stopping replication is acceptable in order to finish state transfer.</p>"},{"location":"wsrep-provider-index.html#gcsrecv_q_hard_limit","title":"<code>gcs.recv_q_hard_limit</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 9223372036854775807 <p>This variable specifies the maximum allowed size of the receive queue. This should normally be <code>(RAM + swap) / 2</code>. If this limit is exceeded, Galera will abort the server.</p>"},{"location":"wsrep-provider-index.html#gcsrecv_q_soft_limit","title":"<code>gcs.recv_q_soft_limit</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0.25 <p>This variable specifies the fraction of the <code>gcs.recv_q_hard_limit</code> after which replication rate will be throttled.</p>"},{"location":"wsrep-provider-index.html#gcssync_donor","title":"<code>gcs.sync_donor</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: No <p>This variable controls if the rest of the cluster should be in sync with the donor node. When this variable is set to <code>YES</code>, the whole cluster will be blocked if the donor node is blocked with SST.</p>"},{"location":"wsrep-provider-index.html#gmcastlisten_addr","title":"<code>gmcast.listen_addr</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: tcp://0.0.0.0:4567 <p>This variable defines the address on which the node listens to connections from other nodes in the cluster.</p>"},{"location":"wsrep-provider-index.html#gmcastmcast_addr","title":"<code>gmcast.mcast_addr</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: None <p>This variable should be set up if UDP multicast should be used for replication.</p>"},{"location":"wsrep-provider-index.html#gmcastmcast_ttl","title":"<code>gmcast.mcast_ttl</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 1 <p>This variable can be used to define TTL for multicast packets.</p>"},{"location":"wsrep-provider-index.html#gmcastpeer_timeout","title":"<code>gmcast.peer_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT3S <p>This variable specifies the connection timeout to initiate message relaying.</p>"},{"location":"wsrep-provider-index.html#gmcastsegment","title":"<code>gmcast.segment</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable specifies the group segment this member should be a part of. Same segment members are treated as equally physically close.</p>"},{"location":"wsrep-provider-index.html#gmcasttime_wait","title":"<code>gmcast.time_wait</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT5S <p>This variable specifies the time to wait until allowing peer declared outside of stable view to reconnect.</p>"},{"location":"wsrep-provider-index.html#gmcastversion","title":"<code>gmcast.version</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This variable shows which gmcast protocol version is being used.</p>"},{"location":"wsrep-provider-index.html#istrecv_addr","title":"<code>ist.recv_addr</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: value of <code>wsrep_node_address</code> <p>This variable specifies the address on which the node listens for Incremental State Transfer (IST).</p>"},{"location":"wsrep-provider-index.html#pcannounce_timeout","title":"<code>pc.announce_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT3S <p>Cluster joining announcements are sent every \u00bd second for this period of time or less if other nodes are discovered.</p>"},{"location":"wsrep-provider-index.html#pcchecksum","title":"<code>pc.checksum</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: true <p>This variable controls whether replicated messages should be checksummed or not.</p>"},{"location":"wsrep-provider-index.html#pcignore_quorum","title":"<code>pc.ignore_quorum</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: false <p>When this variable is set to <code>TRUE</code>, the node will completely ignore quorum calculations. This should be used with extreme caution even in source-replica setups, because replicas won\u2019t automatically reconnect to source in this case.</p>"},{"location":"wsrep-provider-index.html#pcignore_sb","title":"<code>pc.ignore_sb</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: false <p>When this variable is set to <code>TRUE</code>, the node will process updates even in the case of a split brain. This should be used with extreme caution in multi-source setup, but should simplify things in source-replica cluster (especially if only 2 nodes are used).</p>"},{"location":"wsrep-provider-index.html#pclinger","title":"<code>pc.linger</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT20S <p>This variable specifies the period for which the PC protocol waits for EVS termination.</p>"},{"location":"wsrep-provider-index.html#pcnpvo","title":"<code>pc.npvo</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: false <p>When this variable is set to <code>TRUE</code>, more recent primary components override older ones in case of conflicting primaries.</p>"},{"location":"wsrep-provider-index.html#pcrecovery","title":"<code>pc.recovery</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: true <p>When this variable is set to <code>true</code>, the node stores the Primary Component state to disk. The Primary Component can then recover automatically when all nodes that were part of the last saved state re-establish communication with each other. This feature allows automatic recovery from full cluster crashes, such as in the case of a data center power outage. A subsequent graceful full cluster restart will require explicit bootstrapping for a new Primary Component.</p>"},{"location":"wsrep-provider-index.html#pcversion","title":"<code>pc.version</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This status variable is used to check which PC protocol version is used.</p>"},{"location":"wsrep-provider-index.html#pcwait_prim","title":"<code>pc.wait_prim</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: true <p>When set to <code>TRUE</code>, the node waits for a primary component for the period of time specified in <code>pc.wait_prim_timeout</code>. This is useful to bring up a non-primary component and make it primary with <code>pc.bootstrap</code>.</p>"},{"location":"wsrep-provider-index.html#pcwait_prim_timeout","title":"<code>pc.wait_prim_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: PT30S <p>This variable is used to specify the period of time to wait for a primary component.</p>"},{"location":"wsrep-provider-index.html#pcwait_restored_prim_timeout","title":"<code>pc.wait_restored_prim_timeout</code>","text":"<p>Introduced in Percona XtraDB Cluster 8.0.33-25.</p> Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic No Default Value: PT0S <p>This variable specifies the wait period for a primary component when the cluster restores the primary component from the <code>gvwstate.dat</code> file after an outage.</p> <p>The default value is <code>PT0S</code> (zero seconds). The node waits for an infinite time, which is the current behavior.</p> <p>You can define a wait time with <code>PTNS</code>, replace the <code>N</code> value with the number of seconds. For example, to wait for 90 seconds, set the value to <code>PT90S</code>.</p>"},{"location":"wsrep-provider-index.html#pcweight","title":"<code>pc.weight</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: 1 <p>This variable specifies the node weight that\u2019s going to be used for Weighted Quorum calculations.</p>"},{"location":"wsrep-provider-index.html#protonetbackend","title":"<code>protonet.backend</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: asio <p>This variable is used to define which transport backend should be used. Currently only <code>ASIO</code> is supported.</p>"},{"location":"wsrep-provider-index.html#protonetversion","title":"<code>protonet.version</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 0 <p>This status variable is used to check which transport backend protocol version is used.</p>"},{"location":"wsrep-provider-index.html#replcausal_read_timeout","title":"<code>repl.causal_read_timeout</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: PT30S <p>This variable specifies the causal read timeout.</p>"},{"location":"wsrep-provider-index.html#replcommit_order","title":"<code>repl.commit_order</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 3 <p>This variable is used to specify out-of-order committing (which is used to improve parallel applying performance). The following values are available:</p> <ul> <li> <p><code>0</code> - BYPASS: all commit order monitoring is turned off (useful for measuring performance penalty)</p> </li> <li> <p><code>1</code> - OOOC: allow out-of-order committing for all transactions</p> </li> <li> <p><code>2</code> - LOCAL_OOOC: allow out-of-order committing only for local transactions</p> </li> <li> <p><code>3</code> - NO_OOOC: no out-of-order committing is allowed (strict total order committing)</p> </li> </ul>"},{"location":"wsrep-provider-index.html#replkey_format","title":"<code>repl.key_format</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes Default Value: FLAT8 <p>This variable is used to specify the replication key format. The following values are available:</p> <ul> <li> <p><code>FLAT8</code> - short key with higher probability of key match false positives</p> </li> <li> <p><code>FLAT16</code> - longer key with lower probability of false positives</p> </li> <li> <p><code>FLAT8A</code> - same as <code>FLAT8</code> but with annotations for debug purposes</p> </li> <li> <p><code>FLAT16A</code> - same as <code>FLAT16</code> but with annotations for debug purposes</p> </li> </ul>"},{"location":"wsrep-provider-index.html#replmax_ws_size","title":"<code>repl.max_ws_size</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 2147483647 <p>This variable is used to specify the maximum size of a write-set in bytes. This is limited to 2 gygabytes.</p>"},{"location":"wsrep-provider-index.html#replproto_max","title":"<code>repl.proto_max</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 7 <p>This variable is used to specify the highest communication protocol version to accept in the cluster. Used only for debugging.</p>"},{"location":"wsrep-provider-index.html#socketchecksum","title":"<code>socket.checksum</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: 2 <p>This variable is used to choose the checksum algorithm for network packets. The <code>CRC32-C</code> option is optimized and may be hardware accelerated on Intel CPUs. The following values are available:</p> <ul> <li> <p><code>0</code> - disable checksum</p> </li> <li> <p><code>1</code> - plain <code>CRC32</code> (used in Galera 2.x)</p> </li> <li> <p><code>2</code> - hardware accelerated <code>CRC32-C</code></p> </li> </ul> <p>The following is an example of the variable use:</p> <pre><code>wsrep_provider_options=\"socket.checksum=2\"\n</code></pre>"},{"location":"wsrep-provider-index.html#socketssl","title":"<code>socket.ssl</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: No <p>This variable is used to specify if SSL encryption should be used.</p>"},{"location":"wsrep-provider-index.html#socketssl_ca","title":"<code>socket.ssl_ca</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No <p>This variable is used to specify the path to the Certificate Authority (CA) certificate file.</p>"},{"location":"wsrep-provider-index.html#socketssl_cert","title":"<code>socket.ssl_cert</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No <p>This variable is used to specify the path to the server\u2019s certificate file (in PEM format).</p>"},{"location":"wsrep-provider-index.html#socketssl_key","title":"<code>socket.ssl_key</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No <p>This variable is used to specify the path to the server\u2019s private key file (in PEM format).</p>"},{"location":"wsrep-provider-index.html#socketssl_compression","title":"<code>socket.ssl_compression</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: Yes <p>This variable is used to specify if the SSL compression is to be used.</p>"},{"location":"wsrep-provider-index.html#socketssl_cipher","title":"<code>socket.ssl_cipher</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: No Default Value: AES128-SHA <p>This variable is used to specify what cypher will be used for encryption.</p>"},{"location":"wsrep-provider-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"wsrep-status-index.html","title":"Index of wsrep status variables","text":""},{"location":"wsrep-status-index.html#wsrep_apply_oooe","title":"<code>wsrep_apply_oooe</code>","text":"<p>This variable shows parallelization efficiency, how often writests have been applied out of order.</p> <p>See also</p> <p><code>Galera status variable: wsrep_apply_oooe</code></p>"},{"location":"wsrep-status-index.html#wsrep_apply_oool","title":"<code>wsrep_apply_oool</code>","text":"<p>This variable shows how often a writeset with a higher sequence number was applied before one with a lower sequence number.</p> <p>See also</p> <p><code>Galera status variable: wsrep_apply_oool</code></p>"},{"location":"wsrep-status-index.html#wsrep_apply_window","title":"<code>wsrep_apply_window</code>","text":"<p>Average distance between highest and lowest concurrently applied sequence numbers.</p> <p>See also</p> <p><code>Galera status variable: wsrep_apply_window</code></p>"},{"location":"wsrep-status-index.html#wsrep_causal_reads","title":"<code>wsrep_causal_reads</code>","text":"<p>Shows the number of writesets processed while the variable <code>wsrep_causal_reads</code> was set to <code>ON</code>.</p> <p>See also</p> <p><code>MySQL wsrep options: wsrep_causal_reads</code></p>"},{"location":"wsrep-status-index.html#wsrep_cert_bucket_count","title":"<code>wsrep_cert_bucket_count</code>","text":"<p>This variable, shows the number of cells in the certification index hash-table.</p>"},{"location":"wsrep-status-index.html#wsrep_cert_deps_distance","title":"<code>wsrep_cert_deps_distance</code>","text":"<p>Average distance between highest and lowest sequence number that can be possibly applied in parallel.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cert_deps_distance</code></p>"},{"location":"wsrep-status-index.html#wsrep_cert_index_size","title":"<code>wsrep_cert_index_size</code>","text":"<p>Number of entries in the certification index.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cert_index_size</code></p>"},{"location":"wsrep-status-index.html#wsrep_cert_interval","title":"<code>wsrep_cert_interval</code>","text":"<p>Average number of write-sets received while a transaction replicates.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cert_interval</code></p>"},{"location":"wsrep-status-index.html#wsrep_cluster_conf_id","title":"<code>wsrep_cluster_conf_id</code>","text":"<p>Number of cluster membership changes that have taken place.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cluster_conf_id</code></p>"},{"location":"wsrep-status-index.html#wsrep_cluster_size","title":"<code>wsrep_cluster_size</code>","text":"<p>Current number of nodes in the cluster.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cluster_size</code></p>"},{"location":"wsrep-status-index.html#wsrep_cluster_state_uuid","title":"<code>wsrep_cluster_state_uuid</code>","text":"<p>This variable contains UUID state of the cluster. When this value is the same as the one in <code>wsrep_local_state_uuid</code>, node is synced with the cluster.</p> <p>See also</p> <p><code>Galera status variable: wsrep_cluster_state_uuid</code></p>"},{"location":"wsrep-status-index.html#wsrep_cluster_status","title":"<code>wsrep_cluster_status</code>","text":"<p>Status of the cluster component. Possible values are:</p> <ul> <li> <p><code>Primary</code></p> </li> <li> <p><code>Non-Primary</code></p> </li> <li> <p><code>Disconnected</code></p> </li> </ul> <p>See also</p> <p><code>Galera status variable: wsrep_cluster_status</code></p>"},{"location":"wsrep-status-index.html#wsrep_commit_oooe","title":"<code>wsrep_commit_oooe</code>","text":"<p>This variable shows how often a transaction was committed out of order.</p> <p>See also</p> <p><code>Galera status variable: wsrep_commit_oooe</code></p>"},{"location":"wsrep-status-index.html#wsrep_commit_oool","title":"<code>wsrep_commit_oool</code>","text":"<p>This variable currently has no meaning.</p> <p>See also</p> <p><code>Galera status variable: wsrep_commit_oool</code></p>"},{"location":"wsrep-status-index.html#wsrep_commit_window","title":"<code>wsrep_commit_window</code>","text":"<p>Average distance between highest and lowest concurrently committed sequence number.</p> <p>See also</p> <p><code>Galera status variable: wsrep_commit_window</code></p>"},{"location":"wsrep-status-index.html#wsrep_connected","title":"<code>wsrep_connected</code>","text":"<p>This variable shows if the node is connected to the cluster. If the value is <code>OFF</code>, the node has not yet connected to any of the cluster components. This may be due to misconfiguration.</p> <p>See also</p> <p><code>Galera status variable: wsrep_connected</code></p>"},{"location":"wsrep-status-index.html#wsrep_evs_delayed","title":"<code>wsrep_evs_delayed</code>","text":"<p>Comma separated list of nodes that are considered delayed. The node format is <code>&lt;uuid&gt;:&lt;address&gt;:&lt;count&gt;</code>, where <code>&lt;count&gt;</code> is the number of entries on delayed list for that node.</p> <p>See also</p> <p><code>Galera status variable: wsrep_evs_delayed</code></p>"},{"location":"wsrep-status-index.html#wsrep_evs_evict_list","title":"<code>wsrep_evs_evict_list</code>","text":"<p>List of UUIDs of the evicted nodes.</p> <p>See also</p> <p><code>Galera status variable: wsrep_evs_evict_list</code></p>"},{"location":"wsrep-status-index.html#wsrep_evs_repl_latency","title":"<code>wsrep_evs_repl_latency</code>","text":"<p>This status variable provides information regarding group communication replication latency. This latency is measured in seconds from when a message is sent out to when a message is received.</p> <p>The format of the output is <code>&lt;min&gt;/&lt;avg&gt;/&lt;max&gt;/&lt;std_dev&gt;/&lt;sample_size&gt;</code>.</p> <p>See also</p> <p><code>Galera status variable: wsrep_evs_repl_latency</code></p>"},{"location":"wsrep-status-index.html#wsrep_evs_state","title":"<code>wsrep_evs_state</code>","text":"<p>Internal EVS protocol state.</p> <p>See also</p> <p><code>Galera status variable: wsrep_evs_state</code></p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_interval","title":"<code>wsrep_flow_control_interval</code>","text":"<p>This variable shows the lower and upper limits for Galera flow control. The upper limit is the maximum allowed number of requests in the queue. If the queue reaches the upper limit, new requests are denied. As existing requests get processed, the queue decreases, and once it reaches the lower limit, new requests will be allowed again.</p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_interval_high","title":"<code>wsrep_flow_control_interval_high</code>","text":"<p>Shows the upper limit for flow control to trigger.</p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_interval_low","title":"<code>wsrep_flow_control_interval_low</code>","text":"<p>Shows the lower limit for flow control to stop.</p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_paused","title":"<code>wsrep_flow_control_paused</code>","text":"<p>Time since the last status query that was paused due to flow control.</p> <p>See also</p> <p><code>Galera status variable: wsrep_flow_control_paused</code></p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_paused_ns","title":"<code>wsrep_flow_control_paused_ns</code>","text":"<p>Total time spent in a paused state measured in nanoseconds.</p> <p>See also</p> <p><code>Galera status variable: wsrep_flow_control_paused_ns</code></p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_recv","title":"<code>wsrep_flow_control_recv</code>","text":"<p>The number of <code>FC_PAUSE</code> events received since the last status query. Unlike most status variables, this counter does not reset each time you run the query. This counter is reset when the server restarts. </p> <p>See also</p> <p><code>Galera status variable: wsrep_flow_control_recv</code></p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_requested","title":"<code>wsrep_flow_control_requested</code>","text":"<p>This variable returns whether or not a node requested a replication pause.</p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_sent","title":"<code>wsrep_flow_control_sent</code>","text":"<p>The number of <code>FC_PAUSE</code> events sent since the last status query. Unlike most status variables, this counter does not reset each time you run the query. This counter is reset when the server restarts.</p> <p>See also</p> <p><code>Galera status variable: wsrep_flow_control_sent</code></p>"},{"location":"wsrep-status-index.html#wsrep_flow_control_status","title":"<code>wsrep_flow_control_status</code>","text":"<p>This variable shows whether a node has flow control enabled for normal traffic. It does not indicate the status of flow control during SST.</p>"},{"location":"wsrep-status-index.html#wsrep_gcache_pool_size","title":"<code>wsrep_gcache_pool_size</code>","text":"<p>This variable shows the size of the page pool and dynamic memory allocated for GCache (in bytes).</p>"},{"location":"wsrep-status-index.html#wsrep_gcomm_uuid","title":"<code>wsrep_gcomm_uuid</code>","text":"<p>This status variable exposes UUIDs in <code>gvwstate.dat</code>, which are Galera view IDs (thus unrelated to cluster state UUIDs). This UUID is unique for each node. You will need to know this value when using manual eviction feature.</p> <p>See also</p> <p><code>Galera status variable: wsrep_gcomm_uuid</code></p>"},{"location":"wsrep-status-index.html#wsrep_incoming_addresses","title":"<code>wsrep_incoming_addresses</code>","text":"<p>Shows the comma-separated list of incoming node addresses in the cluster.</p> <p>See also</p> <p><code>Galera status variable: wsrep_incoming_addresses</code></p>"},{"location":"wsrep-status-index.html#wsrep_ist_receive_status","title":"<code>wsrep_ist_receive_status</code>","text":"<p>This variable displays the progress of IST for joiner node. If IST is not running, the value is blank. If IST is running, the value is the percentage of transfer completed.</p>"},{"location":"wsrep-status-index.html#wsrep_ist_receive_seqno_end","title":"<code>wsrep_ist_receive_seqno_end</code>","text":"<p>The sequence number of the last transaction in IST.</p>"},{"location":"wsrep-status-index.html#wsrep_ist_receive_seqno_current","title":"<code>wsrep_ist_receive_seqno_current</code>","text":"<p>The sequence number of the current transaction in IST.</p>"},{"location":"wsrep-status-index.html#wsrep_ist_receive_seqno_start","title":"<code>wsrep_ist_receive_seqno_start</code>","text":"<p>The sequence number of the first transaction in IST.</p>"},{"location":"wsrep-status-index.html#wsrep_last_applied","title":"<code>wsrep_last_applied</code>","text":"<p>Sequence number of the last applied transaction.</p>"},{"location":"wsrep-status-index.html#wsrep_last_committed","title":"<code>wsrep_last_committed</code>","text":"<p>Sequence number of the last committed transaction.</p>"},{"location":"wsrep-status-index.html#wsrep_local_bf_aborts","title":"<code>wsrep_local_bf_aborts</code>","text":"<p>Number of local transactions that were aborted by replica transactions while being executed.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_bf_aborts</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_cached_downto","title":"<code>wsrep_local_cached_downto</code>","text":"<p>The lowest sequence number in GCache. This information can be helpful with determining IST and SST. If the value is <code>0</code>, then it means there are no writesets in GCache (usual for a single node).</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_cached_downto</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_cert_failures","title":"<code>wsrep_local_cert_failures</code>","text":"<p>Number of writesets that failed the certification test.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_cert_failures</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_commits","title":"<code>wsrep_local_commits</code>","text":"<p>Number of writesets commited on the node.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_commits</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_index","title":"<code>wsrep_local_index</code>","text":"<p>Node\u2019s index in the cluster.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_index</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_recv_queue","title":"<code>wsrep_local_recv_queue</code>","text":"<p>Current length of the receive queue (that is, the number of writesets waiting to be applied).</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_recv_queue</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_recv_queue_avg","title":"<code>wsrep_local_recv_queue_avg</code>","text":"<p>Average length of the receive queue since the last status query. When this number is bigger than <code>0</code> this means node can\u2019t apply writesets as fast as they are received. This could be a sign that the node is overloaded and it may cause replication throttling.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_recv_queue_avg</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_replays","title":"<code>wsrep_local_replays</code>","text":"<p>Number of transaction replays due to asymmetric lock granularity.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_replays</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_send_queue","title":"<code>wsrep_local_send_queue</code>","text":"<p>Current length of the send queue (that is, the number of writesets waiting to be sent).</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_send_queue</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_send_queue_avg","title":"<code>wsrep_local_send_queue_avg</code>","text":"<p>Average length of the send queue since the last status query. When cluster experiences network throughput issues or replication throttling, this value will be significantly bigger than <code>0</code>.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_send_queue_avg</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_state","title":"<code>wsrep_local_state</code>","text":"<p>Internal Galera cluster FSM state number.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_state</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_state_comment","title":"<code>wsrep_local_state_comment</code>","text":"<p>Internal number and the corresponding human-readable comment of the node\u2019s state. Possible values are:</p> Num Comment Description 1 Joining Node is joining the cluster 2 Donor/Desynced Node is the donor to the node joining the cluster 3 Joined Node has joined the cluster 4 Synced Node is synced with the cluster <p>See also</p> <p><code>Galera status variable: wsrep_local_state_comment</code></p>"},{"location":"wsrep-status-index.html#wsrep_local_state_uuid","title":"<code>wsrep_local_state_uuid</code>","text":"<p>The UUID of the state stored on the node.</p> <p>See also</p> <p><code>Galera status variable: wsrep_local_state_uuid</code></p>"},{"location":"wsrep-status-index.html#wsrep_monitor_status","title":"<code>wsrep_monitor_status</code>","text":"<p>The status of the local monitor (local and replicating actions), apply monitor (apply actions of write-set), and commit monitor (commit actions of write sets). In the value of this variable, each monitor (L: Local, A: Apply, C: Commit) is represented as a last_entered, and last_left pair:</p> <pre><code>wsrep_monitor_status (L/A/C)    [ ( 7, 5), (2, 2), ( 2, 2) ]\n</code></pre> <p>last_entered</p> <p>Shows which transaction or write-set has recently entered the queue.</p> <p>last_left</p> <p>Shows which last transaction or write-set has been executed and left the queue.</p> <p>According to the Galera protocol, transactions can be applied in parallel but must be committed in a given order. This rule implies that there can be multiple transactions in the apply state at a given point of time but transactions are committed sequentially.</p> <p>See also</p> <p><code>Galera Documentation: Database replication</code></p>"},{"location":"wsrep-status-index.html#wsrep_protocol_version","title":"<code>wsrep_protocol_version</code>","text":"<p>Version of the wsrep protocol used.</p> <p>See also</p> <p><code>Galera status variable: wsrep_protocol_version</code></p>"},{"location":"wsrep-status-index.html#wsrep_provider_name","title":"<code>wsrep_provider_name</code>","text":"<p>Name of the wsrep provider (usually <code>Galera</code>).</p> <p>See also</p> <p><code>Galera status variable: wsrep_provider_name</code></p>"},{"location":"wsrep-status-index.html#wsrep_provider_vendor","title":"<code>wsrep_provider_vendor</code>","text":"<p>Name of the wsrep provider vendor (usually <code>Codership Oy</code>)</p> <p>See also</p> <p><code>Galera status variable: wsrep_provider_vendor</code></p>"},{"location":"wsrep-status-index.html#wsrep_provider_version","title":"<code>wsrep_provider_version</code>","text":"<p>Current version of the wsrep provider.</p> <p>See also</p> <p><code>Galera status variable: wsrep_provider_version</code></p>"},{"location":"wsrep-status-index.html#wsrep_ready","title":"<code>wsrep_ready</code>","text":"<p>This variable shows if node is ready to accept queries. If status is <code>OFF</code>, almost all queries will fail with <code>ERROR 1047 (08S01) Unknown Command</code> error (unless the <code>wsrep_on</code> variable is set to <code>0</code>).</p> <p>See also</p> <p><code>Galera status variable: wsrep_ready</code></p>"},{"location":"wsrep-status-index.html#wsrep_received","title":"<code>wsrep_received</code>","text":"<p>Total number of writesets received from other nodes.</p> <p>See also</p> <p><code>Galera status variable: wsrep_received</code></p>"},{"location":"wsrep-status-index.html#wsrep_received_bytes","title":"<code>wsrep_received_bytes</code>","text":"<p>Total size (in bytes) of writesets received from other nodes.</p>"},{"location":"wsrep-status-index.html#wsrep_repl_data_bytes","title":"<code>wsrep_repl_data_bytes</code>","text":"<p>Total size (in bytes) of data replicated.</p>"},{"location":"wsrep-status-index.html#wsrep_repl_keys","title":"<code>wsrep_repl_keys</code>","text":"<p>Total number of keys replicated.</p>"},{"location":"wsrep-status-index.html#wsrep_repl_keys_bytes","title":"<code>wsrep_repl_keys_bytes</code>","text":"<p>Total size (in bytes) of keys replicated.</p>"},{"location":"wsrep-status-index.html#wsrep_repl_other_bytes","title":"<code>wsrep_repl_other_bytes</code>","text":"<p>Total size of other bits replicated.</p>"},{"location":"wsrep-status-index.html#wsrep_replicated","title":"<code>wsrep_replicated</code>","text":"<p>Total number of writesets sent to other nodes.</p> <p>See also</p> <p><code>Galera status variable: wsrep_replicated</code></p>"},{"location":"wsrep-status-index.html#wsrep_replicated_bytes","title":"<code>wsrep_replicated_bytes</code>","text":"<p>Total size of replicated writesets. To compute the actual size of bytes sent over network to cluster peers, multiply the value of this variable by the number of cluster peers in the given <code>network segment</code>.</p> <p>See also</p> <p><code>Galera status variable: wsrep_replicated_bytes</code></p>"},{"location":"wsrep-status-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"wsrep-system-index.html","title":"Index of wsrep system variables","text":"<p>Percona XtraDB Cluster introduces a number of MySQL system variables related to write-set replication.</p>"},{"location":"wsrep-system-index.html#pxc_encrypt_cluster_traffic","title":"<code>pxc_encrypt_cluster_traffic</code>","text":"Option Description Command Line: <code>--pxc-encrypt-cluster-traffic</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>ON</code> <p>Enables automatic configuration of SSL encryption. When disabled, you need to configure SSL manually to encrypt Percona XtraDB Cluster traffic.</p> <p>Possible values:</p> <ul> <li> <p><code>ON</code>, <code>1</code>, <code>true</code>: Enabled (default)</p> </li> <li> <p><code>OFF</code>, <code>0</code>, <code>false</code>: Disabled </p> </li> </ul> <p>For more information, see SSL Automatic Configuration.</p>"},{"location":"wsrep-system-index.html#pxc_maint_mode","title":"<code>pxc_maint_mode</code>","text":"Option Description Command Line: <code>--pxc-maint-mode</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>DISABLED</code> <p>Specifies the maintenance mode for taking a node down without adjusting settings in ProxySQL.</p> <p>The following values are available:</p> <ul> <li> <p><code>DISABLED</code>: This is the default state that tells ProxySQL to route traffic to the node as usual.</p> </li> <li> <p><code>SHUTDOWN</code>: This state is set automatically when you initiate node shutdown.</p> </li> <li> <p><code>MAINTENANCE</code>: You can manually change to this state if you need to perform maintenance on a node without shutting it down.</p> </li> </ul> <p>For more information, see Assisted Maintenance Mode.</p>"},{"location":"wsrep-system-index.html#pxc_maint_transition_period","title":"<code>pxc_maint_transition_period</code>","text":"Option Description Command Line: <code>--pxc-maint-transition-period</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>10</code> (ten seconds) <p>Defines the transition period when you change <code>pxc_maint_mode</code> to <code>SHUTDOWN</code> or <code>MAINTENANCE</code>. By default, the period is set to 10 seconds, which should be enough for most transactions to finish. You can increase the value to accommodate for longer-running transactions.</p> <p>For more information, see Assisted Maintenance Mode.</p>"},{"location":"wsrep-system-index.html#pxc_strict_mode","title":"<code>pxc_strict_mode</code>","text":"Option Description Command Line: <code>--pxc-strict-mode</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>ENFORCING</code> or <code>DISABLED</code> <p>Controls PXC Strict Mode, which runs validations to avoid the use of experimental and unsupported features in Percona XtraDB Cluster.</p> <p>Depending on the actual mode you select, upon encountering a failed validation, the server will either throw an error (halting startup or denying the operation), or log a warning and continue running as normal. The following modes are available:</p> <ul> <li> <p><code>DISABLED</code>: Do not perform strict mode validations and run as normal.</p> </li> <li> <p><code>PERMISSIVE</code>: If a validation fails, log a warning and continue running as normal.</p> </li> <li> <p><code>ENFORCING</code>: If a validation fails during startup, halt the server and throw an error. If a validation fails during runtime, deny the operation and throw an error.</p> </li> <li> <p><code>MASTER</code>: The same as <code>ENFORCING</code> except that the validation of explicit table locking is not performed. This mode can be used with clusters in which write operations are isolated to a single node.</p> </li> </ul> <p>By default, <code>pxc_strict_mode</code> is set to <code>ENFORCING</code>, except if the node is acting as a standalone server or the node is bootstrapping, then <code>pxc_strict_mode</code> defaults to <code>DISABLED</code>.</p> <p>Note</p> <p>When changing the value of <code>pxc_strict_mode</code> from <code>DISABLED</code> or <code>PERMISSIVE</code> to <code>ENFORCING</code> or <code>MASTER</code>, ensure that the following configuration is used:</p> <ul> <li> <p><code>wsrep_replicate_myisam=OFF</code></p> </li> <li> <p><code>binlog_format=ROW</code></p> </li> <li> <p><code>log_output=FILE</code> or <code>log_output=NONE</code> or <code>log_output=FILE,NONE</code></p> </li> </ul> <p>The <code>SERIALIZABLE</code> method of isolation is not allowed in <code>ENFORCING</code> mode.</p> <p>For more information, see PXC Strict Mode.</p>"},{"location":"wsrep-system-index.html#wsrep_applier_fk_checks","title":"<code>wsrep_applier_FK_checks</code>","text":"Option Description Command Line: <code>--wsrep-applier-FK-checks</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>ON</code> <p>As of Percona XtraDB Cluster 8.0.26-16, the <code>wsrep_slave_FK_checks</code> variable is deprecated in favor of this variable.</p> <p>Defines whether foreign key checking is done for applier threads. This is enabled by default.</p> <p>See also</p> <p><code>MySQL wsrep option: wsrep_applier_FK_checks</code></p>"},{"location":"wsrep-system-index.html#wsrep_applier_threads","title":"<code>wsrep_applier_threads</code>","text":"Option Description Command Line: <code>--wsrep-applier-threads</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>1</code> <p>As of Percona XtraDB Cluster 8.0.26-16, the <code>wsrep_slave_threads</code> variable is deprecated and may be removed in a later version. Use the <code>wsrep_applier_threads</code> variable.</p> <p>Specifies the number of threads that can apply replication transactions in parallel. Galera supports true parallel replication that applies transactions in parallel only when it is safe to do so. This variable is dynamic. You can increase/decrease it at any time.</p> <p>Note</p> <p>When you decrease the number of threads, it won\u2019t kill the threads immediately, but stop them after they are done applying current transaction (the effect with an increase is immediate though).</p> <p>If any replication consistency problems are encountered, it\u2019s recommended to set this back to <code>1</code> to see if that resolves the issue. The default value can be increased for better throughput.</p> <p>You may want to increase it as suggested in <code>Codership documentation for flow control</code>: when the node is in <code>JOINED</code> state, increasing the number of replica threads can speed up the catchup to <code>SYNCED</code>.</p> <p>You can also estimate the optimal value for this from <code>wsrep_cert_deps_distance</code> as suggested in the Galera Cluster documentation.</p> <p>For more configuration tips, see Setting Parallel Slave Threads`.</p> <p>See also</p> <p><code>MySQL wsrep option: wsrep_applier_threads</code></p>"},{"location":"wsrep-system-index.html#wsrep_applier_uk_checks","title":"<code>wsrep_applier_UK_checks</code>","text":"Option Description Command Line: <code>--wsrep-applier-UK-checks</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>As of Percona XtraDB Cluster 8.0.26-16, the <code>wsrep_slave_UK_checks</code> variable is deprecated and may be removed in a later version. Use the <code>wsrep_applier_UK_checks</code> variable.</p> <p>Defines whether unique key checking is done for applier threads. This is disabled by default.</p> <p>See also</p> <p><code>MySQL wsrep option: wsrep_applier_UK_checks</code></p>"},{"location":"wsrep-system-index.html#wsrep_auto_increment_control","title":"<code>wsrep_auto_increment_control</code>","text":"Option Description Command Line: <code>--wsrep-auto-increment-control</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>ON</code> <p>Enables automatic adjustment of auto-increment system variables depending on the size of the cluster:</p> <ul> <li> <p><code>auto_increment_increment</code> controls the interval between successive <code>AUTO_INCREMENT</code> column values</p> </li> <li> <p><code>auto_increment_offset</code> determines the starting point for the <code>AUTO_INCREMENT</code> column value</p> </li> </ul> <p>This helps prevent auto-increment replication conflicts across the cluster by giving each node its own range of auto-increment values. It is enabled by default.</p> <p>Automatic adjustment may not be desirable depending on application\u2019s use and assumptions of auto-increments. It can be disabled in source-replica clusters.</p> <p>See also</p> <p><code>MySQL wsrep option: wsrep_auto_increment_control</code></p>"},{"location":"wsrep-system-index.html#wsrep_causal_reads","title":"<code>wsrep_causal_reads</code>","text":"Option Description Command Line: <code>--wsrep-causal-reads</code> Config File: Yes Scope: Global, Session Dynamic: Yes Default Value: <code>OFF</code> <p>In some cases, the source may apply events faster than a replica, which can cause source and replica to become out of sync for a brief moment. When this variable is set to <code>ON</code>, the replica will wait until that event is applied before doing any other queries. Enabling this variable will result in larger latencies.</p> <p>Note</p> <p>This variable was deprecated because enabling it is the equivalent of setting <code>wsrep_sync_wait</code> to <code>1</code>.</p> <p>See also</p> <p><code>MySQL wsrep option: wsrep_causal_reads</code></p>"},{"location":"wsrep-system-index.html#wsrep_certification_rules","title":"<code>wsrep_certification_rules</code>","text":"Option Description Command Line: <code>--wsrep-certification-rules</code> Config File: Yes Scope: Global Dynamic: Yes Values: STRICT, OPTIMIZED Default Value: STRICT <p>This variable controls how certification is done in the cluster, in particular this affects how foreign keys are handled.</p> <p>STRICT    Two INSERTs that happen at about the same time on two different nodes in a    child table, that insert different (non conflicting rows), but both rows    point to the same row in the parent table may result in the certification    failure.</p> <p>OPTIMIZED    Two INSERTs that happen at about the same time on two different nodes in a    child table, that insert different (non conflicting rows), but both rows    point to the same row in the parent table will not result in the    certification failure.</p> <p>See also</p> <p>Galera Cluster Documentation: MySQL wsrep options</p>"},{"location":"wsrep-system-index.html#wsrep_certify_nonpk","title":"<code>wsrep_certify_nonPK</code>","text":"Option Description Command Line: <code>--wsrep-certify-nonpk</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>ON</code> <p>Enables automatic generation of primary keys for rows that don\u2019t have them. Write set replication requires primary keys on all tables to allow for parallel applying of transactions. This variable is enabled by default. As a rule, make sure that all tables have primary keys.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_certify_nonPK</p>"},{"location":"wsrep-system-index.html#wsrep_cluster_address","title":"<code>wsrep_cluster_address</code>","text":"Option Description Command Line: <code>--wsrep-cluster-address</code> Config File: Yes Scope: Global Dynamic: Yes <p>Defines the back-end schema, IP addresses, ports, and options that the node uses when connecting to the cluster. This variable needs to specify at least one other node\u2019s address, which is alive and a member of the cluster. In practice, it is best (but not necessary) to provide a complete list of all possible cluster nodes. The value should be of the following format:</p> <pre><code>&lt;schema&gt;://&lt;address&gt;[?&lt;option1&gt;=&lt;value1&gt;[&amp;&lt;option2&gt;=&lt;value2&gt;]],...\n</code></pre> <p>The only back-end schema currently supported is <code>gcomm</code>. The IP address can contain a port number after a colon. Options are specified after <code>?</code> and separated by <code>&amp;</code>. You can specify multiple addresses separated by commas.</p> <p>For example:</p> <pre><code>wsrep_cluster_address=\"gcomm://192.168.0.1:4567?gmcast.listen_addr=0.0.0.0:5678\"\n</code></pre> <p>If an empty <code>gcomm://</code> is provided, the node will bootstrap itself (that is, form a new cluster). It is not recommended to have empty cluster address in production config after the cluster has been bootstrapped initially. If you want to bootstrap a new cluster with a node, you should pass the <code>--wsrep-new-cluster</code> option when starting.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_cluster_address</p>"},{"location":"wsrep-system-index.html#wsrep_cluster_name","title":"<code>wsrep_cluster_name</code>","text":"Option Description Command Line: <code>--wsrep-cluster-name</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>my_wsrep_cluster</code> <p>Specifies the name of the cluster and must be identical on all nodes. A node checks the value when attempting to connect to the cluster. If the names match, the node connects. </p> <p>Edit the value in the <code>my.cnf</code> in the [galera] section.</p> <pre><code>[galera]\n\n    wsrep_cluster_name=simple-cluster\n</code></pre> <p>Execute <code>SHOW VARIABLES</code> with the LIKE operator to view the variable:</p> <pre><code>mysql&gt; SHOW VARIABLES LIKE 'wsrep_cluster_name';\n</code></pre> Expected output <pre><code>+--------------------+----------------+\n| Variable_name      | Value          |\n+--------------------+----------------+\n| wsrep_cluster_name | simple-cluster |\n+--------------------+----------------+\n</code></pre> <p>Note</p> <p>It should not exceed 32 characters. A node cannot join the cluster if the cluster names do not match. You must re-bootstrap the cluster after a name change.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_cluster_name</p>"},{"location":"wsrep-system-index.html#wsrep_data_home_dir","title":"<code>wsrep_data_home_dir</code>","text":"Option Description Command Line: No Config File: Yes Scope: Global Dynamic: No Default Value: <code>/var/lib/mysql</code> (or whatever path is specified by <code>datadir</code>) <p>Specifies the path to the directory where the wsrep provider stores its files (such as <code>grastate.dat</code>).</p> <p>See also</p> <p>MySQL wsrep option: wsrep_data_home_dir</p>"},{"location":"wsrep-system-index.html#wsrep_dbug_option","title":"<code>wsrep_dbug_option</code>","text":"Option Description Command Line: <code>--wsrep-dbug-option</code> Config File: Yes Scope: Global Dynamic: Yes <p>Defines <code>DBUG</code> options to pass to the wsrep provider.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_dbug_option</p>"},{"location":"wsrep-system-index.html#wsrep_debug","title":"<code>wsrep_debug</code>","text":"Option Description Command Line: <code>--wsrep-debug</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>NONE</code> <p>Enables debug level logging for the database server and <code>wsrep-lib</code> - an integration library for WSREP API with additional convenience for transaction processing. By default, <code>--wsrep-debug</code> variable is disabled.</p> <p>This variable can be used when trying to diagnose problems or when submitting a bug.</p> <p>You can set <code>wsrep_debug</code> in the following <code>my.cnf</code> groups:</p> <ul> <li> <p>Under <code>[mysqld]</code> it enables debug logging for <code>mysqld</code> and the SST script.</p> </li> <li> <p>Under <code>[sst]</code> it enables debug logging for the SST script only.</p> </li> </ul> <p>This variable may be set to one of the following values:</p> <p>NONE</p> <p>No debug-level messages.</p> <p>SERVER</p> <p><code>wsrep-lib</code> general debug-level messages and detailed debug-level messages from the server_state part are printed out.  Galera debug-level logs are printed out.</p> <p>TRANSACTION</p> <p>Same as SERVER + wsrep-lib transaction part</p> <p>STREAMING</p> <p>Same as TRANSACTION + wsrep-lib streaming part</p> <p>CLIENT</p> <p>Same as STREAMING + wsrep-lib client_service part</p> <p>Note</p> <p>Do not enable debugging in production environments, because it logs authentication info (that is, passwords).</p> <p>See also</p> <p>MySQL wsrep option: wsrep_debug</p>"},{"location":"wsrep-system-index.html#wsrep_desync","title":"<code>wsrep_desync</code>","text":"Option Description Command Line: No Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>Defines whether the node should participate in Flow Control. By default, this variable is disabled, meaning that if the receive queue becomes too big, the node engages in Flow Control: it works through the receive queue until it reaches a more manageable size. For more information, see <code>wsrep_local_recv_queue</code> and <code>wsrep_flow_control_interval</code>.</p> <p>Enabling this variable will disable Flow Control for the node. It will continue to receive write-sets that it is not able to apply, the receive queue will keep growing, and the node will keep falling behind the cluster indefinitely.</p> <p>Toggling this back to <code>OFF</code> will require an IST or an SST, depending on how long it was desynchronized. This is similar to cluster desynchronization, which occurs during RSU TOI. Because of this, it\u2019s not a good idea to enable <code>wsrep_desync</code> for a long period of time or for several nodes at once.</p> <p>Note</p> <p>You can also desync a node using the <code>/\\*! WSREP_DESYNC \\*/</code> query comment.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_desync</p>"},{"location":"wsrep-system-index.html#wsrep_dirty_reads","title":"<code>wsrep_dirty_reads</code>","text":"Option Description Command Line: <code>--wsrep-dirty-reads</code> Config File: Yes Scope: Session, Global Dynamic: Yes Default Value: <code>OFF</code> <p>Defines whether the node accepts read queries when in a non-operational state, that is, when it loses connection to the Primary Component. By default, this variable is disabled and the node rejects all queries, because there is no way to tell if the data is correct.</p> <p>If you enable this variable, the node will permit read queries (<code>USE</code>, <code>SELECT</code>, <code>LOCK TABLE</code>, and <code>UNLOCK TABLES</code>), but any command that modifies or updates the database on a non-operational node will still be rejected (including DDL and DML statements, such as <code>INSERT</code>, <code>DELETE</code>, and <code>UPDATE</code>).</p> <p>To avoid deadlock errors, set the <code>wsrep_sync_wait</code> variable to <code>0</code> if you enable <code>wsrep_dirty_reads</code>.</p> <p>As of Percona XtraDB Cluster 8.0.26-16, you can update the variable with a <code>set_var hint</code>.</p> <pre><code>mysql&gt; SELECT @@wsrep_dirty_reads;\n</code></pre> Expected output <pre><code>+-----------------------+\n| @@wsrep_dirty_reads   |\n+=======================+\n| OFF                   |\n+-----------------------+\n</code></pre> <pre><code>mysql&gt; SELECT /*+ SET_VAR(wsrep_dirty_reads=ON) */ @@wsrep_dirty_reads;\n</code></pre> Expected output <pre><code>+-----------------------+\n| @@wsrep_dirty_reads   |\n+=======================+\n| ON                    |\n+-----------------------+\n</code></pre> <p>See also</p> <p>MySQL wsrep option: wsrep_dirty_reads</p>"},{"location":"wsrep-system-index.html#wsrep_drupal_282555_workaround","title":"<code>wsrep_drupal_282555_workaround</code>","text":"Option Description Command Line: <code>--wsrep-drupal-282555-workaround</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>Enables a workaround for MySQL InnoDB bug that affects Drupal (Drupal bug #282555 and MySQL bug #41984). In some cases, duplicate key errors would occur when inserting the <code>DEFAULT</code> value into an <code>AUTO_INCREMENT</code> column.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_drupal_282555_workaround</p>"},{"location":"wsrep-system-index.html#wsrep_forced_binlog_format","title":"<code>wsrep_forced_binlog_format</code>","text":"Option Description Command Line: <code>--wsrep-forced-binlog-format</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>NONE</code> <p>Defines a binary log format that will always be effective, regardless of the client session <code>binlog_format</code> variable value.</p> <p>Possible values for this variable are:</p> <ul> <li> <p><code>ROW</code>: Force row-based logging format</p> </li> <li> <p><code>STATEMENT</code>: Force statement-based logging format</p> </li> <li> <p><code>MIXED</code>: Force mixed logging format</p> </li> <li> <p><code>NONE</code>: Do not force the binary log format and use whatever is set by the <code>binlog_format</code> variable (default)</p> </li> </ul> <p>See also</p> <p>MySQL wsrep option: wsrep_forced_binlog_format</p>"},{"location":"wsrep-system-index.html#wsrep_ignore_apply_errors","title":"<code>wsrep_ignore_apply_errors</code>","text":"Option Description Command Line: <code>--wsrep-ignore-apply-errors</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: 0 <p>Defines the rules of wsrep applier behavior on errors. You can change the settings by editing the <code>my.cnf</code> file under <code>[mysqld]</code> or at runtime.</p> <p>Note</p> <p>In Percona XtraDB Cluster version 8.0.19-10, the default value has changed from <code>7</code> to <code>0</code>. If you have been working with an earlier version of the PXC 8.0 series, you may see different behavior when upgrading to this version or later.</p> <p>The variable has the following options:</p> Value Description WSREP_IGNORE_ERRORS_NONE All replication errors are treated as errors and will shutdown the node (default behavior) WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL DROP DATABASE, DROP TABLE, DROP INDEX, ALTER TABLE are converted to a warning if they result in ER_DB_DROP_EXISTS, ER_BAD_TABLE_ERROR OR ER_CANT_DROP_FIELD_OR_KEY errors WSREP_IGNORE_ERRORS_ON_RECONCILING_DML DELETE events are treated as warnings if they failed because the deleted row was not found (ER_KEY_NOT_FOUND) WSREP_IGNORE_ERRORS_ON_DDL All DDL errors will be treated as a warning WSREP_IGNORE_ERRORS_MAX Infers WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL, WSREP_IGNORE_ERRORS_ON_RECONCILING_DML and WSREP_IGNORE_ERRORS_ON_DDL <p>Setting the variable between <code>0</code> and <code>7</code> has the following behavior:</p> Setting Behavior 0 WSREP_IGNORE_ERRORS_NONE 1 WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL 2 WSREP_IGNORE_ERRORS_ON_RECONCILING_DML 3 WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL, WSREP_IGNORE_ERRORS_ON_RECONCILING_DML 4 WSREP_IGNORE_ERRORS_ON_DDL 5 WSREP_IGNORE_ERRORS_ON_DDL, WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL 6 WSREP_IGNORE_ERRORS_ON_DDL, WSREP_IGNORE_ERRORS_ON_RECONCILING_DML 7 WSREP_IGNORE_ERRORS_ON_DDL, WSREP_IGNORE_ERRORS_ON_RECONCILING_DML, WSREP_IGNORE_ERRORS_ON_RECONCILING_DDL"},{"location":"wsrep-system-index.html#wsrep_min_log_verbosity","title":"<code>wsrep_min_log_verbosity</code>","text":"Option Description Command Line: <code>--wsrep-min-log-verbosity</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: 3 <p>This variable defines the minimum logging verbosity of wsrep/Galera and acts in conjunction with the <code>log_error_verbosity</code> variable. The <code>wsrep_min_log_verbosity</code> has the same values as <code>log_error_verbosity</code>.</p> <p>The actual log verbosity of wsrep/Galera can be greater than the value of <code>wsrep_min_log_verbosity</code> if <code>log_error_verbosity</code> is greater than <code>wsrep_min_log_verbosity</code>.</p> <p>A few examples:</p> log_error_verbosity wsrep_min_log_verbosity MySQL Logs Verbosity wsrep Logs Verbosity 2 3 system error, warning system error, warning, info 1 3 system error system error, warning, info 1 2 system error system error, warning 3 1 system error, warning, info system error, warning, info <p>Note the case where <code>log_error_verbosity=3</code> and <code>wsrep_min_log_verbosity=1</code>. The actual log verbosity of wsrep/Galera is 3 (system error, warning, info) because <code>log_error_verbosity</code> is greater.</p> <p>See also</p> <p>MySQL Documentation: log_error_verbosity</p> <p>Galera Cluster Documentation: Database Server Logs</p>"},{"location":"wsrep-system-index.html#wsrep_load_data_splitting","title":"<code>wsrep_load_data_splitting</code>","text":"Option Description Command Line: <code>--wsrep-load-data-splitting</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>ON</code> <p>Defines whether the node should split large <code>LOAD DATA</code> transactions. This variable is enabled by default, meaning that <code>LOAD DATA</code> commands are split into transactions of 10 000 rows or less.</p> <p>If you disable this variable, then huge data loads may prevent the node from completely rolling the operation back in the event of a conflict, and whatever gets committed stays committed.</p> <p>Note</p> <p>It doesn\u2019t work as expected with <code>autocommit=0</code> when enabled.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_load_data_splitting</p>"},{"location":"wsrep-system-index.html#wsrep_log_conflicts","title":"<code>wsrep_log_conflicts</code>","text":"Option Description Command Line: <code>--wsrep-log-conflicts</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>OFF</code> <p>Defines whether the node should log additional information about conflicts. By default, this variable is disabled and Percona XtraDB Cluster uses standard logging features in MySQL.</p> <p>If you enable this variable, it will also log table and schema where the conflict occurred, as well as the actual values for keys that produced the conflict.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_log_conflicts</p>"},{"location":"wsrep-system-index.html#wsrep_max_ws_rows","title":"<code>wsrep_max_ws_rows</code>","text":"Option Description Command Line: <code>--wsrep-max-ws-rows</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>0</code> (no limit) <p>Defines the maximum number of rows each write-set can contain.</p> <p>By default, there is no limit for the maximum number of rows in a write-set. The maximum allowed value is <code>1048576</code>.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_max_ws_rows</p>"},{"location":"wsrep-system-index.html#wsrep_max_ws_size","title":"<code>wsrep_max_ws_size</code>","text":"Option Description Command Line: <code>--wsrep_max_ws_size</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>2147483647</code> (2 GB) <p>Defines the maximum write-set size (in bytes). Anything bigger than the specified value will be rejected.</p> <p>You can set it to any value between <code>1024</code> and the default <code>2147483647</code>.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_max_ws_size</p>"},{"location":"wsrep-system-index.html#wsrep_mode","title":"<code>wsrep_mode</code>","text":"Option Description Command Line: <code>--wsrep-mode</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <p>This variable has been implemented in Percona XtraDB Cluster 8.0.31.</p> <p>Defines the node behavior according to a specified value. The value is empty or disabled by default.</p> <p>The available values are:</p> <ul> <li> <p><code>Empty</code> - does not change the node behavior.</p> </li> <li> <p><code>IGNORE_NATIVE_REPLICATION_FILTER_RULES</code> - changes the <code>wsrep</code> behavior to ignore native replication filter rules.</p> </li> </ul> <p>See also</p> <p>MySQL wsrep option: wsrep_mode</p>"},{"location":"wsrep-system-index.html#wsrep_node_address","title":"<code>wsrep_node_address</code>","text":"Option Description Command Line: <code>--wsrep-node-address</code> Config File: Yes Scope: Global Dynamic: No Default Value: IP of the first network interface (<code>eth0</code>) and default port (<code>4567</code>) <p>Specifies the network address of the node. By default, this variable is set to the IP address of the first network interface (usually <code>eth0</code> or <code>enp2s0</code>) and the default port (<code>4567</code>).</p> <p>While default value should be correct in most cases, there are situations when you need to specify it manually. For example:</p> <ul> <li> <p>Servers with multiple network interfaces</p> </li> <li> <p>Servers that run multiple nodes</p> </li> <li> <p>Network Address Translation (NAT)</p> </li> <li> <p>Clusters with nodes in more than one region</p> </li> <li> <p>Container deployments, such as Docker</p> </li> <li> <p>Cloud deployments, such as Amazon EC2 (use the global DNS name instead of the local IP address)</p> </li> </ul> <p>The value should be specified in the following format:</p> <pre><code>&lt;ip_address&gt;[:port]\n</code></pre> <p>Note</p> <p>The value of this variable is also used as the default value for the <code>wsrep_sst_receive_address</code> variable and the <code>ist.recv_addr</code> option.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_node_address</p>"},{"location":"wsrep-system-index.html#wsrep_node_incoming_address","title":"<code>wsrep_node_incoming_address</code>","text":"Option Description Command Line: <code>--wsrep-node-incoming-address</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>AUTO</code> <p>Specifies the network address from which the node expects client connections. By default, it uses the IP address from <code>wsrep_node_address</code> and port number 3306.</p> <p>This information is used for the <code>wsrep_incoming_addresses</code> variable which shows all active cluster nodes.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_node_incoming_address</p>"},{"location":"wsrep-system-index.html#wsrep_node_name","title":"<code>wsrep_node_name</code>","text":"Option Description Command Line: <code>--wsrep-node-name</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: The node\u2019s host name <p>Defines a unique name for the node. Defaults to the host name.</p> <p>In many situations, you may use the value of this variable as a means to identify the given node in the cluster as the alternative to using the node address (the value of the <code>wsrep_node_address</code>).</p> <p>Note</p> <p>The variable <code>wsrep_sst_donor</code> is an example where you may only use the value of <code>wsrep_node_name</code> and the node address is not permitted.</p>"},{"location":"wsrep-system-index.html#wsrep_notify_cmd","title":"<code>wsrep_notify_cmd</code>","text":"Option Description Command Line: <code>--wsrep-notify-cmd</code> Config File: Yes Scope: Global Dynamic: No <p>Specifies the notification command that the node should execute whenever cluster membership or local node status changes. This can be used for alerting or to reconfigure load balancers.</p> <p>Note</p> <p>The node will block and wait until the command or script completes and returns before it can proceed. If the script performs any potentially blocking or long-running operations, such as network communication, you should consider initiating such operations in the background and have the script return immediately.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_notify_cmd</p>"},{"location":"wsrep-system-index.html#wsrep_on","title":"<code>wsrep_on</code>","text":"Option Description Command Line: No Config File: No Scope: Session Dynamic: Yes Default Value: <code>ON</code> <p>Defines if current session transaction changes for a node are replicated to the cluster.</p> <p>If set to <code>OFF</code> for a session, no transaction changes are replicated in that session. The setting does not cause the node to leave the cluster, and the node communicates with other nodes.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_on</p>"},{"location":"wsrep-system-index.html#wsrep_osu_method","title":"<code>wsrep_OSU_method</code>","text":"Option Description Command Line: <code>--wsrep-OSU-method</code> Config File: Yes Scope: Global, Session Dynamic: Yes Default Value: <code>TOI</code> <p>Defines the method for Online Schema Upgrade that the node uses to replicate DDL statements.</p> <p>For information on the available methods, see Online Schema upgrade and for information on Non-blocking operations, see NBO.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_OSU_method</p>"},{"location":"wsrep-system-index.html#wsrep_provider","title":"<code>wsrep_provider</code>","text":"Option Description Command Line: <code>--wsrep-provider</code> Config File: Yes Scope: Global Dynamic: No <p>Specifies the path to the Galera library. This is usually <code>/usr/lib64/libgalera_smm.so</code> on CentOS/RHEL and <code>/usr/lib/libgalera_smm.so</code> on Debian/Ubuntu.</p> <p>If you do not specify a path or the value is not valid, the node will behave as standalone instance of MySQL.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_provider</p>"},{"location":"wsrep-system-index.html#wsrep_provider_options","title":"<code>wsrep_provider_options</code>","text":"Option Description Command Line: <code>--wsrep-provider-options</code> Config File: Yes Scope: Global Dynamic: No <p>Specifies optional settings for the replication provider documented in Index of :variable:`wsrep_provider` options. These options affect how various situations are handled during replication.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_provider_options</p>"},{"location":"wsrep-system-index.html#wsrep_recover","title":"<code>wsrep_recover</code>","text":"Option Description Command Line: <code>--wsrep-recover</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>OFF</code> Location: mysqld_safe` <p>Recovers database state after crash by parsing GTID from the log. If the GTID is found, it will be assigned as the initial position for server.</p>"},{"location":"wsrep-system-index.html#wsrep_reject_queries","title":"<code>wsrep_reject_queries</code>","text":"Option Description Command Line: No Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>NONE</code> <p>Defines whether the node should reject queries from clients. Rejecting queries can be useful during upgrades, when you want to keep the node up and apply write-sets without accepting queries.</p> <p>When a query is rejected, the following error is returned:</p> <pre><code>Error 1047: Unknown command\n</code></pre> <p>The following values are available:</p> <ul> <li> <p><code>NONE</code>: Accept all queries from clients (default)</p> </li> <li> <p><code>ALL</code>: Reject all new queries from clients, but maintain existing client connections</p> </li> <li> <p><code>ALL_KILL</code>: Reject all new queries from clients and kill existing client connections</p> </li> </ul> <p>Note</p> <p>This variable doesn\u2019t affect Galera replication in any way, only the applications that connect to the database are affected. If you want to desync a node, use <code>wsrep_desync</code>.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_reject_queries</p>"},{"location":"wsrep-system-index.html#wsrep_replicate_myisam","title":"<code>wsrep_replicate_myisam</code>","text":"Option Description Command Line: <code>--wsrep-replicate-myisam</code> Config File: Yes Scope: Session, Global Dynamic: No Default Value: <code>OFF</code> <p>Defines whether DML statements for MyISAM tables should be replicated. It is disabled by default, because MyISAM replication is still experimental.</p> <p>On the global level, <code>wsrep_replicate_myisam</code> can be set only during startup. On session level, you can change it during runtime as well.</p> <p>For older nodes in the cluster, <code>wsrep_replicate_myisam</code> should work since the TOI decision (for MyISAM DDL) is done on origin node. Mixing of non-MyISAM and MyISAM tables in the same DDL statement is not recommended when <code>wsrep_replicate_myisam</code> is disabled, since if any table in the list is MyISAM, the whole DDL statement is not put under TOI.</p> <p>Note</p> <p>You should keep in mind the following when using MyISAM replication:</p> <ul> <li> <p>DDL (CREATE/DROP/TRUNCATE) statements on MyISAM will be replicated irrespective of <code>wsrep_replicate_myisam</code> value</p> </li> <li> <p>DML (INSERT/UPDATE/DELETE) statements on MyISAM will be replicated only if<code>wsrep_replicate_myisam</code> is enabled</p> </li> <li> <p>SST will get full transfer irrespective of <code>wsrep_replicate_myisam</code>value (it will get MyISAM tables from donor)</p> </li> <li> <p>Difference in configuration of <code>pxc-cluster</code> node on enforce_storage_engine front may result in picking up different engine for the same table on different nodes</p> </li> <li> <p><code>CREATE TABLE AS SELECT</code> (CTAS) statements use TOI replication. MyISAM tables are created and loaded even if <code>wsrep_replicate_myisam</code> is set to ON.</p> </li> </ul>"},{"location":"wsrep-system-index.html#wsrep_restart_replica","title":"<code>wsrep_restart_replica</code>","text":"Option Description Command Line: <code>--wsrep-restart-replica</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>As of Percona XtraDB Cluster 8.0.26-16, the <code>wsrep_restart_slave</code> variable is deprecated in favor of this variable. </p> <p>Defines whether replication replica should be restarted when the node joins back to the cluster. Enabling this can be useful because asynchronous replication replica thread is stopped when the node tries to apply the next replication event while the node is in non-primary state.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_restart_slave</p>"},{"location":"wsrep-system-index.html#wsrep_restart_slave","title":"<code>wsrep_restart_slave</code>","text":"Option Description Command Line: <code>--wsrep-restart-slave</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>As of Percona XtraDB Cluster 8.0.26-16, the <code>wsrep_restart_slave</code> variable is deprecated and may be removed in later versions. Use <code>wsrep_restart_replica</code>.</p> <p>Defines whether replication replica should be restarted when the node joins back to the cluster. Enabling this can be useful because asynchronous replication replica thread is stopped when the node tries to apply the next replication event while the node is in non-primary state.</p>"},{"location":"wsrep-system-index.html#wsrep_retry_autocommit","title":"<code>wsrep_retry_autocommit</code>","text":"Option Description Command Line: <code>--wsrep-retry-autocommit</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>1</code> <p>Specifies the number of times autocommit transactions will be retried in the cluster if it encounters certification errors. In case there is a conflict, it should be safe for the cluster node to simply retry the statement without returning an error to the client, hoping that it will pass next time.</p> <p>This can be useful to help an application using autocommit to avoid deadlock errors that can be triggered by replication conflicts.</p> <p>If this variable is set to <code>0</code>, autocommit transactions won\u2019t be retried.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_retry_autocommit</p>"},{"location":"wsrep-system-index.html#wsrep_rsu_commit_timeout","title":"<code>wsrep_RSU_commit_timeout</code>","text":"Option Description Command Line: <code>--wsrep-RSU-commit-timeout</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>5000</code> Range: From <code>5000</code> (5 milliseconds) to <code>31536000000000</code> (365 days) <p>Specifies the timeout in microseconds to allow active connection to complete COMMIT action before starting RSU.</p> <p>While running RSU it is expected that user has isolated the node and there is no active traffic executing on the node. RSU has a check to ensure this, and waits for any active connection in <code>COMMIT</code> state before starting RSU.</p> <p>By default this check has timeout of 5 milliseconds, but in some cases COMMIT is taking longer. This variable sets the timeout, and has allowed values from the range of (5 milliseconds, 365 days). The value is to be set in microseconds. Unit of variable is in micro-secs so set accordingly.</p> <p>Note</p> <p>RSU operation will not auto-stop node from receiving active traffic. So there could be a continuous flow of active traffic while RSU continues to wait, and that can result in RSU starvation. User is expected to block active RSU traffic while performing operation.</p>"},{"location":"wsrep-system-index.html#wsrep_slave_fk_checks","title":"<code>wsrep_slave_FK_checks</code>","text":"Option Description Command Line: <code>--wsrep-slave-FK-checks</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>ON</code> <p>As of Percona XtraDB Cluster 8.0.26-16, this variable is deprecated and may be removed in a later version. Use the <code>wsrep_applier_FK_checks</code> variable.</p> <p>Defines whether foreign key checking is done for applier threads. This is enabled by default.</p>"},{"location":"wsrep-system-index.html#wsrep_slave_threads","title":"<code>wsrep_slave_threads</code>","text":"Option Description Command Line: <code>--wsrep-slave-threads</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>1</code> <p>As of Percona XtraDB Cluster 8.0.26-16, this variable is deprecated and may be removed in a later version. Use the <code>wsrep_applier_threads</code> variable.</p> <p>Specifies the number of threads that can apply replication transactions in parallel. Galera supports true parallel replication that applies transactions in parallel only when it is safe to do so. This variable is dynamic. You can increase/decrease it at any time.</p> <p>Note</p> <p>When you decrease the number of threads, it won\u2019t kill the threads immediately, but stop them after they are done applying current transaction (the effect with an increase is immediate though).</p> <p>If any replication consistency problems are encountered, it\u2019s recommended to set this back to <code>1</code> to see if that resolves the issue. The default value can be increased for better throughput.</p> <p>You may want to increase it as suggested in <code>Codership documentation for flow control</code>: when the node is in <code>JOINED</code> state, increasing the number of replica threads can speed up the catchup to <code>SYNCED</code>.</p> <p>You can also estimate the optimal value for this from <code>wsrep_cert_deps_distance</code> as suggested in the Galera Cluster documentation.</p> <p>For more configuration tips, see this document.</p>"},{"location":"wsrep-system-index.html#wsrep_slave_uk_checks","title":"<code>wsrep_slave_UK_checks</code>","text":"Option Description Command Line: <code>--wsrep-slave-UK-checks</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>OFF</code> <p>As of Percona XtraDB Cluster 8.0.26-16, this variable is deprecated and may be removed in a later version. Use the <code>wsrep_applier_UK_checks</code> variable.</p> <p>Defines whether unique key checking is done for applier threads. This is disabled by default.</p>"},{"location":"wsrep-system-index.html#wsrep_sr_store","title":"<code>wsrep_SR_store</code>","text":"Option Description Command Line: <code>--wsrep-sr-store</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>table</code> <p>Defines storage for streaming replication fragments. The available values are <code>table</code>, the default value, and <code>none</code>, which disables the variable. </p>"},{"location":"wsrep-system-index.html#wsrep_sst_allowed_methods","title":"<code>wsrep_sst_allowed_methods</code>","text":"Option Description Command Line: <code>--wsrep_sst_allowed_methods</code> Config File: Yes Scope: Global Dynamic: No Default Value: <code>xtrabackup-v2</code> <p>Percona XtraDB Cluster 8.0.20-11.3 adds this variable.</p> <p>This variable limits SST methods accepted by the server for wsrep_sst_method variable. The default value is <code>xtrabackup-v2</code>.</p>"},{"location":"wsrep-system-index.html#wsrep_sst_donor","title":"<code>wsrep_sst_donor</code>","text":"Option Description Command Line: Yes Config File: Yes Scope: Global Dynamic: Yes <p>Specifies a list of nodes (using their <code>wsrep_node_name</code> values) that the current node should prefer as donors for SST and IST.</p> <p>Warning</p> <p>Using IP addresses of nodes instead of node names (the value of <code>wsrep_node_name</code>) as values of <code>wsrep_sst_donor</code> results in an error.</p> <pre><code>ERROR] WSREP: State transfer request failed unrecoverably: 113 (No route\nto host). Most likely it is due to inability to communicate with the\ncluster primary component. Restart required.\n</code></pre> <p>If the value is empty, the first node in SYNCED state in the index becomes the donor and will not be able to serve requests during the state transfer.</p> <p>To consider other nodes if the listed nodes are not available, add a comma at the end of the list, for example:</p> <pre><code>wsrep_sst_donor=node1,node2,\n</code></pre> <p>If you remove the trailing comma from the previous example, then the joining node will consider only <code>node1</code> and <code>node2</code>.</p> <p>Note</p> <p>By default, the joiner node does not wait for more than 100 seconds to receive the first packet from a donor. This is implemented via the <code>sst-initial-timeout</code> option. If you set the list of preferred donors without the trailing comma or believe that all nodes in the cluster can often be unavailable for SST (this is common for small clusters), then you may want to increase the initial timeout (or disable it completely if you don\u2019t mind the joiner node waiting for the state transfer indefinitely).</p> <p>See also</p> <p>MySQL wsrep option: wsrep_sst_donor</p>"},{"location":"wsrep-system-index.html#wsrep_sst_method","title":"<code>wsrep_sst_method</code>","text":"Option Description Command Line: <code>--wsrep-sst-method</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: xtrabackup-v2 <p>Defines the method or script for State Snapshot Transfer (SST).</p> <p>Available values are:</p> <ul> <li> <p><code>xtrabackup-v2</code>: Uses Percona XtraBackup to perform SST. This value is the default. Privileges and permissions for running Percona XtraBackup can be found in Percona XtraBackup documentation. For more information, see Percona XtraBackup SST Configuration.</p> </li> <li> <p><code>skip</code>: Use this to skip SST. Removed in Percona XtraDB Cluster 8.0.33-25. This value can be used when initially starting the cluster and manually restoring the same data to all nodes. This value should not be used permanently because it could lead to data inconsistency across the nodes.</p> </li> <li> <p><code>ist_only</code> : Introduced in Percona XtraDB Cluster 8.0.33-25. This value allows only Incremental State Transfer (IST). If a node cannot sync with the cluster with IST, abort that node\u2019s start. This action leaves the data directory unchanged. This value prevents starting a node, after a manual backup restoration, that does not have a <code>grastate.dat</code> file. This missing file could initiate a full-state transfer (SST) which can be a more time and resource-intensive operation.</p> </li> </ul> <p>Note</p> <p><code>xtrabackup-v2</code> provides support for clusters with GTIDs and async replicas.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_sst_method</p>"},{"location":"wsrep-system-index.html#wsrep_sst_receive_address","title":"<code>wsrep_sst_receive_address</code>","text":"Option Description Command Line: <code>--wsrep-sst-receive-address</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>AUTO</code> <p>Specifies the network address where donor node should send state transfers. By default, this variable is set to <code>AUTO</code>, meaning that the IP address from <code>wsrep_node_address</code> is used.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_sst_receive_address</p>"},{"location":"wsrep-system-index.html#wsrep_start_position","title":"<code>wsrep_start_position</code>","text":"Option Description Command Line: <code>--wsrep-start-position</code> Config File: Yes Scope: Global Dynamic: Yes Default Value: <code>00000000-0000-0000-0000-00000000000000:-1</code> <p>Specifies the node\u2019s start position as <code>UUID:seqno</code>. By setting all the nodes to have the same value for this variable, the cluster can be set up without the state transfer.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_start_position</p>"},{"location":"wsrep-system-index.html#wsrep_sync_wait","title":"<code>wsrep_sync_wait</code>","text":"Option Description Command Line: <code>--wsrep-sync-wait</code> Config File: Yes Scope: Session, Global Dynamic: Yes Default Value: <code>0</code> <p>Controls cluster-wide causality checks on certain statements. Checks ensure that the statement is executed on a node that is fully synced with the cluster.</p> <p>As of Percona XtraDB Cluster 8.0.26-16, you are able to update the variable with a set_var hint.</p> <pre><code>   mysql&gt; SELECT @@wsrep_sync_wait;\n</code></pre> Expected output <pre><code>+---------------------+\n| @@wsrep_sync_wait   |\n+=====================+\n| 3                   |\n+---------------------+\n</code></pre> <pre><code>   mysql&gt; SELECT /*+ SET_VAR(wsrep_sync_wait=7) */ @@wsrep_sync_wait;\n</code></pre> Expected output <pre><code>+---------------------+\n| @@wsrep_sync_wait   |\n+=====================+\n| 7                   |\n+---------------------+\n</code></pre> <p>Note</p> <p>Causality checks of any type can result in increased latency.</p> <p>The type of statements to undergo checks is determined by bitmask:</p> <ul> <li> <p><code>0</code>: Do not run causality checks for any statements. This is the default.</p> </li> <li> <p><code>1</code>: Perform checks for <code>READ</code> statements (including <code>SELECT</code>, <code>SHOW</code>, and <code>BEGIN</code> or <code>START TRANSACTION</code>).</p> </li> <li> <p><code>2</code>: Perform checks for <code>UPDATE</code> and <code>DELETE</code> statements.</p> </li> <li> <p><code>3</code>: Perform checks for <code>READ</code>, <code>UPDATE</code>, and <code>DELETE</code> statements.</p> </li> <li> <p><code>4</code>: Perform checks for <code>INSERT</code> and <code>REPLACE</code> statements.</p> </li> <li> <p><code>5</code>: Perform checks for <code>READ</code>, <code>INSERT</code>, and <code>REPLACE</code> statements.</p> </li> <li> <p><code>6</code>: Perform checks for <code>UPDATE</code>, <code>DELETE</code>, <code>INSERT</code>, and <code>REPLACE</code> statements.</p> </li> <li> <p><code>7</code>: Perform checks for <code>READ</code>, <code>UPDATE</code>, <code>DELETE</code>, <code>INSERT</code>, and <code>REPLACE</code> statements.</p> </li> </ul> <p>Note</p> <p>Setting <code>wsrep_sync_wait</code> to <code>1</code> is the equivalent of setting the deprecated <code>wsrep_causal_reads</code> to <code>ON</code>.</p> <p>See also</p> <p>MySQL wsrep option: wsrep_sync_wait</p>"},{"location":"wsrep-system-index.html#wsrep_trx_fragment_size","title":"<code>wsrep_trx_fragment_size</code>","text":"Option Description Command Line: <code>--wsrep-trx-fragment-size</code> Config File: Yes Scope: Global, Session Dynamic: Yes Default Value: 0 <p>Defines the the streaming replication fragment size. This variable is measured in the value defined by <code>wsrep_trx_fragment_unit</code>. The minimum value is 0 and the maximum value is 2147483647.</p> <p>As of Percona XtraDB Cluster for MySQL 8.0.26-16, you can update the variable with a set_var hint.</p> <pre><code>mysql&gt; SELECT @@@wsrep_trx_fragment_unit; SELECT @@wsrep_trx_fragment_size;\n</code></pre> Expected output <pre><code>+------------------------------+\n| @@wsrep_trx_fragment_unit    |\n+==============================+\n| statements                   |\n+------------------------------+\n| @@wsrep_trx_fragment_size    |\n+------------------------------+\n| 3                            |\n+------------------------------+\n</code></pre> <pre><code>mysql&gt; SELECT /*+ SET_VAR(wsrep_trx_fragment_size=5) */ @@wsrep_trx_fragment_size;\n</code></pre> Expected output <pre><code>+------------------------------+\n| @@wsrep_trx_fragment_size    |\n+==============================+\n| 5                            |\n+------------------------------+\n</code></pre> <p>You can also use set_var() in a data manipulation language (DML) statement. This ability is useful when streaming large statements within a transaction.</p> <pre><code>node1&gt; BEGIN;\nQuery OK, 0 rows affected (0.00 sec)\n\nnode1&gt; INSERT /*+SET_VAR(wsrep_trx_fragment_size = 100)*/ INTO t1 SELECT * FROM t1; \nQuery OK, 65536 rows affected (15.15 sec)\nRecords: 65536 Duplicates: 0 Warnings: 0\n\nnode1&gt; UPDATE /*+SET_VAR(wsrep_trx_fragment_size = 100)*/ t1 SET i=2;\nQuery OK, 131072 rows affected (1 min 35.93 sec)\nRows matched: 131072 Changed: 131072 Warnings: 0\n\nnode2&gt; SET SESSION TRANSACTION_ISOLATION = 'READ-UNCOMMITTED';\nQuery OK, 0 rows affected (0.00 sec)\n\nnode2&gt; SELECT * FROM t1 LIMIT 5;\n+---+\n| i |\n+===+\n| 2 |\n+---+\n| 2 |\n+---+\n| 2 |\n+---+\n| 2 |\n+---+\n| 2 |\n+---+\nnode1&gt; DELETE  /*+SET_VAR(wsrep_trx_fragment_size = 10000)*/ FROM t1;\nQuery OK, 131072 rows affected (15.09 sec)\n</code></pre>"},{"location":"wsrep-system-index.html#wsrep_trx_fragment_unit","title":"<code>wsrep_trx_fragment_unit</code>","text":"Option Description Command Line: <code>--wsrep-trx-fragment-unit</code> Config File: Yes Scope: Global, Session Dynamic: Yes Default Value: \u201cbytes\u201d <p>Defines the type of measure for the <code>wsrep_trx_fragment_size</code>. The possible values are: bytes, rows, statements. </p> <p>As of Percona XtraDB Cluster for MySQL 8.0.26-16, you can update the variable with a set_var hint.</p> <pre><code>mysql&gt; SELECT @@wsrep_trx_fragment_unit; SELECT @@wsrep_trx_fragment_size;\n</code></pre> Expected output <pre><code>+------------------------------+\n| @@wsrep_trx_fragment_unit    |\n+==============================+\n| statements                   |\n+------------------------------+\n| @@wsrep_trx_fragment_size    |\n+------------------------------+\n| 3                            |\n+------------------------------+\n</code></pre> <pre><code>mysql&gt; SELECT /*+ SET_VAR(wsrep_trx_fragment_unit=rows) */ @@wsrep_trx_fragment_unit;\n</code></pre> Expected output <pre><code>+------------------------------+\n| @@wsrep_trx_fragment_unit    |\n+==============================+\n| rows                         |\n+------------------------------+\n</code></pre>"},{"location":"wsrep-system-index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"xtrabackup-sst.html","title":"Percona XtraBackup SST configuration","text":"<p>Percona XtraBackup SST works in two stages:</p> <ol> <li> <p>First it identifies the type of data transfer based on the presence of <code>xtrabackup_ist</code> file on the joiner node.</p> </li> <li> <p>Then it starts data transfer. In case of SST, it empties the data directory except for some files (<code>galera.cache</code>, <code>sst_in_progress</code>, <code>grastate.dat</code>) and then proceeds with SST.</p> <p>In case of IST, it proceeds as before.</p> </li> </ol>"},{"location":"xtrabackup-sst.html#sst-options","title":"SST options","text":"<p>The following options specific to SST can be used in <code>my.cnf</code> under <code>[sst]</code>.</p> <p>Note</p> <ul> <li> <p>Non-integer options which have no default value are disabled if not set.</p> </li> <li> <p><code>:Match: Yes</code> implies that option should match on donor and joiner nodes.</p> </li> <li> <p>SST script reads <code>my.cnf</code> when it runs on either donor or joiner node, not during <code>mysqld</code> startup.</p> </li> <li> <p>SST options must be specified in the main <code>my.cnf</code> file.</p> </li> </ul>"},{"location":"xtrabackup-sst.html#streamfmt","title":"streamfmt","text":"Parameter Description Values: xbstream Default: xbstream Match: Yes <p>Used to specify the Percona XtraBackup streaming format. The only option is the <code>xbstream</code> format. SST fails and generates an error when another format, such as <code>tar</code>, is used.</p> <p>For more information about the <code>xbstream</code> format, see The xbstream Binary.</p>"},{"location":"xtrabackup-sst.html#transferfmt","title":"transferfmt","text":"Parameter Description Values: <code>socat</code>, <code>nc</code> Default: <code>socat</code> Match: Yes <p>Used to specify the data transfer format. The recommended value is the default <code>transferfmt=socat</code> because it allows for socket options, such as transfer buffer sizes. For more information, see socat(1).</p> <p>Note</p> <p>Using <code>transferfmt=nc</code> does not support the SSL-based encryption mode (value <code>4</code> for the <code>encrypt</code> option).</p>"},{"location":"xtrabackup-sst.html#ssl-ca","title":"ssl-ca","text":"<p>Example: ssl-ca=/etc/ssl/certs/mycert.crt</p> <p>Specifies the absolute path to the certificate authority (CA) file for <code>socat</code> encryption based on OpenSSL.</p>"},{"location":"xtrabackup-sst.html#ssl-cert","title":"ssl-cert","text":"<p>Example: ssl-cert=/etc/ssl/certs/mycert.pem</p> <p>Specifies the full path to the certificate file in the PEM format for <code>socat</code> encryption based on OpenSSL.</p> <p>Note</p> <p>For more information about <code>ssl-ca</code> and <code>ssl-cert</code>, see https://www.dest-unreach.org/socat/doc/socat-openssltunnel.html. The <code>ssl-ca</code> is essentially a self-signed certificate in that example, and <code>ssl-cert</code> is the PEM file generated after concatenation of the key and the certificate generated earlier. The names of options were chosen to be compatible with <code>socat</code> parameter names as well as with MySQL\u2019s SSL authentication. For testing you can also download certificates from launchpad.</p> <p>Note</p> <p>Irrespective of what is shown in the example, you can use the same .crt and .pem files on all nodes and it will work, since there is no server-client paradigm here, but rather a cluster with homogeneous nodes.</p>"},{"location":"xtrabackup-sst.html#ssl-key","title":"ssl-key","text":"<p>Example: ssl-key=/etc/ssl/keys/key.pem</p> <p>Used to specify the full path to the private key in PEM format for socat encryption based on OpenSSL.</p>"},{"location":"xtrabackup-sst.html#encrypt","title":"encrypt","text":"Parameter Description Values: 0, 4 Default: 4 Match: Yes <p>Enables SST encryption mode in Percona XtraBackup:</p> <ul> <li> <p>Set <code>encrypt=0</code> to disable SST encryption.</p> </li> <li> <p>Set <code>encrypt=4</code> for SST encryption with SSL files generated by MySQL. This is the recommended value.</p> </li> </ul> <p>Considering that you have all three necessary files:</p> <pre><code>[sst]\nencrypt=4\nssl-ca=ca.pem\nssl-cert=server-cert.pem\nssl-key=server-key.pem\n</code></pre> <p>For more information, see Encrypting PXC Traffic.</p>"},{"location":"xtrabackup-sst.html#sockopt","title":"sockopt","text":"<p>Used to specify key/value pairs of socket options, separated by commas, for example:</p> <pre><code>[sst]\nsockopt=\"retry=2,interval=3\"\n</code></pre> <p>The previous example causes socat to try to connect three times (initial attempt and two retries with a 3-second interval between attempts).</p> <p>This option only applies when socat is used (<code>transferfmt=socat</code>). For more information about socket options, see socat (1).</p> <p>Note</p> <p>You can also enable SSL based compression with <code>sockopt</code>. This can be used instead of the Percona XtraBackup <code>compress</code> option.</p>"},{"location":"xtrabackup-sst.html#ncsockopt","title":"ncsockopt","text":"<p>Used to specify socket options for the <code>netcat</code> transfer format (<code>transferfmt=nc</code>).</p>"},{"location":"xtrabackup-sst.html#progress","title":"progress","text":"<p>Values: 1, path/to/file</p> <p>Used to specify where to write SST progress. If set to <code>1</code>, it writes to MySQL <code>stderr</code>. Alternatively, you can specify the full path to a file. If this is a FIFO, it needs to exist and be open on reader end before itself, otherwise <code>wsrep_sst_xtrabackup</code> will block indefinitely.</p> <p>Note</p> <p>Value of 0 is not valid.</p>"},{"location":"xtrabackup-sst.html#rebuild","title":"rebuild","text":"Parameter Description Values: 0, 1 Default: 0 <p>Used to enable rebuilding of index on joiner node. This is independent of compaction, though compaction enables it. Rebuild of indexes may be used as an optimization.</p> <p>Note</p> <p>#1192834 affects this option.</p>"},{"location":"xtrabackup-sst.html#time","title":"time","text":"Parameter Description Values: 0, 1 Default: 0 <p>Enabling this option instruments key stages of backup and restore in SST.</p>"},{"location":"xtrabackup-sst.html#rlimit","title":"rlimit","text":"<p>Example: rlimit=128k</p> <p>Used to set a a ratelimit in bytes. Add a suffix (k, m, g, t) to specify units. For example, <code>128k</code> is 128 kilobytes. For more information, see pv(1).</p> <p>Note</p> <p>Rate is limited on donor node. The rationale behind this is to not allow SST to saturate the donor\u2019s regular cluster operations or to limit the rate for other purposes.</p>"},{"location":"xtrabackup-sst.html#use_extra","title":"use_extra","text":"Parameter Description Values: 0, 1 Default: 0 <p>Used to force SST to use the thread pool\u2019s extra_port. Make sure that thread pool is enabled and the <code>extra_port</code> option is set in <code>my.cnf</code> before you enable this option.</p>"},{"location":"xtrabackup-sst.html#cpat","title":"cpat","text":"<p>Default: <code>'.\\*\\\\.pem$\\\\|.\\*init\\\\.ok$\\\\|.\\*galera\\\\.cache$\\\\|.\\*sst_in_progress$\\\\|.\\*\\\\.sst$\\\\|.\\*gvwstate\\\\.dat$\\\\|.\\*grastate\\\\.dat$\\\\|.\\*\\\\.err$\\\\|.\\*\\\\.log$\\\\|.\\*RPM_UPGRADE_MARKER$\\\\|.\\*RPM_UPGRADE_HISTORY$'</code></p> <p>Used to define the files that need to be retained in the datadir before running SST, so that the state of the other node can be restored cleanly.</p> <p>For example:</p> <pre><code>[sst]\ncpat='.*galera\\.cache$\\|.*sst_in_progress$\\|.*grastate\\.dat$\\|.*\\.err$\\|.*\\.log$\\|.*RPM_UPGRADE_MARKER$\\|.*RPM_UPGRADE_HISTORY$\\|.*\\.xyz$'\n</code></pre> <p>Note</p> <p>This option can only be used when <code>wsrep_sst_method</code> is set to <code>xtrabackup-v2</code> (which is the default value).</p>"},{"location":"xtrabackup-sst.html#compressor","title":"compressor","text":"Parameter Description Default: not set (disabled) Example: compressor=\u2019zstd -T0 -2\u2019"},{"location":"xtrabackup-sst.html#decompressor","title":"decompressor","text":"Parameter Description Default: not set (disabled) Example: decompressor=\u2019zstd -T0 -dc\u2019 <p>Stream-based compression and decompression are performed on the stream, in contrast to performing decompression after streaming to disk, which involves additional I/O. The savings are considerable, up to half the I/O on the JOINER node.</p> <p>You can use any compression utility which works on stream: <code>gzip</code>, <code>pigz</code>, <code>zstd</code>, and others. The <code>pigz</code> or <code>zstd</code> options are multi-threaded. At a minimum, the compressor must be set on the DONOR and the decompressor on JOINER.</p> <p>You must install the related binaries, otherwise SST aborts.</p> <p>compressor=\u2019pigz\u2019 decompressor=\u2019pigz -dc\u2019</p> <p>compressor=\u2019gzip\u2019 decompressor=\u2019gzip -dc\u2019</p> <p>To revert to the XtraBackup-based compression, set <code>compress</code> under <code>[xtrabackup]</code>. You can define both the compressor and the decompressor, although you will be wasting CPU cycles.</p> <pre><code>[xtrabackup]\ncompress\n\n-- compact has led to some crashes\n</code></pre>"},{"location":"xtrabackup-sst.html#inno-backup-opts","title":"inno-backup-opts","text":""},{"location":"xtrabackup-sst.html#inno-apply-opts","title":"inno-apply-opts","text":""},{"location":"xtrabackup-sst.html#inno-move-opts","title":"inno-move-opts","text":"Parameter Description Default: Empty Type: Quoted String <p>This group of options is used to pass XtraBackup options for backup, apply, and move stages. The SST script doesn\u2019t alter, tweak, or optimize these options.</p> <p>Note</p> <p>Although these options are related to XtraBackup SST, they cannot be specified in <code>my.cnf</code>, because they are for passing innobackupex options.</p>"},{"location":"xtrabackup-sst.html#sst-initial-timeout","title":"sst-initial-timeout","text":"Parameter Description Default: 100 Unit: seconds <p>This option is used to configure initial timeout (in seconds) to receive the first packet via SST. This has been implemented, so that if the donor node fails somewhere in the process, the joiner node will not hang up and wait forever.</p> <p>By default, the joiner node will not wait for more than 100 seconds to get a donor node. The default should be sufficient, however, it is configurable, so you can set it appropriately for your cluster. To disable initial SST timeout, set <code>sst-initial-timeout=0</code>.</p> <p>Note</p> <p>If you are using <code>wsrep_sst_donor</code>, and you want the joiner node to strictly wait for donors listed in the variable and not fall back (that is, without a terminating comma at the end), and there is a possibility of all nodes in that variable to be unavailable, disable initial SST timeout or set it to a higher value (maximum threshold that you want the joiner node to wait). You can also disable this option (or set it to a higher value) if you believe all other nodes in the cluster can potentially become unavailable at any point in time (mostly in small clusters) or there is a high network latency or network disturbance (which can cause donor selection to take longer than 100 seconds).</p>"},{"location":"xtrabackup-sst.html#sst-idle-timeout","title":"sst-idle-timeout","text":"Parameter Description Default: 120 Unit: seconds <p>This option configures the time the SST operation waits on the joiner to receive more data. The size of the joiner\u2019s sst directory is checked for the amount of data received. For example, the directory has received 50MB of data. The operation rechecks the data size after the default value, 120 seconds, has elapsed. If the data size is still 50MB, this operation is aborted. If the data has increased, the operation continues.</p> <p>An example of setting the option:</p> <pre><code>[sst]\nsst-idle-timeout=0\n</code></pre>"},{"location":"xtrabackup-sst.html#tmpdir","title":"tmpdir","text":"Parameter Description Default: Empty Unit: /path/to/tmp/dir <p>This option specifies the location for storing the temporary file on a donor node where the transaction log is stored before streaming or copying it to a remote host.</p> <p>Note</p> <p>This option can be used on joiner node to specify non-default location to receive temporary SST files. This location must be large enough to hold the contents of the entire database. If tmpdir is empty then default location datadir/.sst will be used.</p> <p>The <code>tmpdir</code> option can be set in the following <code>my.cnf</code> groups:</p> <ul> <li> <p><code>[sst]</code> is the primary location (others are ignored)</p> </li> <li> <p><code>[xtrabackup]</code> is the secondary location (if not specified under <code>[sst]</code>)</p> </li> <li> <p><code>[mysqld]</code> is used if it is not specified in either of the above </p> </li> </ul> <p><code>wsrep_debug</code></p> <p>Specifies whether additional debugging output for the database server error log should be enabled. Disabled by default.</p> <p>This option can be set in the following <code>my.cnf</code> groups:</p> <ul> <li> <p>Under <code>[mysqld]</code> it enables debug logging for <code>mysqld</code> and the SST script</p> </li> <li> <p>Under <code>[sst]</code> it enables debug logging for the SST script only</p> </li> </ul>"},{"location":"xtrabackup-sst.html#encrypt_threads","title":"encrypt_threads","text":"Parameter Description Default: <code>4</code> <p>Specifies the number of threads that XtraBackup should use for encrypting data (when <code>encrypt=1</code>). The value is passed using the <code>--encrypt-threads</code> option in XtraBackup.</p> <p>This option affects only SST with XtraBackup and should be specified under the <code>[sst]</code> group.</p>"},{"location":"xtrabackup-sst.html#backup_threads","title":"backup_threads","text":"Parameter Description Default: <code>4</code> <p>Specifies the number of threads that XtraBackup should use to create backups. See the <code>--parallel</code> option in XtraBackup.</p> <p>This option affects only SST with XtraBackup and should be specified under the <code>[sst]</code> group.</p>"},{"location":"xtrabackup-sst.html#xtrabackup-sst-dependencies","title":"XtraBackup SST dependencies","text":"<p>Each suppored version of Percona XtraDB Cluster is tested against a specific version of Percona XtraBackup:</p> <ul> <li> <p>Percona XtraDB Cluster 5.6 requires Percona XtraBackup 2.3</p> </li> <li> <p>Percona XtraDB Cluster 5.7 requires Percona XtraBackup 2.4</p> </li> <li> <p>Percona XtraDB Cluster 8.0 requires Percona XtraBackup 8.0</p> </li> </ul> <p>Other combinations are not guaranteed to work.</p> <p>The following are optional dependencies of Percona XtraDB Cluster introduced by <code>wsrep_sst_xtrabackup-v2</code> (except for obvious and direct dependencies):</p> <ul> <li> <p><code>qpress</code> for decompression.   It is an optional dependency of Percona XtraBackup   and it is available in our software repositories.</p> </li> <li> <p><code>my_print_defaults</code> to extract values from <code>my.cnf</code>.   Provided by the server package.</p> </li> <li> <p><code>openbsd-netcat</code> or <code>socat</code> for transfer.   <code>socat</code> is a direct dependency of Percona XtraDB Cluster and it is the default.</p> </li> <li> <p><code>xbstream</code> or <code>tar</code> for streaming. <code>xbstream</code> is the default.</p> </li> <li> <p><code>pv</code> is required for <code>progress</code> and <code>rlimit</code>.</p> </li> <li> <p><code>mkfifo</code> is required for <code>progress</code>. Provided by <code>coreutils</code>.</p> </li> <li> <p><code>mktemp</code> is required. Provided by <code>coreutils</code>.</p> </li> <li> <p><code>which</code> is required.</p> </li> </ul>"},{"location":"xtrabackup-sst.html#xtrabackup-based-encryption","title":"XtraBackup-based encryption","text":"<p>Settings related to XtraBackup-based Encryption are no longer allowed in PXC 8.0 when used for SST. If it is detected that XtraBackup-based Encryption is enabled, PXC will produce an error.</p> <p>The XtraBackup-based Encryption is enabled when you specify any of the following options under <code>[xtrabackup]</code> in <code>my.cnf</code>:</p> <ul> <li> <p><code>encrypt</code></p> </li> <li> <p><code>encrypt-key</code></p> </li> <li> <p><code>encrypt-key-file</code></p> </li> </ul>"},{"location":"xtrabackup-sst.html#memory-allocation","title":"Memory allocation","text":"<p>The amount of memory for XtraBackup is defined by the <code>--use-memory</code> option. You can pass it using the <code>inno-apply-opts</code> option under <code>[sst]</code> as follows:</p> <pre><code>[sst]\ninno-apply-opts=\"--use-memory=500M\"\n</code></pre> <p>If it is not specified, the <code>use-memory</code> option under <code>[xtrabackup]</code> will be used:</p> <pre><code>[xtrabackup]\nuse-memory=32M\n</code></pre> <p>If neither of the above are specified, the size of the InnoDB memory buffer will be used:</p> <pre><code>[mysqld]\ninnodb_buffer_pool_size=24M\n</code></pre>"},{"location":"xtrabackup-sst.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"xtradb-cluster-version-numbers.html","title":"Understand version numbers","text":"<p>A version number identifies the product release. The product contains the latest Generally Available (GA) features at the time of that release.</p> 8.0.20 -11. 2 Base version Minor build Custom build <p>Percona uses semantic version numbering, which follows the pattern of base version, minor build, and an optional custom build. Percona assigns unique, non-negative integers in increasing order for each minor build release. The version number combines the base Percona Server for MySQL version number, the minor build version, and the custom build version, if needed.</p> <p>The version numbers for Percona XtraDB Cluster 8.0.20-11.2 define the following information:</p> <ul> <li> <p>Base version - the leftmost set of numbers that indicate the Percona Server for MySQL version used as a base. An increase in the base version resets the minor build version and the custom build version to 0. </p> </li> <li> <p>Minor build version - an internal number that increases with every Percona XtraDB Cluster release, and the custom build number is reset to 0.</p> </li> <li> <p>Custom build version - an optional number assigned to custom builds used for bug fixes. The features don\u2019t change unless the fixes include those features. For example, Percona XtraDB Cluster 8.0.20-11.1, 8.0.20-11.2, and 8.0.20-11.3 are based on the same Percona Server for MySQL version and minor build version but are custom build versions.</p> </li> </ul>"},{"location":"xtradb-cluster-version-numbers.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"yum.html","title":"Install Percona XtraDB Cluster on Red Hat Enterprise Linux and CentOS","text":"<p>A list of the supported platforms by products and versions is available in Percona Software and Platform Lifecycle.</p> <p>We gather Telemetry data in the Percona packages and Docker images.</p> <p>You can install Percona XtraDB Cluster with the following methods:</p> <ul> <li> <p>Use the official repository using YUM</p> </li> <li> <p>Download and manually install the Percona XtraDB Cluster packages from Percona Product Downloads.</p> </li> <li> <p>Use the Percona Software repositories </p> </li> </ul> <p>This documentation describes using the Percona Software repositories.</p>"},{"location":"yum.html#prerequisites","title":"Prerequisites","text":"<p>Installing Percona XtraDB Cluster requires that you either are logged in as a user with root privileges or can run commands with sudo.</p> <p>Percona XtraDB Cluster requires the specific ports for communication. Make sure that the following ports are available:</p> <ul> <li> <p>3306</p> </li> <li> <p>4444</p> </li> <li> <p>4567</p> </li> <li> <p>4568</p> </li> </ul> <p>For information on SELinux, see Enabling SELinux.</p>"},{"location":"yum.html#install-from-percona-software-repository","title":"Install from Percona Software Repository","text":"<p>For more information on the Percona Software repositories and configuring Percona Repositories with <code>percona-release</code>, see the Percona Software Repositories Documentation.</p> Install on Red Hat 7Install on Red Hat 8 or later <pre><code>$ sudo yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm\n$ sudo percona-release enable-only pxc-80 release\n$ sudo percona-release enable tools release\n$ sudo yum install percona-xtradb-cluster\n</code></pre> <pre><code>$ sudo yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm\n$ sudo percona-release setup pxc-80\n$ sudo yum install percona-xtradb-cluster\n</code></pre>"},{"location":"yum.html#after-installation","title":"After installation","text":"<p>After the installation, start the <code>mysql</code> service and find the temporary password using the <code>grep</code> command. </p> <pre><code>$ sudo service mysql start\n$ sudo grep 'temporary password' /var/log/mysqld.log\n</code></pre> <p>Use the temporary password to log into the server:</p> <pre><code>$ mysql -u root -p\n</code></pre> <p>Run an <code>ALTER USER</code> statement to change the temporary password, exit the client, and stop the service.</p> <pre><code>mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'rootPass';\nmysql&gt; exit\n$ sudo service mysql stop\n</code></pre>"},{"location":"yum.html#next-steps","title":"Next steps","text":"<p>Configure the node according to the procedure described in Configuring Nodes for Write-Set Replication.</p>"},{"location":"yum.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.29-21.html","title":"Percona XtraDB Cluster 8.0.29-21 (2022-09-12)","text":"<p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.29-21.html#release-highlights","title":"Release Highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.29-21 (2022-08-08) release notes.</p> <p>The improvements and bug fixes for MySQL 8.0.29, provided by Oracle, and included in Percona Server for MySQL are the following:</p> <p>The Performance Schema tracks if a query was processed on the PRIMARY engine, InnoDB, or a SECONDARY engine, HeatWave. An EXECUTION_ENGINE column, which indicates the engine used, was added to the Performance Schema statement event tables and the sys.processlist and the sys.x$processlist views.</p> <p>Added support for the IF NOT EXISTS option for the CREATE FUNCTION, CREATE PROCEDURE, and CREATE TRIGGER statements.</p> <p>Added support for ALTER TABLE \u2026 DROP COLUMN ALGORITHM=INSTANT.</p> <p>An anonymous user with the PROCESS privilege was unable to select processlist table rows.</p> <p>Find the full list of bug fixes and changes in the MySQL 8.0.29 Release Notes.</p> <p>Note</p> <p>Percona Server for MySQL has changed the default for the supported DDL column operations to ALGORITHM=INPLACE. This change fixes the corruption issue with the INSTANT ADD/DROP COLUMNS (find more details in PS-8292.</p> <p>In MySQL 8.0.29, the default setting for supported DDL operations is ALGORITHM=INSTANT. You can explicitly specify ALGORITHM=INSTANT in DDL column operations.</p>"},{"location":"release-notes/8.0.29-21.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3982: When the replica node is also an asynchronous slave and, while joining the cluster, this node was not ready to accept connections, a SQL thread failed at the start.</p> </li> <li> <p>PXC-3118: A fix for when, using a thread pool, a brute force abort for a metadata locking (MDL) subsystem conflict stalled.</p> </li> <li> <p>PXC-3999: The cluster was stalled on <code>Waiting for acl cache lock</code> with concurrent user DDL commands.</p> </li> </ul>"},{"location":"release-notes/8.0.29-21.html#packaging-notes","title":"Packaging Notes","text":"<p>Debian 9 is no longer supported.</p>"},{"location":"release-notes/8.0.29-21.html#useful-links","title":"Useful Links","text":"<ul> <li> <p>The Percona XtraDB Cluster installation instructions</p> </li> <li> <p>The Percona XtraDB Cluster downloads</p> </li> <li> <p>The Percona XtraDB Cluster GitHub location</p> </li> <li> <p>To contribute to the documentation, review the Documentation Contribution Guide</p> </li> </ul>"},{"location":"release-notes/8.0.29-21.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.30-22.html","title":"Percona XtraDB Cluster 8.0.30-22.md (2022-12-28)","text":"Release date December 28, 2022 Install instructions Install Percona XtraDB Cluster Download this version Percona XtraDB Cluster <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p> <p>For paid support, managed services or consulting services, contact Percona Sales.</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.30-22.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.30-22 (2022-11-21) release notes.</p> <p>Note</p> <p>The following Percona Server for MySQL 8.0.30 features are not supported in this version of Percona XtraDB Cluster: </p> <ul> <li> <p>Amazon Key Management Service</p> </li> <li> <p>Key Management Interoperability Protocol</p> </li> </ul> <p>The features will be supported in the next version of Percona XtraDB Cluster.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.30 and included in Percona Server for MySQL are the following:</p> <ul> <li> <p>Supports Generated Invisible Primary Keys(GIPK). This feature automatically adds a primary key to InnoDB tables without a primary key. The generated key is always named <code>my_row_id</code>. The GIPK feature is not enabled by default. Enable the feature by setting <code>sql_generate_invisible_primary_key</code> to ON.</p> </li> <li> <p>The InnoDB_doublewrite system has two new settings:</p> </li> <li> <p><code>DETECT_ONLY</code>. This setting allows only metadata to be written to the doublewrite buffer. Database page content is not written to the buffer. Recovery does not use the buffer to fix incomplete page writes. Use this setting only when you need to detect incomplete page writes.</p> </li> <li> <p><code>DETECT_AND_RECOVER</code>. This setting is equivalent to the current ON setting. The doublewrite buffer is enabled. Database page content is written to the buffer and the buffer is accessed to fix incomplete page writes during recovery.</p> </li> <li> <p>The <code>-skip_host_cache</code> server option is deprecated and will be removed in a future release. Use <code>SET GLOBAL host_cache_size</code>= 0 or set <code>host_cache_size</code> = 0.</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.30 release notes.</p>"},{"location":"release-notes/8.0.30-22.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-3639: The buffer overflow was not considered when using <code>strncpy</code> in <code>WSREP</code> patch. </p> </li> <li> <p>PXC-3821: The truncation of the <code>performance_schema</code> table on a node was replicated across the cluster.</p> </li> <li> <p>PXC-4012: The replica node left the cluster when executing <code>CREATE USER</code> with <code>password_history</code> option simultaneously.</p> </li> <li> <p>PXC-4033: When the prepared statement is executed in parallel to the DDL modifying the table that the prepared statement uses, the server fails with an assertion saying that the prepared statement transaction was aborted, so it cannot be committed.</p> </li> <li> <p>PXC-4048: <code>gra_x_y_v2.log</code> files created in case of failures were empty.</p> </li> </ul>"},{"location":"release-notes/8.0.30-22.html#platform-support","title":"Platform support","text":"<ul> <li> <p>Percona XtraDB Cluster 8.0.30-22 supports Oracle Linux/Red Hat Enterprise Linux 9.</p> </li> <li> <p>Percona XtraDB Cluster 8.0.30-22 supports Ubuntu 22.04.</p> </li> </ul>"},{"location":"release-notes/8.0.30-22.html#useful-links","title":"Useful links","text":"<ul> <li> <p>The Percona XtraDB Cluster GitHub location</p> </li> <li> <p>Contribute to the documentation</p> </li> </ul>"},{"location":"release-notes/8.0.30-22.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.31-23.2.html","title":"Percona XtraDB Cluster 8.0.31-23.2 (2023-04-04)","text":"Release date April 04, 2023 Install instructions Install Percona XtraDB Cluster <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.31-23.2.html#release-highlights","title":"Release highlights","text":"<p>This release of Percona XtraDB Cluster 8.0.31-23 includes the fix to the security vulnerability CVE-2022-25834 with PXB-2977.</p>"},{"location":"release-notes/8.0.31-23.2.html#useful-links","title":"Useful links","text":"<p>The Percona XtraDB Cluster GitHub location</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.31-23.2.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.31-23.html","title":"Percona XtraDB Cluster 8.0.31-23 (2023-03-14)","text":"Release date 2024-04-03 Install instructions Install Percona XtraDB Cluster <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.31-23.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.31-23 (2022-11-21) release notes.</p> <p>This release adds the following feature in tech preview:</p> <ul> <li>GCache encryption and Write-Set cache encryption</li> </ul> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.31 and included in Percona Server for MySQL are the following:</p> <ul> <li> <p>MySQL adds support for the SQL standard <code>INTERSECT</code> and <code>EXCEPT</code> table operators.</p> </li> <li> <p>InnoDB supports parallel index builds. This improves index build performance. The sorted index entries are loaded into a B-tree in a multithread. In previous releases, this action was performed by a single thread.</p> </li> <li> <p>The Performance and sys schemas show metrics for the global and session memory limits introduced in MySQL 8.0.28.</p> <p>The following columns have been added to the Performance Schema tables:</p> Performance Schema tables Columns SETUP_INSTRUMENTS FLAGS THREADS CONTROLLED_MEMORY, MAX_CONTROLLED_MEMORY, TOTAL_MEMORY, MAX_TOTAL_MEMORY EVENTS_STATEMENTS_CURRENT, EVENTS_STATEMENTS_HISTORY, EVENTS_STATEMENTS_HISTORY_LONG MAX_CONTROLLED_MEMORY, MAX_TOTAL_MEMORY Statement Summary Tables MAX_CONTROLLED_MEMORY, MAX_TOTAL_MEMORY Performance Schema Connection Tables MAX_SESSION_CONTROLLED_MEMORY, MAX_SESSION_TOTAL_MEMORY PREPARED_STATEMENTS_INSTANCES MAX_CONTROLLED_MEMORY, MAX_TOTAL_MEMORY <p>The following columns have been added to the sys schema <code>STATEMENT_ANALYSIS</code> and <code>X$STATEMENT_ANALYSIS</code> views:</p> <ul> <li> <p>MAX_CONTROLLED_MEMORY</p> </li> <li> <p>MAX_TOTAL_MEMORY</p> </li> </ul> <p>The <code>controlled_by_default</code> flag has been added to the <code>PROPERTIES</code> column of the <code>SETUP_INSTRUMENTS</code> table.</p> <p>Now, you can add and remove non-global memory instruments to the set of controlled-memory instruments. To do this, set the value of the <code>FLAGS</code> column of <code>SETUP_INSTRUMENTS</code>.</p> <pre><code>SQL&gt; UPDATE PERFORMANCE_SCHEMA.SETUP_INTRUMENTS SET FLAGS=\"controlled\" \nWHERE NAME='memory/sql/NET::buff';\n</code></pre> </li> <li> <p>The <code>audit_log_flush</code> variable has been deprecated and will be removed in future releases.</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.31 Release Notes.</p>"},{"location":"release-notes/8.0.31-23.html#new-features","title":"New Features","text":"<ul> <li> <p>Added support for GCache and Write-Set encryption.</p> </li> <li> <p>PXC-3574: Added support for the <code>wsrep_mode</code> variable.</p> </li> </ul>"},{"location":"release-notes/8.0.31-23.html#improvement","title":"Improvement","text":"<ul> <li>The Data at Rest encryption now encrypts Record-Set cache.</li> </ul>"},{"location":"release-notes/8.0.31-23.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-3989: Added support for keyring components. </p> </li> <li> <p>PXC-4077: Injecting an empty transaction caused GTID inconsistencies between nodes.</p> </li> <li> <p>PXC-4120: Enabling wsrep-debug created multiple entries of <code>wsrep_commit_empty()</code> in the Error log.</p> </li> <li> <p>PXC-4126: When stream replication and TOI are active, the <code>CREATE USER</code> statement was not allowed.</p> </li> <li> <p>PXC-4116: A PXC replica node stalled with parallel asynchronous parallel replication.</p> </li> <li> <p>PXC-4148: A fix for the <code>MDL conflict db= ticket=10 solved by abort</code> error.</p> </li> </ul>"},{"location":"release-notes/8.0.31-23.html#useful-links","title":"Useful links","text":"<p>The Percona XtraDB Cluster GitHub location</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.31-23.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.32-24.2.html","title":"Percona XtraDB Cluster 8.0.32-24.2 (2023-05-24)","text":"Release date May 24, 2023 Install instructions Install Percona XtraDB Cluster <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.32-24.2.html#release-highlights","title":"Release highlights","text":"<p>This release of Percona XtraDB Cluster 8.0.32-24 includes the fix for PXC-4211.</p>"},{"location":"release-notes/8.0.32-24.2.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-4211: The server exited on the binary log rotation.</p> </li> <li> <p>PXC-4217: The cluster can intermittently abort a node on an insert query.</p> </li> <li> <p>PXC-4222: A node abruptly leaving the cluster causes the applier thread to hang on all the remaining nodes.</p> </li> </ul>"},{"location":"release-notes/8.0.32-24.2.html#useful-links","title":"Useful links","text":"<p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.32-24.2.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.32-24.html","title":"Percona XtraDB Cluster 8.0.32-24 (2023-04-18)","text":"Release date April 18, 2023 Install instructions Install Percona XtraDB Cluster <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.32-24.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.32-24 (2023-03-20) release notes.</p> <p>Percona decided to revert the following MySQL bug fix:</p> <p>The data and the GTIDs backed up by mysqldump were inconsistent when the options <code>--single-transaction</code> and <code>--set-gtid-purged=ON</code> were both used. It was because in between the transaction started by mysqldump and the fetching of GTID_EXECUTED, GTIDs on the server could have increased already. With this fixed, a FLUSH TABLES <code>WITH READ LOCK</code> is performed before the fetching of <code>GTID_EXECUTED</code> to ensure its value is consistent with the snapshot taken by mysqldump.</p> <p>The MySQL fix also added a requirement when using \u2013single-transaction and executing FLUSH TABLES WITH READ LOCK for the RELOAD privilege. (MySQL bug #109701, MySQL bug #105761)</p> <p>The Percona Server version of the <code>mysqldump</code> utility, in some modes, can be used with MySQL Server. This utility provides a temporary workaround for the \u201cadditional RELOAD privilege\u201d limitation introduced by Oracle MySQL Server 8.0.32. </p> <p>For more information, see the Percona Performance Blog A Workaround for the \u201cRELOAD/FLUSH_TABLES privilege required\u201d Problem When Using Oracle mysqldump 8.0.32.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.32 and included in Percona Server for MySQL are the following:</p> <ul> <li> <p>A replica can add a Generated Invisible Primary Keys(GIPK) to any InnoDB table. To achieve this behavior, the <code>GENERATE</code> value is added as a possible value for the <code>CHANGE REPLICATION SOURCE TO</code> statement\u2019s <code>REQUIRE_TABLE_PRIMARY_KEY_CHECK</code> option.</p> </li> <li> <p>The <code>REQUIRE_TABLE_PRIMARY_KEY_CHECK = GENERATE</code> option can be used on a per-channel basis.</p> </li> <li> <p>Setting <code>sql_generate_invisible_primary_key</code> on the source is ignored by a replica because this variable is not replicated. This behavior is inherited from the previous releases.</p> </li> <li> <p>An upgrade from 8.0.28 caused undetectable problems, such as server exit and corruption.</p> </li> <li> <p>A fix for after an upgrade, all columns added with <code>ALGORITHM=INSTANT</code> materialized and have <code>version=0</code> for any new row inserted. Now, a column added with <code>ALGORITHM=INSTANT</code> fails if the maximum possible size of a row exceeds the row size limit, so that all new rows with materialized <code>ALGORITHM=INSTANT</code> columns are within row size limit. (Bug #34558510)</p> </li> <li> <p>After a drop, adding a specific column using the INSTANT algorithm could cause a data error and a server exit. (Bug #34122122)</p> </li> <li> <p>An online rebuild DDL no longer crashes after a column is added with <code>ALGORITHM=INSTANT</code>. Thank you Qingda Hu for reporting this bug. (Bug #33788578, Bug #106279)</p> </li> </ul>"},{"location":"release-notes/8.0.32-24.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-3936: State transfer with disabled SSL in <code>wsrep_provider_options</code> option crashed the Receiver and Donor nodes.</p> </li> <li> <p>PXC-3976: The <code>wsrep</code> status <code>vars</code> were not updated when 8.0 node joined the 5.7 cluster.</p> </li> <li> <p>PXC-4137: The <code>WSREP</code> applier threads failed to modify read-only schemas.</p> </li> <li> <p>PXC-4162: When doing a rolling upgrade from 5.7 to 8.0, <code>wsrep_cluster_size</code> was 0.</p> </li> <li> <p>PXC-4163: The <code>pxc_strict_mode</code> option did not detect version mismatch.</p> </li> </ul>"},{"location":"release-notes/8.0.32-24.html#useful-links","title":"Useful links","text":"<p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.32-24.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.33-25.html","title":"Percona XtraDB Cluster 8.0.33-25 (2023-08-02)","text":"<p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.33-25.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.33-25 (2023-06-15) release notes.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.33 and included in Percona XtraDB Cluster are the following:</p> <ul> <li> <p>The <code>INSTALL COMPONENT</code> includes the <code>SET</code> clause. The <code>SET</code> clause sets the values of component system variables when installing one or several components. This reduces the inconvenience and limitations associated with assigning variable values in other ways.</p> </li> <li> <p>The mysqlbinlog <code>--start-position</code> accepts values up to <code>18446744073709551615</code>. If the <code>--read-from-remote-server</code> or <code>--read-from-remote-source</code> option is used, the maximum is <code>4294967295</code>. (Bug #77818, Bug #21498994)</p> </li> <li> <p>Using a generated column with <code>DEFAULT(col_name)</code> to specify the default value for a named column is not allowed and throws an error message. (Bug #34463652, Bug #34369580)</p> </li> <li> <p>Not all possible error states were reported during the binary log recovery process. (Bug #33658850)</p> </li> <li> <p>User-defined collations are deprecated. The usage of the following user-defined collations causes a warning that is written to the log:</p> </li> <li> <p>When <code>COLLATE</code> is followed by the name of a user-defined collation in an SQL statement.</p> </li> <li> <p>When the name of a user-defined collation is used as the value of <code>collation_server</code>, <code>collation_database</code>, or <code>collation_connection</code>.</p> </li> </ul> <p>The support for user-defined collations will be removed in a future releases of MySQL.</p> <p>Find the full list of bug fixes and changes in the MySQL 8.0.33 Release Notes.</p>"},{"location":"release-notes/8.0.33-25.html#new-features","title":"New features","text":"<ul> <li>PXC-3760: Added FC auto eviction variables allow the eviction of a lagging node.</li> </ul>"},{"location":"release-notes/8.0.33-25.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-667: Unexpected exit during the BF-abort of active HANDLER <code>&lt;table&gt; OPEN AS &lt;alias&gt;</code>.</p> </li> <li> <p>PXC-679: An undetected state gap discovery causes the server to hang on shutdown.</p> </li> <li> <p>PXC-4222: When a node abruptly leaves the applier thread causes all the other nodes in the cluster to hang.</p> </li> <li> <p>PXC-4225: In the INFORMATION_SCHEMA.PROCCESSLIST, the COMMAND value is incorrect.</p> </li> <li> <p>PXC-4228: The NBO mode corrupted the binary log.</p> </li> <li> <p>PXC-4233: A cluster state interruption during NBO can lead to a permanent cluster lock.</p> </li> <li> <p>PXC-4253: The merge to 8.0.33 fixes a number of CVE vulnerabilities.</p> </li> <li> <p>PXC-4258: A failure to add a foreign key resulted in an inconsistency.</p> </li> <li> <p>PXC-4268: If the <code>ALTER DEFINER VIEW</code> was changed with insufficient privileges, the Percona XtraDB Cluster node gets a Disconnected/Inconsistent state</p> </li> <li> <p>PXC-4278: Renaming a table with NBO caused a server exit.</p> </li> </ul>"},{"location":"release-notes/8.0.33-25.html#useful-links","title":"Useful links","text":"<p>Install Percona XtraDB Cluster</p> <p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.33-25.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.33-25.upd.html","title":"Percona XtraDB Cluster 8.0.33-25 Update (2023-08-25)","text":"<p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.33-25.upd.html#known-issues","title":"Known issues","text":"<p>If you use Galera Arbitrator (garbd), we recommend that you do not upgrade to 8.0.33 because <code>garbd-8.0.33</code> may cause synchronization issues and extensive usage of CPU resources.</p> <p>If you already upgraded to <code>garbd-8.0.33</code>, we recommended downgrading to <code>garbd-8.0.32-24-2</code> by performing the following steps:</p> <ul> <li> <p>Uninstall the <code>percona-xtradb-cluster-garbd_8.0.33-25</code> package.</p> </li> <li> <p>Download the <code>percona-xtradb-cluster-garbd_8.0.32-24-2</code> package from Percona Software Downloads manually.</p> </li> <li> <p>Install the <code>percona-xtradb-cluster-garbd_8.0.32-24-2</code> package manually.</p> </li> </ul>"},{"location":"release-notes/8.0.33-25.upd.html#useful-links","title":"Useful links","text":"<p>Install Percona XtraDB Cluster</p> <p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now</p>"},{"location":"release-notes/8.0.33-25.upd.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.34-26.html","title":"Percona XtraDB Cluster 8.0.34-26 (2023-11-01)","text":"<p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.34-26.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.34-26 (2023-09-26) release notes.</p> <p>Percona XtraDB Cluster implements telemetry that fills in the gaps in our understanding of how you use Percona XtraDB Cluster to improve our products. Participation in the anonymous program is optional. You can opt-out if you prefer not to share this information. Find more information in the Telemetry on Percona XtraDB Cluster document.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.34 and included in Percona XtraDB Cluster are the following:</p> <ul> <li> <p>Adds <code>mysql_binlog_open()</code>, <code>mysql_binlog_fetch()</code>, and <code>mysql_binlog_close()</code> functions to the libmysqlclient.so shared library. These functions enable developers to access a MySQL server binary log.</p> </li> <li> <p>For platforms on which OpenSSL libraries are bundled, the linked OpenSSL library for MySQL Server is updated from OpenSSL 1.1.1 to OpenSSL 3.0.9.</p> </li> </ul>"},{"location":"release-notes/8.0.34-26.html#deprecations-and-removals","title":"Deprecations and removals","text":"<ul> <li> <p>The <code>mysqlpump</code> client utility program is deprecated. The use of this program causes a warning. The <code>mysqlpump</code> client may be removed in future releases. The applications that depend on <code>mysqlpump</code> will use <code>mysqldump</code> or <code>MySQL Shell Utilities</code>.</p> </li> <li> <p>The <code>sync_relay_log_info</code> server system variable is deprecated. Using this variable or its equivalent startup <code>--sync-relay-log-info</code> option causes a warning. This variable may be removed in future releases. The applications that use this variable should be rewritten not to depend on it before the variable is removed.</p> </li> <li> <p>The <code>binlog_format</code> server system variable is deprecated and may be removed in future releases. The functionality associated with this variable, which changes the binary logging format, is also deprecated. </p> <p>When <code>binlog_format</code> is removed, MySQL server supports only row-based binary logging. Thus, new installations should use only row-based binary logging. Migrate the existing installations that use the statement-based or mixed logging format to the row-based format.</p> <p>The system variables <code>log_bin_trust_function_creators</code> and <code>log_statements_unsafe_for_binlog</code> used in the context of statement-based logging are also deprecated and may be removed in future releases.</p> <p>Setting or selecting the values of deprecated variables causes a warning.</p> </li> <li> <p>The <code>mysql_native_password</code> authentication plugin is deprecated and may be removed in future releases. Using <code>CREATE USER</code>, <code>ALTER USER</code>, and <code>SET PASSWORD</code> operations, insert a deprecation warning into the server error log if an account attempts to authenticate using <code>mysql_native_password</code> as an authentication method.</p> </li> <li> <p>The <code>keyring_file</code> and <code>keyring_encrypted_file</code> plugins are deprecated. These keyring plugins are replaced with the <code>component_keyring_file</code> and <code>component_keyring_encrypted_file</code> components.</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.34 Release Notes.</p>"},{"location":"release-notes/8.0.34-26.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-4219: Starting a Percona XtraBackup process and issuing a <code>START REPLICA</code> command simultaneously could deadlock the server.</p> </li> <li> <p>PXC-4238: Running either the <code>asynchronous_connection_failover_add_source</code> user defined function or the <code>asynchronous_connection_failover_delete_source</code> user defined function generated an errant transaction, which could prevent a failover in the future.</p> </li> <li> <p>PXC-4255: Running <code>ALTER USER/SET PASSWORD</code> and <code>FLUSH PRIVILEGES</code> simultaneously on different Percona XtraDB Cluster nodes stalled the cluster.</p> </li> <li> <p>PXC-4284: If a MySQL user was not created before the GRANT option, the Percona XtraDB Cluster node was disconnected and needed a complete state transfer (SST).</p> </li> <li> <p>PXC-4288: Galera Arbitrator (garbd) used 100% CPU.</p> </li> <li> <p>PXC-4302: The GRANT statement could be replicated in a wrong way if <code>partial_revokes=1</code> was enabled.</p> </li> <li> <p>PXC-4310: A warning message had an incorrect link.</p> </li> <li> <p>PXC-4296: The garbd 8.0.33 reported a wrong version.</p> </li> </ul>"},{"location":"release-notes/8.0.34-26.html#useful-links","title":"Useful links","text":"<p>Install Percona XtraDB Cluster</p> <p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.34-26.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.35-27.html","title":"Percona XtraDB Cluster 8.0.35-27 (2024-01-17)","text":"<p>Get started with Quickstart Guide for Percona XtraDB Cluster.</p> <p>Percona XtraDB Cluster supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.35-27.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.35-27 (2023-12-27) release notes.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.35 and included in Percona XtraDB Cluster are the following:</p> <ul> <li>Upgraded the linked OpenSSL library to OpenSSL 3.0.10.</li> <li>Removed the printed query string limit to display the characters for a detected deadlock section of the engine status log.</li> <li>Fixed a procession of single-character tokens by an FTS parser plugin.</li> </ul>"},{"location":"release-notes/8.0.35-27.html#deprecations","title":"Deprecations","text":"<p>A future release may remove deprecated variables and options. The usage of these deprecated items may cause a warning. We recommend migrating from deprecated variables and options as soon as possible.</p> <p>This release deprecates the following variables and options:</p> <ul> <li> <p>The <code>binlog_transaction_dependency_tracking</code> server system variable</p> </li> <li> <p>The <code>old</code> and <code>new</code> server system variables</p> </li> <li> <p>The <code>--character-set-client-handshake</code> server variable</p> </li> <li> <p><code>INFORMATION_SCHEMA.PROCESSLIST</code></p> </li> <li> <p>The implementation of the <code>SHOW PROCESSLIST</code> command that uses the <code>INFORMATION_SCHEMA.PROCESSLIST</code> table</p> </li> <li> <p>The <code>performance_schema_show_processlist</code> variable</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.35 Release Notes.</p>"},{"location":"release-notes/8.0.35-27.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-4343: The table spaces were corrupted during SST that caused the Xtrabackup failure with the <code>Header page contains inconsistent data in datafile</code> error (Thanks to Andrew Garner for his help in fixing this issue.)</p> </li> <li> <p>PXC-4336: The Percona XtraDB Cluster node disconnected from the cluster due to CHECK CONSTRAINT.</p> </li> <li> <p>PXC-4332: The Percona XtraDB Cluster node disconnected from the cluster if the local variable was changed at the session level.</p> </li> <li> <p>PXC-4318: The Percona XtraDB Cluster node can serve as an async replica for another master node. However, when the same row was modified on both the Percona XtraDB Cluster node and the master node, the Percona XtraDB Cluster node got stuck due to replication conflicts.</p> </li> <li> <p>PXC-4317: On newer platforms like AlmaLinux, adding a new node to an existing cluster was unsuccessful because the readlink command used during the SST process on joiner failed (Thanks to Mikael Gbai for reporting this issue.)</p> </li> <li> <p>PXC-4315: The logs like <code>MDL conflict ... solved by abort</code> were printed, but no transaction was aborted (Thanks to Arkadiusz Petruczynik for reporting this issue.)</p> </li> <li> <p>PXC-4312: When DROP EVENT IF EXISTS was executed for non existing event, the event was binlogged with the GTID containing UUID of local server instead of global cluster-wide UUID.</p> </li> <li> <p>PXC-4298: The node was disconnected when using <code>ALTER TABLE</code>, including <code>ADD UNIQUE</code> in the table containing duplicate entries (Thanks to Vit Novak for reporting this issue.)</p> </li> <li> <p>PXC-4237: <code>wsrep_sst_xtrabackup-v2</code> failed when adding a new node.</p> </li> <li> <p>PXC-4179: The wsrep applier threads and rollbacker threads were not reported by <code>performance_schema.processlist</code>.</p> </li> <li> <p>PXC-4034: The usage of <code>sql_log_bin=0</code> broke GTID consistency.</p> </li> </ul>"},{"location":"release-notes/8.0.35-27.html#useful-links","title":"Useful links","text":"<p>Install Percona XtraDB Cluster</p> <p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.35-27.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/8.0.36-28.html","title":"Percona XtraDB Cluster 8.0.36-28 (2024-04-03)","text":"<p>Get started with Quickstart Guide for Percona XtraDB Cluster.</p> <p>Percona XtraDB Cluster supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/8.0.36-28.html#release-highlights","title":"Release highlights","text":"<p>Percona XtraDB Cluster is based on Percona Server for MySQL. Find a complete list of improvements and bug fixes in the Percona Server for MySQL 8.0.36-28 (2024-03-04) release notes.</p> <p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.36 and included in Percona XtraDB Cluster are the following:</p> <ul> <li> <p>The hashing algorithm employed yielded poor performance when using a HASH field to check for uniqueness. (Bug #109548, Bug #34959356)</p> </li> <li> <p>All statement instrument elements that begin with <code>statement/sp/%</code>, except <code>statement/sp/stmt</code>, are disabled by default.</p> </li> </ul> <p>Find the complete list of bug fixes and changes in the MySQL 8.0.36 Release Notes.</p>"},{"location":"release-notes/8.0.36-28.html#bug-fixes","title":"Bug fixes","text":"<ul> <li> <p>PXC-4316: If the node shut down while being partitioned from the cluster, started again, and then rejoined the cluster, the other part of the cluster would still wait for the partitioned node.</p> </li> <li> <p>PXC-4341: When running <code>FLUSH TABLES</code> after a statement was prepared, the node could exit due to broken consistency.</p> </li> <li> <p>PXC-4348: The joiner node exited with Metadata Lock <code>BF-BF</code> conflict during <code>IST</code>.</p> </li> <li> <p>PXC-4362: The node could leave the cluster when binary logging was enabled and the function was created without super privilege.</p> </li> <li> <p>PXC-4365: The node could leave the cluster when the row size was too large and had more than three <code>nvarchar</code> columns.</p> </li> <li> <p>PXC-4340: The server exited when executing the complicated query with 9 CTEs.</p> </li> <li> <p>PXC-4367: The InnoDB semaphore wait timeout caused a server exit under a heavy load.</p> </li> </ul>"},{"location":"release-notes/8.0.36-28.html#useful-links","title":"Useful links","text":"<p>Install Percona XtraDB Cluster</p> <p>The Percona XtraDB Cluster GitHub location</p> <p>Download product binaries, packages, and tarballs at Percona Product Downloads</p> <p>Contribute to the documentation</p> <p>For training, contact Percona Training - Start learning now.</p>"},{"location":"release-notes/8.0.36-28.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.18-9.3.html","title":"Percona XtraDB Cluster 8.0.18-9.3","text":"<ul> <li> <p>Date</p> <p>April 29, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.18-9.3 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.18-9 for more details on these changes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.18-9.3.html#improvements","title":"Improvements","text":"<ul> <li> <p>PXC-2495: Modified documentation for wsrep_sst_donor to include results when IP address is used</p> </li> <li> <p>PXC-3002: Enhanced service_startup_timeout options to allow it to be disabled</p> </li> <li> <p>PXC-2331: Modified the SST process to run mysql_upgrade</p> </li> <li> <p>PXC-2991: Enhanced Strict Mode Processing to handle Group Replication Plugin</p> </li> <li> <p>PXC-2985: Enabled Service for Automated Startup on Reboot with valid grastate.dat</p> </li> <li> <p>PXC-2980: Modified Documentation to include AutoStart Up Process after Installation</p> </li> <li> <p>PXC-2722: Enabled Support for Percona XtraBackup (PXB) 8.0.8 in Percona XtraDB Cluster (PXC) 8.0</p> </li> <li> <p>PXC-2602: Added Ability to Configure xbstream options with wsrep_sst_xtrabackup</p> </li> <li> <p>PXC-2455: Implemented the use of Percona XtraBackup (PXB) 8.0.5 in Percona XtraDB Cluster (PXC) 8.0</p> </li> <li> <p>PXC-2259: Updated wsrep-files-index.htrml to include new files created by Percona XtraDB Cluster (PXC)</p> </li> <li> <p>PXC-2197: Modified SST Documentation to Include Package Dependencies for Percona XtraBackup (PXB)</p> </li> <li> <p>PXC-2194: Improvements to the PXC upgrade guide</p> </li> <li> <p>PXC-2191: Revised Documentation on innodb_deadlock to Clarify Cluster Level Deadlock Processing</p> </li> <li> <p>PXC-3017: Remove these SST encryption methods. encrypt=1, encrypt=2, and encrypt=3</p> </li> <li> <p>PXC-2189: Modified Reference Architecture for Percona XtraDB Cluster (PXC) to include ProxySQL</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.18-9.3.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-2537: Modified mysqladmin password command to prevent node crash</p> </li> <li> <p>PXC-2958: Modified User Documentation to include wsrep_certification_rules and cert.optimistic_pa</p> </li> <li> <p>PXC-2045: Removed debian.cnf reference from logrotate/logcheck configuration Installed on Xenial/Stretch</p> </li> <li> <p>PXC-2292: Modified Processing to determine Type of Key Cert when IST/SST</p> </li> <li> <p>PXC-2974: Modified Percona XtraDB Cluster (PXC) Dockerfile to Integrate Galera wsrep recovery Process</p> </li> <li> <p>PXC-3145: When the joiner fails during an SST, the mysqld process stays around (doesn\u2019t exit)</p> </li> <li> <p>PXC-3128: Removed Prior Commit to Allow High Priority High Transaction Processing</p> </li> <li> <p>PXC-3076: Modified Galera build to remove python3 components</p> </li> <li> <p>PXC-2912: Modified netcat Configuration to Include -N Flag on Donor</p> </li> <li> <p>PXC-2476: Modified process to determine and process IST or SST and with keyring_file processing</p> </li> <li> <p>PXC-2204: Modified Shutdown using systemd after Bootstrap to provide additional messaging</p> </li> <li> <p>PXB-2142: Transition key was written to backup / stream</p> </li> <li> <p>PXC-2969: Modified pxc_maint_transition_period Documentation to Include Criteria for Use</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.18-9.3.html#known-issues","title":"Known Issues","text":"<ul> <li> <p>PXC-2978: Certificate Information not Displayed when pxc-encrypt-cluster-traffic=ON</p> </li> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tries to join SSL-enabled cluster</p> </li> <li> <p>PXC-3043: Update required donor version to PXC 5.7.28</p> </li> <li> <p>PXC-3063: Data at Rest Encryption not Encrypting Record Set Cache</p> </li> <li> <p>PXC-3092: Abort startup if keyring is specified but cluster traffic encryption is turned off</p> </li> <li> <p>PXC-3093: Garbd logs Completed SST Transfer Incorrectly (Timing is not correct)</p> </li> <li> <p>PXC-3159: Killing the Donor or Connection lost during SST Process Leaves Joiner Hanging</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.18-9.3.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.19-10.html","title":"Percona XtraDB Cluster 8.0.19-10","text":"<ul> <li> <p>Date</p> <p>June 18, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.19-10 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.19-10 for more details on these changes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.19-10.html#improvements","title":"Improvements","text":"<ul> <li> <p>PXC-2189: Modify Reference Architecture for Percona XtraDB Cluster (PXC) to include ProxySQL</p> </li> <li> <p>PXC-3182: Modify processing to not allow writes on 8.0 nodes while 5.7 nodes are still on the cluster</p> </li> <li> <p>PXC-3187: Add dependency package installation note in PXC binary tarball installation doc.</p> </li> <li> <p>PXC-3138: Document mixed cluster write (PXC8 while PXC5.7 nodes are still part of the cluster) should not be completed.</p> </li> <li> <p>PXC-3066: Document that pxc-encrypt-cluster-traffic=OFF is not just about traffic encryption</p> </li> <li> <p>PXC-2993: Document the dangers of running with strict mode disabled and Group Replication at the same time</p> </li> <li> <p>PXC-2980: Modify Documentation to include AutoStart Up Process after Installation</p> </li> <li> <p>PXC-2604: Modify garbd processing to support Operator</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.19-10.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3298: Correct galera_var_reject_queries test to remove display value width</p> </li> <li> <p>PXC-3320: Correction on PXC installation doc</p> </li> <li> <p>PXC-3270: Modify wsrep_ignore_apply_errors variable default to restore 5.x behavior</p> </li> <li> <p>PXC-3179: Correct replication of CREATE USER \u2026 RANDOM PASSWORD</p> </li> <li> <p>PXC-3080: Modify to process the ROTATE_LOG_EVENT synchronously to perform proper cleanup</p> </li> <li> <p>PXC-2935: Remove incorrect assertion when \u2013thread_handling=pool-of-threads is used</p> </li> <li> <p>PXC-2500: Modify ALTER USER processing when executing thread is Galera applier thread to correct assertion</p> </li> <li> <p>PXC-3234: Correct documentation link in spec file</p> </li> <li> <p>PXC-3204: Modify to set wsrep_protocol_version correctly when wsrep_auto_increment_control is disabled</p> </li> <li> <p>PXC-3189: Correct SST processing for super_read_only</p> </li> <li> <p>PXC-3184: Modify startup to correct crash when socat not found and SST Fails</p> </li> <li> <p>PXC-3169: Modify wsrep_reject_queries to enhance error messaging</p> </li> <li> <p>PXC-3165: Allow COM_FIELD_LIST to be executed when WSREP is not ready</p> </li> <li> <p>PXC-3145: Modify to end mysqld process when the joiner fails during an SST</p> </li> <li> <p>PXC-3043: Update required donor version to PXC 5.7.28 (previously was Known Issue)</p> </li> <li> <p>PXC-3036: Document correct method for starting, stopping, bootstrapping</p> </li> <li> <p>PXC-3287: Correct link displayed on help client command</p> </li> <li> <p>PXC-3031: Modify processing for garbd to prevent issues when multiple requests are started at approximately the same time and request an SST transfers to prevent SST from hanging</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.19-10.html#known-issues","title":"Known Issues","text":"<ul> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tries to join SSL-enabled cluster</p> </li> <li> <p>PXC-3092: Abort startup if keyring is specified but cluster traffic encryption is turned off</p> </li> <li> <p>PXC-3093: Garbd logs Completed SST Transfer Incorrectly (Timing is not correct)</p> </li> <li> <p>PXC-3159: Killing the Donor or Connection lost during SST Process Leaves Joiner Hanging</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.19-10.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.2.html","title":"Percona XtraDB Cluster 8.0.20-11.2","text":"<ul> <li> <p>Date</p> <p>October 9, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>This release fixes the security vulnerability CVE-2020-15180</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.2.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.3.html","title":"Percona XtraDB Cluster 8.0.20-11.3","text":"<ul> <li> <p>Date</p> <p>October 22, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.3.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li>PXC-3456: Allow specific characters in SST method names and SST request data.</li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.3.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.html","title":"Percona XtraDB Cluster 8.0.20-11","text":"<ul> <li> <p>Date</p> <p>October 1, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.20-11 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.20-11 for more details on these changes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.html#improvements","title":"Improvements","text":"<ul> <li>PXC-2603: Update Index for PXC status variables - apply consistent definitions</li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3159: Modify error handling to close the communication channels and abort the joiner node when donor crashes (previously was Known Issue)</p> </li> <li> <p>PXC-3352: Modify wsrep_row_upd_check_foreign_constraints() to remove the check for DELETE</p> </li> <li> <p>PXC-3371: Fix Directory creation in build-binary.sh</p> </li> <li> <p>PXC-3370: Provide binary tarball with shared libs and glibc suffix &amp; minimal tarballs</p> </li> <li> <p>PXC-3360: Update sysbench commands in PXC-ProxySQL configuration doc page</p> </li> <li> <p>PXC-3312: Prevent cleanup of statement diagnostic area in case of transaction replay.</p> </li> <li> <p>PXC-3167: Correct GCache buffer repossession processing</p> </li> <li> <p>PXC-3347: Modify PERCONA_SERVER_EXTENSION for bintarball and modify MYSQL_SERVER_SUFFIX</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.html#known-issues-unfixed-problems-that-you-should-be-aware-of","title":"Known Issues (unfixed problems that you should be aware of)","text":"<ul> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tries to join SSL-enabled cluster</p> </li> <li> <p>PXC-3092: Log warning at startup if keyring is specified but cluster traffic encryption is turned off</p> </li> <li> <p>PXC-3093: Garbd logs Completed SST Transfer Incorrectly (Timing is not correct)</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.20-11.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.21-12.1.html","title":"Percona XtraDB Cluster 8.0.21-12.1","text":"<ul> <li> <p>Date</p> <p>December 28, 2020</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.21-12.1 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.21-12 for more details on these changes.</p> <p>Implement an inconsistency voting policy. In the best case scenario, the node with the inconsistent data is aborted and the cluster continues to operate.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.21-12.1.html#improvements","title":"Improvements","text":"<ul> <li>PXC-2574: Improve messaging for \u201cBF lock wait long\u201d timeout</li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.21-12.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3353: Modify error handling in Garbd when donor crashes during SST or when an invalid donor name is passed to it</p> </li> <li> <p>PXC-3468: Resolve package conflict when installing PXC 5.7 on RHEL/CentOS8</p> </li> <li> <p>PXC-3418: Prevent DDL-DML deadlock by making in-place ALTER take shared MDL for the whole duration.</p> </li> <li> <p>PXC-3416: Fix memory leaks in garbd when started with invalid group name</p> </li> <li> <p>PXC-3445: Correct MTR test failures</p> </li> <li> <p>PXC-3442: Fix crash when log_slave_updates=ON and consistency check statement is executed</p> </li> <li> <p>PXC-3424: Fix error handling when the donor is not able to serve SST</p> </li> <li> <p>PXC-3404: Fix memory leak in garbd while processing CC actions</p> </li> <li> <p>PXC-3191: Modify Read-Only checks on wsrep_* tables when in super_read_only</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.21-12.1.html#known-issues-unfixed-problems-that-you-should-be-aware-of","title":"Known Issues (unfixed problems that you should be aware of)","text":"<ul> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tries to join an SSL-enabled cluster</p> </li> <li> <p>PXC-3092: Log a warning at startup if a keyring is specified but cluster traffic encryption is turned off</p> </li> <li> <p>PXC-3093: Completed SST Transfer incorrectly logged by garbd (Timing is not correct)</p> </li> <li> <p>PXC-3159: Modify the error handling to close the communication channels and abort the joiner node when the donor crashes</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.21-12.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.22-13.1.html","title":"Percona XtraDB Cluster 8.0.22-13.1","text":"<ul> <li> <p>Date</p> <p>March 22, 2021</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.22-13.1 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.22-13 for more details on these changes.</p> <p>This release fixes security vulnerability CVE-2021-27928, a similar issue to CVE-2020-15180</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.22-13.1.html#improvements","title":"Improvements","text":"<ul> <li> <p>PXC-3575: Implement package changes for SELinux and AppArmor</p> </li> <li> <p>PXC-3115: Create Default SELinux and AppArmor policy</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.22-13.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3536: Modify processing to not allow threads/queries to be killed if the thread is in TOI</p> </li> <li> <p>PXC-3565: Correct Performance of SELECT in PXC</p> </li> <li> <p>PXC-3502: Correct condition in thd_binlog_format() function for List Index process (Thanks to user Pawe\u0142 Bromboszcz for reporting this issue)</p> </li> <li> <p>PXC-3501: Modify wsrep_row_upd_check_foreign_constraints() to include foreign key dependencies in the writesets for DELETE query (Thanks to user Steven Gales for reporting this issue)</p> </li> <li> <p>PXC-2913: Correct MDL locks assertion when wsrep provider is unloaded</p> </li> <li> <p>PXC-3475: Adjust mysqld_safe script to parse 8.0 log style properly</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.22-13.1.html#known-issues-unfixed-problems-that-you-should-be-aware-of","title":"Known Issues (unfixed problems that you should be aware of)","text":"<ul> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tries to join an SSL-enabled cluster</p> </li> <li> <p>PXC-3092: Log a warning at startup if a keyring is specified, but cluster traffic encryption is turned off</p> </li> <li> <p>PXC-3093: Completed SST Transfer incorrectly logged by garbd (Timing is not correct)</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.22-13.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.23-14.1.html","title":"Percona XtraDB Cluster 8.0.23-14.1","text":"<ul> <li> <p>Date</p> <p>June 9, 2021</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster.</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.23-14.1 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.23-14 for more details on these changes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.23-14.1.html#improvements","title":"Improvements","text":"<ul> <li>PXC-3092: Log a warning at startup if a keyring is specified, but the cluster traffic encryption is turned off</li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.23-14.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3464: Data is not propagated with SET SESSION sql_log_bin = 0</p> </li> <li> <p>PXC-3146: Galera/SST is not looking for the default data directory location for SSL certs</p> </li> <li> <p>PXC-3226: Results from CHECK TABLE from PXC server can cause the client libraries to crash</p> </li> <li> <p>PXC-3381: Modify GTID functions to use a different char set</p> </li> <li> <p>PXC-3437: Node fails to join in the endless loop</p> </li> <li> <p>PXC-3446: Memory leak during server shutdown</p> </li> <li> <p>PXC-3538: Garbd crashes after successful backup</p> </li> <li> <p>PXC-3580: Aggressive network outages on one node makes the whole cluster unusable</p> </li> <li> <p>PXC-3596: Node stuck in aborting SST</p> </li> <li> <p>PXC-3645: Deadlock during ongoing transaction and RSU</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.23-14.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.25-15.1.html","title":"Percona XtraDB Cluster 8.0.25-15.1","text":"<ul> <li> <p>Date</p> <p>November 22, 2021</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster.</p> </li> </ul> <p>Percona XtraDB Cluster 8.0.25-15.1 includes all of the features and bug fixes available in Percona Server for MySQL. See the corresponding release notes for Percona Server for MySQL 8.0.25-15 for more details on these changes.</p> <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.25-15.1.html#release-highlights","title":"Release Highlights","text":"<p>A Non-Blocking Operation method for online schema changes in Percona XtraDB Cluster. This mode is similar to the Total Order Isolation (TOI) mode, whereas a data definition language (DDL) statement (for example, <code>ALTER</code>) is executed on all nodes in sync. The difference is that in the NBO mode, the DDL statement acquires a metadata lock that locks the table or schema at a late stage of the operation, which is a more efficient locking strategy.</p> <p>Note that the NBO mode is a Tech Preview feature. We do not recommend that you use this mode in a production environment. For more information, see Non-Blocking Operations (NBO) method for Online Scheme Upgrades (OSU).</p> <p>The notable changes and bug fixes introduced by Oracle MySQL include the following:</p> <ul> <li> <p>The <code>sql_slave_skip_counter</code> variable only counts the events in the uncompressed transaction payloads.</p> </li> <li> <p>A possible deadlock occurred when system variables, read by different clients, were being updated and the binary log file was rotated.</p> </li> <li> <p>Sometimes the aggregate function results could return values from a previous statement when using a prepared <code>SELECT</code> statement with a <code>WHERE</code> clause that is always false.</p> </li> </ul> <p>For more information, see the MySQL 8.0.24 Release Notes and the MySQL 8.0.25 Release Notes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.25-15.1.html#new-features","title":"New Features","text":"<ul> <li>PXC-3265 Implements the Non-Blocking Operations (NBO) mode for an Online schema upgrade.</li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.25-15.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3275: Fix the documented APT package list to match the packages listed in the Repo. (Thanks to user Hubertus Krogmann for reporting this issue)</p> </li> <li> <p>PXC-3387: Performing an intermediate commit does not call wsrep commit hooks.</p> </li> <li> <p>PXC-3449: Fix for missing dependencies which were carried out in replication writesets caused Galera to fail.</p> </li> <li> <p>PXC-3589: Documentation: Updates in Percona XtraDB Cluster Limitations that the <code>LOCK=NONE</code> clause is no longer allowed in an INPLACE ALTER TABLE statement. (Thanks to user Brendan Byrd for reporting this issue)</p> </li> <li> <p>PXC-3611: Fix that deletes any keyring.backup file if it exists for SST operation.</p> </li> <li> <p>PXC-3608: Fix a concurrency issue that caused a server exit when attempting to read a foreign key.</p> </li> <li> <p>PXC-3637: Changes the service start sequence to allow more time for mounting local or remote directories with large amounts of data. (Thanks to user Eric Gonyea for reporting this issue)</p> </li> <li> <p>PXC-3679: Fix for SST failures after the update of socat to \u20181.7.4.0\u2019.</p> </li> <li> <p>PXC-3706: Fix adds a wait to <code>wsrep_after_commit</code> until the first thread in a group commit queue is available.</p> </li> <li> <p>PXC-3729: Fix for conflicts when multiple applier threads execute certified transactions and are in High-Priority transaction mode.</p> </li> <li> <p>PXC-3731: Fix for incorrect writes to the binary log when <code>sql_log_bin=0</code>.</p> </li> <li> <p>PXC-3733: Fix to clean the WSREP transaction state if a transaction is requested to be re-prepared.</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.25-15.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.26-16.1.html","title":"Percona XtraDB Cluster 8.0.26-16.1","text":"<ul> <li> <p>Date</p> <p>January 17, 2022</p> </li> <li> <p>Installation</p> <p>Installing Percona XtraDB Cluster</p> </li> </ul> <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.26-16.1.html#release-highlights","title":"Release Highlights","text":"<p>The following are a number of the notable fixes for MySQL 8.0.26, provided by Oracle, and included in this release:</p> <ul> <li> <p>The TLSv1 and TLSv1.1 connection protocols are deprecated.</p> </li> <li> <p>Identifiers with specific terms, such as \u201cmaster\u201d or \u201cslave\u201d are deprecated and replaced. See the Functionality Added or Changed section in the 8.0.26 Release Notes for a list of updated identifiers. The following terms have been changed:</p> </li> <li> <p>The identifier <code>master</code> is changed to <code>source</code></p> </li> <li> <p>The identifier <code>slave</code> is changed to <code>replica</code></p> </li> <li> <p>The identifier <code>multithreaded slave</code> (<code>mts</code>) is changed to <code>multithreaded applier</code> (<code>mta</code>)</p> </li> <li> <p>When using semisynchronous replication, either the old version or the new version of system variables and status variables are available. You cannot have both versions installed on an instance. The old system variables are available when you use the old version, but the new ones are not. The new system variables are available when you use the new version, but the old values are not.</p> </li> </ul> <p>In an upgrade from an earlier version to 8.0.26, enable the <code>rpl_semi_sync_source</code> plugin and the <code>rpl_semi_sync_replica</code> plugin after the upgrade has been completed. Enabling these plugins before all of the nodes are upgraded may cause data inconsistency between the nodes.</p> <p>For the source, the <code>rpl_semi_sync_master</code> plugin (<code>seminsync_master.so</code> library) is the old version and the <code>rpl_semi_sync_source</code> plugin(<code>semisync_source.so</code> library) is the new version.</p> <p>For the client, the <code>rpl_semi_sync_slave</code> plugin (<code>semisync_slave.so</code> library) is the old version and the <code>rpl_semi_sync_replica</code> plugin (<code>semisync_replica.so</code> library) is the new version</p> <p>For more information, see the MySQL 8.0.26 Release Notes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.26-16.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3824: An incorrect directive in Systemd Unit File (Thanks to Jim Lohiser for reporting this issue)</p> </li> <li> <p>PXC-3706: A fix for a race condition in group commit queue (Thanks to Kevin Sauter for reporting this issue)</p> </li> <li> <p>PXC-3739: The <code>FLUSH TABLES FOR EXPORT</code> lock is released when the session ends.</p> </li> <li> <p>PXC-3628: The server allowed altering the storage engine to <code>MyISAM</code> for mysql.wsrep_* tables.</p> </li> <li> <p>PXC-3731: A fix for when the user deletes data from the source but does not want that data deleted from the replica. The <code>sql_log_bin=0</code> command had no effect and the deleted rows were replicated and written into the binary log.</p> </li> <li> <p>PXC-3857: The following system variables are renamed. The old variables are deprecated and may be removed in a future version.</p> </li> <li> <p><code>wsrep_slave_threads</code> renamed as <code>wsrep_applier_threads</code></p> </li> <li> <p><code>wsrep_slave_FK_checks</code> renamed as <code>wsrep_applier_FK_checks</code></p> </li> <li> <p><code>wsrep_slave_UK_checks</code> renamed as <code>wsrep_applier_UK_checks</code></p> </li> <li> <p><code>wsrep_restart_slave</code> renamed as <code>wsrep_restart_replica</code></p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.26-16.1.html#known-issues-unfixed-problems-that-you-should-be-aware-of","title":"Known Issues (unfixed problems that you should be aware of)","text":"<ul> <li> <p>PXC-3039: No useful error messages if an SSL-disabled node tried to join an SSL-enabled cluster</p> </li> <li> <p>PXC-3093: A completed SST Transfer is incorrectly logged by garbd. The timing is incorrect.</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.26-16.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.27-18.1.html","title":"Percona XtraDB Cluster 8.0.27-18.1","text":"<p>Date: April 11, 2022</p> <p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.27-18.1.html#release-highlights","title":"Release Highlights","text":"<p>The following lists a number of the bug fixes for MySQL 8.0.27, provided by Oracle, and included in Percona Server for MySQL:</p> <ul> <li> <p>The <code>default_authentication_plugin</code> is deprecated. Support for this plugin may be removed in future versions. Use the <code>authentication_policy</code> variable.</p> </li> <li> <p>The <code>binary</code> operator is deprecated. Support for this operator may be removed in future versions. Use <code>CAST(... AS BINARY)</code>.</p> </li> <li> <p>Fix for when a parent table initiates a cascading <code>SET NULL</code> operation on the child table, the virtual column can be set to NULL instead of the value derived from the parent table.</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.27 Release Notes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.27-18.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3831: Allowed certified high-priority transactions to proceed without lock conflicts.</p> </li> <li> <p>PXC-3766: Stopped every XtraBackup-based SST operation from executing the version-check procedure.</p> </li> <li> <p>PXC-3704: Based the maximum writeset size on <code>repl.max_ws_size</code> when both <code>repl.max_ws_size</code> and <code>wsrep_max_ws_size</code> values are passed during startup.</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.27-18.1.html#useful-links","title":"Useful Links","text":"<ul> <li> <p>The Percona XtraDB Cluster installation instructions</p> </li> <li> <p>The Percona XtraDB Cluster downloads</p> </li> <li> <p>The Percona XtraDB Cluster GitHub location</p> </li> <li> <p>To contribute to the documentation, review the Documentation Contribution Guide</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.27-18.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.28-19.1.html","title":"Percona XtraDB Cluster 8.0.28-19.1 (2022-07-19)","text":"<p>Percona XtraDB Cluster (PXC) supports critical business applications in your public, private, or hybrid cloud environment. Our free, open source, enterprise-grade solution includes the high availability and security features your business requires to meet your customer expectations and business goals.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.28-19.1.html#release-highlights","title":"Release Highlights","text":"<p>Improvements and bug fixes introduced by Oracle for MySQL 8.0.28 and included in Percona Server for MySQL are the following:</p> <ul> <li> <p>The <code>ASCII</code> shortcut for <code>CHARACTER SET latin1</code> and <code>UNICODE</code> shortcut for <code>CHARACTER SET ucs2</code> are deprecated and raise a warning to use <code>CHARACTER SET</code> instead. The shortcuts will be removed in a future version.</p> </li> <li> <p>A stored function and a loadable function with the same name can share the same namespace. Add the schema name when invoking a stored function in the shared namespace. The server generates a warning when function names collide.</p> </li> <li> <p>InnoDB supports <code>ALTER TABLE ... RENAME COLUMN</code> operations when using <code>ALGORITHM=INSTANT</code>.</p> </li> <li> <p>The limit for <code>innodb_open_files</code> now includes temporary tablespace files. The temporary tablespace files were not counted in the <code>innodb_open_files</code> in previous versions.</p> </li> </ul> <p>Find the full list of bug fixes and changes in the MySQL 8.0.28 Release Notes.</p>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.28-19.1.html#bugs-fixed","title":"Bugs Fixed","text":"<ul> <li> <p>PXC-3923: When the <code>read_only</code> or <code>super_read_only</code> option was set, the <code>ANALYZE TABLE</code> command removed the node from the cluster.</p> </li> <li> <p>PXC-3388: Percona XtraDB Cluster stuck in a DESYNCED state after joiner was killed.</p> </li> <li> <p>PXC-3609: The binary log status variables were updated when the binary log was disabled. Now the status variables are not registered when the binary log is disabled. (Thanks to Stofa Kenida for reporting this issue.)</p> </li> <li> <p>PXC-3848: The cluster node exited when the <code>CURRENT_USER()</code> function was used. (Thanks to Steffen B\u00f6hme for reporting this issue.)</p> </li> <li> <p>PXC-3872: A user without system_user privilege was able to drop system users. (Thanks to user jackc for reporting this issue.)</p> </li> <li> <p>PXC-3918: Galera Arbitrator (garbd) could not connect if the Percona XtraDB Cluster server used encrypted connections. The issue persisted even when the proper certificates were specified.</p> </li> <li> <p>PXC-3924: Using <code>TRUNCATE TABLE X</code> and <code>INSERT INTO X</code> options when the foreign keys were disabled and violated caused the <code>HA_ERR_FOUND_DUPP_KEY</code> error on a slave node. (Thanks to Daniel Barton\u00ed\u010dek for reporting this issue.)</p> </li> <li> <p>PXC-3062: The <code>wsrep_incoming_addresses</code> status variable did not contain the garbd IP address.</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.28-19.1.html#useful-links","title":"Useful Links","text":"<ul> <li> <p>The Percona XtraDB Cluster installation instructions</p> </li> <li> <p>The Percona XtraDB Cluster downloads</p> </li> <li> <p>The Percona XtraDB Cluster GitHub location</p> </li> <li> <p>To contribute to the documentation, review the Documentation Contribution Guide</p> </li> </ul>"},{"location":"release-notes/Percona-XtraDB-Cluster-8.0.28-19.1.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"},{"location":"release-notes/release-notes_index.html","title":"Percona XtraDB Cluster 8.0 release notes index","text":"<ul> <li> <p>Percona XtraDB Cluster 8.0.36-28 (2024-04-03)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.35-27 (2024-01-17)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.34-26 (2023-11-01)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.33-25 Update (2023-08-25)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.33-25 (2023-08-02)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.32-24.2 (2023-05-24)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.32-24 (2023-04-18)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.31-23.2 (2023-04-04)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.31-23 (2023-03-14)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.30-22 (2022-12-28)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.29-21 (2022-09-12)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.28-19.1 (2022-07-19)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.27-18.1 (2022-04-11)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.26-16.1 (2022-01-17)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.25-15.1 (2021-11-22)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.23-14.1 (2021-06-09)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.22-13.1 (2021-03-22)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.21-12.1 (2020-12-28)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.20-11.3 (2020-10-22)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.20-11.2 (2020-10-09)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.20-11 (2020-10-01)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.19-10 (2020-06-18)</p> </li> <li> <p>Percona XtraDB Cluster 8.0.18-9.3 (2020-04-29)</p> </li> </ul>"},{"location":"release-notes/release-notes_index.html#get-expert-help","title":"Get expert help","text":"<p>If you need assistance, visit the community forum for comprehensive and free database knowledge, or contact our Percona Database Experts for professional support and services.</p> <p> Community Forum  Get a Percona Expert</p>"}]}